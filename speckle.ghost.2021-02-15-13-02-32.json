{"db":[{"meta":{"exported_on":1613394152287,"version":"3.40.5"},"data":{"migrations_lock":[{"lock_key":"km01","locked":0,"acquired_at":"2021-01-24 10:49:22","released_at":"2021-01-24 10:49:23"}],"migrations":[{"id":1,"name":"1-create-tables.js","version":"init","currentVersion":"3.40"},{"id":2,"name":"2-create-fixtures.js","version":"init","currentVersion":"3.40"},{"id":3,"name":"1-post-excerpt.js","version":"1.3","currentVersion":"3.40"},{"id":4,"name":"1-codeinjection-post.js","version":"1.4","currentVersion":"3.40"},{"id":5,"name":"1-og-twitter-post.js","version":"1.5","currentVersion":"3.40"},{"id":6,"name":"1-add-backup-client.js","version":"1.7","currentVersion":"3.40"},{"id":7,"name":"1-add-permissions-redirect.js","version":"1.9","currentVersion":"3.40"},{"id":8,"name":"1-custom-template-post.js","version":"1.13","currentVersion":"3.40"},{"id":9,"name":"2-theme-permissions.js","version":"1.13","currentVersion":"3.40"},{"id":10,"name":"1-add-webhooks-table.js","version":"1.18","currentVersion":"3.40"},{"id":11,"name":"1-webhook-permissions.js","version":"1.19","currentVersion":"3.40"},{"id":12,"name":"1-remove-settings-keys.js","version":"1.20","currentVersion":"3.40"},{"id":13,"name":"1-add-contributor-role.js","version":"1.21","currentVersion":"3.40"},{"id":14,"name":"1-multiple-authors-DDL.js","version":"1.22","currentVersion":"3.40"},{"id":15,"name":"1-multiple-authors-DML.js","version":"1.22","currentVersion":"3.40"},{"id":16,"name":"1-update-koenig-beta-html.js","version":"1.25","currentVersion":"3.40"},{"id":17,"name":"2-demo-post.js","version":"1.25","currentVersion":"3.40"},{"id":18,"name":"1-rename-amp-column.js","version":"2.0","currentVersion":"3.40"},{"id":19,"name":"2-update-posts.js","version":"2.0","currentVersion":"3.40"},{"id":20,"name":"3-remove-koenig-labs.js","version":"2.0","currentVersion":"3.40"},{"id":21,"name":"4-permalink-setting.js","version":"2.0","currentVersion":"3.40"},{"id":22,"name":"5-remove-demo-post.js","version":"2.0","currentVersion":"3.40"},{"id":23,"name":"6-replace-fixture-posts.js","version":"2.0","currentVersion":"3.40"},{"id":24,"name":"1-add-sessions-table.js","version":"2.2","currentVersion":"3.40"},{"id":25,"name":"2-add-integrations-and-api-key-tables.js","version":"2.2","currentVersion":"3.40"},{"id":26,"name":"3-insert-admin-integration-role.js","version":"2.2","currentVersion":"3.40"},{"id":27,"name":"4-insert-integration-and-api-key-permissions.js","version":"2.2","currentVersion":"3.40"},{"id":28,"name":"5-add-mobiledoc-revisions-table.js","version":"2.2","currentVersion":"3.40"},{"id":29,"name":"1-add-webhook-columns.js","version":"2.3","currentVersion":"3.40"},{"id":30,"name":"2-add-webhook-edit-permission.js","version":"2.3","currentVersion":"3.40"},{"id":31,"name":"1-add-webhook-permission-roles.js","version":"2.6","currentVersion":"3.40"},{"id":32,"name":"1-add-members-table.js","version":"2.8","currentVersion":"3.40"},{"id":33,"name":"1-remove-empty-strings.js","version":"2.13","currentVersion":"3.40"},{"id":34,"name":"1-add-actions-table.js","version":"2.14","currentVersion":"3.40"},{"id":35,"name":"2-add-actions-permissions.js","version":"2.14","currentVersion":"3.40"},{"id":36,"name":"1-add-type-column-to-integrations.js","version":"2.15","currentVersion":"3.40"},{"id":37,"name":"2-insert-zapier-integration.js","version":"2.15","currentVersion":"3.40"},{"id":38,"name":"1-add-members-perrmissions.js","version":"2.16","currentVersion":"3.40"},{"id":39,"name":"1-normalize-settings.js","version":"2.17","currentVersion":"3.40"},{"id":40,"name":"2-posts-add-canonical-url.js","version":"2.17","currentVersion":"3.40"},{"id":41,"name":"1-restore-settings-from-backup.js","version":"2.18","currentVersion":"3.40"},{"id":42,"name":"1-update-editor-permissions.js","version":"2.21","currentVersion":"3.40"},{"id":43,"name":"1-add-member-permissions-to-roles.js","version":"2.22","currentVersion":"3.40"},{"id":44,"name":"1-insert-ghost-db-backup-role.js","version":"2.27","currentVersion":"3.40"},{"id":45,"name":"2-insert-db-backup-integration.js","version":"2.27","currentVersion":"3.40"},{"id":46,"name":"3-add-subdirectory-to-relative-canonical-urls.js","version":"2.27","currentVersion":"3.40"},{"id":47,"name":"1-add-db-backup-content-permission.js","version":"2.28","currentVersion":"3.40"},{"id":48,"name":"2-add-db-backup-content-permission-to-roles.js","version":"2.28","currentVersion":"3.40"},{"id":49,"name":"3-insert-ghost-scheduler-role.js","version":"2.28","currentVersion":"3.40"},{"id":50,"name":"4-insert-scheduler-integration.js","version":"2.28","currentVersion":"3.40"},{"id":51,"name":"5-add-scheduler-permission-to-roles.js","version":"2.28","currentVersion":"3.40"},{"id":52,"name":"6-add-type-column.js","version":"2.28","currentVersion":"3.40"},{"id":53,"name":"7-populate-type-column.js","version":"2.28","currentVersion":"3.40"},{"id":54,"name":"8-remove-page-column.js","version":"2.28","currentVersion":"3.40"},{"id":55,"name":"1-add-post-page-column.js","version":"2.29","currentVersion":"3.40"},{"id":56,"name":"2-populate-post-page-column.js","version":"2.29","currentVersion":"3.40"},{"id":57,"name":"3-remove-page-type-column.js","version":"2.29","currentVersion":"3.40"},{"id":58,"name":"1-remove-name-and-password-from-members-table.js","version":"2.31","currentVersion":"3.40"},{"id":59,"name":"01-add-members-stripe-customers-table.js","version":"2.32","currentVersion":"3.40"},{"id":60,"name":"02-add-name-to-members-table.js","version":"2.32","currentVersion":"3.40"},{"id":61,"name":"01-correct-members-stripe-customers-table.js","version":"2.33","currentVersion":"3.40"},{"id":62,"name":"01-add-stripe-customers-subscriptions-table.js","version":"2.34","currentVersion":"3.40"},{"id":63,"name":"02-add-email-to-members-stripe-customers-table.js","version":"2.34","currentVersion":"3.40"},{"id":64,"name":"03-add-name-to-members-stripe-customers-table.js","version":"2.34","currentVersion":"3.40"},{"id":65,"name":"01-add-note-to-members-table.js","version":"2.35","currentVersion":"3.40"},{"id":66,"name":"01-add-self-signup-and-from address-to-members-settings.js","version":"2.37","currentVersion":"3.40"},{"id":67,"name":"01-remove-user-ghost-auth-columns.js","version":"3.0","currentVersion":"3.40"},{"id":68,"name":"02-drop-token-auth-tables.js","version":"3.0","currentVersion":"3.40"},{"id":69,"name":"03-drop-client-auth-tables.js","version":"3.0","currentVersion":"3.40"},{"id":70,"name":"04-add-posts-meta-table.js","version":"3.0","currentVersion":"3.40"},{"id":71,"name":"05-populate-posts-meta-table.js","version":"3.0","currentVersion":"3.40"},{"id":72,"name":"06-remove-posts-meta-columns.js","version":"3.0","currentVersion":"3.40"},{"id":73,"name":"07-add-posts-type-column.js","version":"3.0","currentVersion":"3.40"},{"id":74,"name":"08-populate-posts-type-column.js","version":"3.0","currentVersion":"3.40"},{"id":75,"name":"09-remove-posts-page-column.js","version":"3.0","currentVersion":"3.40"},{"id":76,"name":"10-remove-empty-strings.js","version":"3.0","currentVersion":"3.40"},{"id":77,"name":"11-update-posts-html.js","version":"3.0","currentVersion":"3.40"},{"id":78,"name":"12-populate-members-table-from-subscribers.js","version":"3.0","currentVersion":"3.40"},{"id":79,"name":"13-drop-subscribers-table.js","version":"3.0","currentVersion":"3.40"},{"id":80,"name":"14-remove-subscribers-flag.js","version":"3.0","currentVersion":"3.40"},{"id":81,"name":"01-add-send-email-when-published-to-posts.js","version":"3.1","currentVersion":"3.40"},{"id":82,"name":"02-add-email-subject-to-posts-meta.js","version":"3.1","currentVersion":"3.40"},{"id":83,"name":"03-add-email-preview-permissions.js","version":"3.1","currentVersion":"3.40"},{"id":84,"name":"04-add-subscribed-flag-to-members.js","version":"3.1","currentVersion":"3.40"},{"id":85,"name":"05-add-emails-table.js","version":"3.1","currentVersion":"3.40"},{"id":86,"name":"06-add-email-permissions.js","version":"3.1","currentVersion":"3.40"},{"id":87,"name":"07-add-uuid-field-to-members.js","version":"3.1","currentVersion":"3.40"},{"id":88,"name":"08-add-uuid-values-to-members.js","version":"3.1","currentVersion":"3.40"},{"id":89,"name":"09-add-further-email-permissions.js","version":"3.1","currentVersion":"3.40"},{"id":90,"name":"10-add-email-error-data-column.js","version":"3.1","currentVersion":"3.40"},{"id":91,"name":"01-add-cancel-at-period-end-to-subscriptions.js","version":"3.2","currentVersion":"3.40"},{"id":92,"name":"1-add-labels-table.js","version":"3.6","currentVersion":"3.40"},{"id":93,"name":"2-add-members-labels-table.js","version":"3.6","currentVersion":"3.40"},{"id":94,"name":"3-add-labels-permissions.js","version":"3.6","currentVersion":"3.40"},{"id":95,"name":"01-fix-incorrect-member-labels-foreign-keys.js","version":"3.7","currentVersion":"3.40"},{"id":96,"name":"01-add-geolocation-to-members.js","version":"3.8","currentVersion":"3.40"},{"id":97,"name":"01-add-member-sigin-url-permissions.js","version":"3.9","currentVersion":"3.40"},{"id":98,"name":"01-remove-broken-complimentary-plan-from-members-settings.js","version":"3.11","currentVersion":"3.40"},{"id":99,"name":"01-add-identity-permission.js","version":"3.12","currentVersion":"3.40"},{"id":100,"name":"02-remove-legacy-is-paid-flag-from-settings.js","version":"3.12","currentVersion":"3.40"},{"id":101,"name":"01-add-email-preview-permissions-to-roles.js","version":"3.18","currentVersion":"3.40"},{"id":102,"name":"02-add-members_stripe_connect-auth-permissions.js","version":"3.18","currentVersion":"3.40"},{"id":103,"name":"01-update-member-from-email-address.js","version":"3.19","currentVersion":"3.40"},{"id":104,"name":"01-removed-legacy-values-from-settings-table.js","version":"3.22","currentVersion":"3.40"},{"id":105,"name":"02-settings-key-renames.js","version":"3.22","currentVersion":"3.40"},{"id":106,"name":"03-add-group-and-flags-to-settings.js","version":"3.22","currentVersion":"3.40"},{"id":107,"name":"04-populate-settings-groups-and-flags.js","version":"3.22","currentVersion":"3.40"},{"id":108,"name":"05-migrate-members-subscription-settings.js","version":"3.22","currentVersion":"3.40"},{"id":109,"name":"06-migrate-stripe-connect-settings.js","version":"3.22","currentVersion":"3.40"},{"id":110,"name":"07-update-type-for-settings.js","version":"3.22","currentVersion":"3.40"},{"id":111,"name":"01-migrate-bulk-email-settings.js","version":"3.23","currentVersion":"3.40"},{"id":112,"name":"02-remove-bulk-email-settings.js","version":"3.23","currentVersion":"3.40"},{"id":113,"name":"03-update-portal-button-setting.js","version":"3.23","currentVersion":"3.40"},{"id":114,"name":"04-add-meta-columns-to-tags-table.js","version":"3.23","currentVersion":"3.40"},{"id":115,"name":"01-populate-group-for-new-portal-settings.js","version":"3.24","currentVersion":"3.40"},{"id":116,"name":"01-add-members-stripe-webhook-settings.js","version":"3.25","currentVersion":"3.40"},{"id":117,"name":"01-add-amp-gtag-id-setting.js","version":"3.26","currentVersion":"3.40"},{"id":118,"name":"01-remove-duplicate-subscriptions.js","version":"3.29","currentVersion":"3.40"},{"id":119,"name":"02-remove-duplicate-customers.js","version":"3.29","currentVersion":"3.40"},{"id":120,"name":"03-remove-orphaned-customers.js","version":"3.29","currentVersion":"3.40"},{"id":121,"name":"04-remove-orphaned-subscriptions.js","version":"3.29","currentVersion":"3.40"},{"id":122,"name":"05-add-member-constraints.js","version":"3.29","currentVersion":"3.40"},{"id":123,"name":"01-add-member-signin-url-permission-roles.js","version":"3.30","currentVersion":"3.40"},{"id":124,"name":"01-add-member-support-address-setting.js","version":"3.32","currentVersion":"3.40"},{"id":125,"name":"02-add-member-reply-address-setting.js","version":"3.32","currentVersion":"3.40"},{"id":126,"name":"03-add-routes-hash-setting.js","version":"3.32","currentVersion":"3.40"},{"id":127,"name":"01-add-email-recipients-tables.js","version":"3.33","currentVersion":"3.40"},{"id":128,"name":"01-add-tokens-table.js","version":"3.34","currentVersion":"3.40"},{"id":129,"name":"01-add-address-columns-to-emails-table.js","version":"3.35","currentVersion":"3.40"},{"id":130,"name":"01-add-snippets-table.js","version":"3.36","currentVersion":"3.40"},{"id":131,"name":"02-add-snippets-permissions.js","version":"3.36","currentVersion":"3.40"},{"id":132,"name":"01-update-portal-button-setting.js","version":"3.37","currentVersion":"3.40"},{"id":133,"name":"01-add-email-recipient-filter-column.js","version":"3.38","currentVersion":"3.40"},{"id":134,"name":"02-populate-email-recipient-filter-column.js","version":"3.38","currentVersion":"3.40"},{"id":135,"name":"03-add-recipient-filter-column.js","version":"3.38","currentVersion":"3.40"},{"id":136,"name":"04-populate-recipient-filter-column.js","version":"3.38","currentVersion":"3.40"},{"id":137,"name":"05-add-emails-track-opens-column.js","version":"3.38","currentVersion":"3.40"},{"id":138,"name":"06-add-newsletter-settings.js","version":"3.38","currentVersion":"3.40"},{"id":139,"name":"07-migrate-newsletter-settings-from-config.js","version":"3.38","currentVersion":"3.40"},{"id":140,"name":"08-repopulate-send-email-when-published-down-migration.js","version":"3.38","currentVersion":"3.40"},{"id":141,"name":"09-remove-send-email-when-published-column.js","version":"3.38","currentVersion":"3.40"},{"id":142,"name":"01-add-members-signup-redirect-settings.js","version":"3.39","currentVersion":"3.40"},{"id":143,"name":"02-add-user-id-to-api-keys-table.js","version":"3.39","currentVersion":"3.40"},{"id":144,"name":"03-add-email-track-opens-setting.js","version":"3.39","currentVersion":"3.40"},{"id":145,"name":"04-add-cancellation-reason-column.js","version":"3.39","currentVersion":"3.40"},{"id":146,"name":"05-remove-unused-columns-on-emails.js","version":"3.39","currentVersion":"3.40"},{"id":147,"name":"06-add-email-recipient-index.js","version":"3.39","currentVersion":"3.40"},{"id":148,"name":"07-add-email-recipients-event-timestamps.js","version":"3.39","currentVersion":"3.40"},{"id":149,"name":"08-add-email-stats-columns.js","version":"3.39","currentVersion":"3.40"},{"id":150,"name":"01-add-members-email-open-rate-column.js","version":"3.40","currentVersion":"3.40"},{"id":151,"name":"02-add members-email-aggregation-columns.js","version":"3.40","currentVersion":"3.40"},{"id":152,"name":"03-populate-members-email-counts.js","version":"3.40","currentVersion":"3.40"}],"posts":[{"id":"600d50b3d9877fa6cc16195a","uuid":"77ef591e-c178-42f4-8986-f63639b9937e","title":"Data Curation","slug":"themes","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"image\",{\"src\":\"https://static.ghost.org/v3.0.0/images/theme-marketplace.png\",\"caption\":\"Anyone can write a completely custom Ghost theme with some solid knowledge of HTML and CSS\",\"alt\":\"Ghost theme marketplace screenshot\"}]],\"markups\":[[\"a\",[\"href\",\"https://ghost.org/marketplace/\"]],[\"code\"],[\"a\",[\"href\",\"https://github.com/TryGhost/Casper\"]],[\"a\",[\"href\",\"https://ghost.org/docs/api/handlebars-themes/\"]],[\"a\",[\"href\",\"https://github.com/TryGhost/Starter/\"]],[\"strong\"],[\"a\",[\"href\",\"https://forum.ghost.org/c/themes\"]]],\"sections\":[[1,\"h2\",[[0,[],0,\"Ghost themes\"]]],[1,\"p\",[[0,[],0,\"Ghost comes with a default theme called Casper, which is designed to be a clean, readable publication layout and can be easily adapted for most purposes.\"]]],[1,\"p\",[[0,[],0,\"If you need something a little more customised, it's entirely possible to build on top of existing open source themes, or to build your own from scratch. Rather than giving you a few basic settings which act as a poor proxy for code, we just let you write code.\"]]],[1,\"h2\",[[0,[],0,\"Marketplace\"]]],[1,\"p\",[[0,[],0,\"There are a huge range of both free and premium pre-built themes which you can download from the \"],[0,[0],1,\"Ghost Theme Marketplace\"],[0,[],0,\":\"]]],[10,0],[1,\"h2\",[[0,[],0,\"Theme development\"]]],[1,\"p\",[[0,[],0,\"Ghost themes are written with a templating language called handlebars, which has a set of dynamic helpers to insert your data into template files. For example: \"],[0,[1],1,\"{{author.name}}\"],[0,[],0,\" outputs the name of the current author.\"]]],[1,\"p\",[[0,[],0,\"The best way to learn how to write your own Ghost theme is to have a look at \"],[0,[2],1,\"the source code for Casper\"],[0,[],0,\", which is heavily commented and should give you a sense of how everything fits together.\"],[1,[],0,0]]],[3,\"ul\",[[[0,[1],1,\"default.hbs\"],[0,[],0,\" is the main template file, all contexts will load inside this file unless specifically told to use a different template.\"]],[[0,[1],1,\"post.hbs\"],[0,[],0,\" is the file used in the context of viewing a post.\"]],[[0,[1],1,\"index.hbs\"],[0,[],0,\" is the file used in the context of viewing the home page.\"]],[[0,[],0,\"and so on\"]]]],[1,\"p\",[[0,[],0,\"We've got \"],[0,[3],1,\"full and extensive theme documentation\"],[0,[],0,\" which outlines every template file, context and helper that you can use. You can also get started with our useful \"],[0,[4],1,\"starter theme\"],[0,[],0,\", which includes the most common foundations and components required to build your own theme.\"]]],[1,\"blockquote\",[[0,[],0,\"If you want to chat with other people making Ghost themes to get any advice or help, there's also a \"],[0,[5],1,\"themes\"],[0,[],0,\" section on our \"],[0,[6],1,\"public Ghost forum\"],[0,[],0,\".\"]]]]}","html":"<h2 id=\"ghost-themes\">Ghost themes</h2><p>Ghost comes with a default theme called Casper, which is designed to be a clean, readable publication layout and can be easily adapted for most purposes.</p><p>If you need something a little more customised, it's entirely possible to build on top of existing open source themes, or to build your own from scratch. Rather than giving you a few basic settings which act as a poor proxy for code, we just let you write code.</p><h2 id=\"marketplace\">Marketplace</h2><p>There are a huge range of both free and premium pre-built themes which you can download from the <a href=\"https://ghost.org/marketplace/\">Ghost Theme Marketplace</a>:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://static.ghost.org/v3.0.0/images/theme-marketplace.png\" class=\"kg-image\" alt=\"Ghost theme marketplace screenshot\"><figcaption>Anyone can write a completely custom Ghost theme with some solid knowledge of HTML and CSS</figcaption></figure><h2 id=\"theme-development\">Theme development</h2><p>Ghost themes are written with a templating language called handlebars, which has a set of dynamic helpers to insert your data into template files. For example: <code>{{author.name}}</code> outputs the name of the current author.</p><p>The best way to learn how to write your own Ghost theme is to have a look at <a href=\"https://github.com/TryGhost/Casper\">the source code for Casper</a>, which is heavily commented and should give you a sense of how everything fits together.<br></p><ul><li><code>default.hbs</code> is the main template file, all contexts will load inside this file unless specifically told to use a different template.</li><li><code>post.hbs</code> is the file used in the context of viewing a post.</li><li><code>index.hbs</code> is the file used in the context of viewing the home page.</li><li>and so on</li></ul><p>We've got <a href=\"https://ghost.org/docs/api/handlebars-themes/\">full and extensive theme documentation</a> which outlines every template file, context and helper that you can use. You can also get started with our useful <a href=\"https://github.com/TryGhost/Starter/\">starter theme</a>, which includes the most common foundations and components required to build your own theme.</p><blockquote>If you want to chat with other people making Ghost themes to get any advice or help, there's also a <strong>themes</strong> section on our <a href=\"https://forum.ghost.org/c/themes\">public Ghost forum</a>.</blockquote>","comment_id":"600d50b3d9877fa6cc16195a","plaintext":"Ghost themes\nGhost comes with a default theme called Casper, which is designed to be a clean,\nreadable publication layout and can be easily adapted for most purposes.\n\nIf you need something a little more customised, it's entirely possible to build\non top of existing open source themes, or to build your own from scratch. Rather\nthan giving you a few basic settings which act as a poor proxy for code, we just\nlet you write code.\n\nMarketplace\nThere are a huge range of both free and premium pre-built themes which you can\ndownload from the Ghost Theme Marketplace [https://ghost.org/marketplace/]:\n\nAnyone can write a completely custom Ghost theme with some solid knowledge of\nHTML and CSSTheme development\nGhost themes are written with a templating language called handlebars, which has\na set of dynamic helpers to insert your data into template files. For example: \n{{author.name}} outputs the name of the current author.\n\nThe best way to learn how to write your own Ghost theme is to have a look at \nthe\nsource code for Casper [https://github.com/TryGhost/Casper], which is heavily\ncommented and should give you a sense of how everything fits together.\n\n\n * default.hbs is the main template file, all contexts will load inside this\n   file unless specifically told to use a different template.\n * post.hbs is the file used in the context of viewing a post.\n * index.hbs is the file used in the context of viewing the home page.\n * and so on\n\nWe've got full and extensive theme documentation\n[https://ghost.org/docs/api/handlebars-themes/] which outlines every template\nfile, context and helper that you can use. You can also get started with our\nuseful starter theme [https://github.com/TryGhost/Starter/], which includes the\nmost common foundations and components required to build your own theme.\n\n> If you want to chat with other people making Ghost themes to get any advice or\nhelp, there's also a themes section on our public Ghost forum\n[https://forum.ghost.org/c/themes].","feature_image":"https://static.ghost.org/v3.0.0/images/creating-a-custom-theme.png","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-01-24 10:49:23","updated_at":"2021-02-15 11:22:27","published_at":"2021-02-02 10:49:00","custom_excerpt":"Ghost comes with a beautiful default theme designed for publishers which can easily be adapted for most purposes, or you can build a custom theme to suit your needs.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"600d50b3d9877fa6cc16195c","uuid":"0792c790-d4cc-4f8d-9c73-e4edf80a4864","title":"Apps & integrations","slug":"apps-integrations","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"https://static.ghost.org/v3.0.0/images/integrations-icons.png\",\"cardWidth\":\"full\"}],[\"image\",{\"src\":\"https://static.ghost.org/v3.0.0/images/integrations-and-webhooks-in-ghost.png\",\"alt\":\"Screenshot of custom integrations with webhooks in Ghost Admin\",\"cardWidth\":\"\"}]],\"markups\":[[\"a\",[\"href\",\"https://ghost.org/integrations/\"]],[\"a\",[\"href\",\"https://zapier.com\"]],[\"strong\"],[\"a\",[\"href\",\"https://ghost.org/docs/api/\"]],[\"a\",[\"href\",\"/themes/\"]]],\"sections\":[[1,\"h2\",[[0,[],0,\"Work with your existing tools\"]]],[1,\"p\",[[0,[],0,\"It's possible to connect your Ghost site to hundreds of the most popular apps and tools using integrations that take no more than a few minutes to setup.\"]]],[1,\"p\",[[0,[],0,\"Whether you need to automate workflows, connect your email list, build a community or embed products from your ecommerce store, our \"],[0,[0],1,\"integrations library\"],[0,[],0,\" has got it all covered with hundreds of tutorials.\"]]],[10,0],[1,\"h2\",[[0,[],0,\"Zapier\"]]],[1,\"p\",[[0,[],0,\"On top of this, you can connect your Ghost site to more than 1,000 external services using the official integration with \"],[0,[1],1,\"Zapier\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[],0,\"Zapier sets up automations with Triggers and Actions, which allows you to create and customise a wide range of connected applications.\"]]],[1,\"blockquote\",[[0,[2],1,\"Example\"],[0,[],0,\": When someone new subscribes to a newsletter on a Ghost site (Trigger) then the contact information is automatically pushed into MailChimp (Action).\"]]],[1,\"h2\",[[0,[],0,\"Custom integrations\"]]],[1,\"p\",[[0,[],0,\"At the heart of Ghost sits a robust JSON API – designed to create, manage and retrieve content with ease. \"]]],[1,\"p\",[[0,[],0,\"It's possible to create custom Ghost integrations with dedicated API keys and webhooks from the Integrations page within Ghost Admin. \"]]],[10,1],[1,\"p\",[[0,[],0,\"Beyond that, the API allows you to build entirely custom publishing apps. You can send content from your favourite desktop editor, build a custom interface for handling editorial workflow or use Ghost as a full headless CMS with a custom front-end.\"]]],[1,\"p\",[[0,[],0,\"The Ghost API is \"],[0,[3],1,\"thoroughly documented\"],[0,[],0,\" and straightforward to work with for developers of almost any level. \"]]],[1,\"h2\",[[0,[],0,\"Final step: Themes\"]]],[1,\"p\",[[0,[],0,\"Alright, on to the last post in our welcome-series! If you're curious about creating your own Ghost theme from scratch, \"],[0,[4],1,\"find out how that works\"],[0,[],0,\".\"]]]]}","html":"<h2 id=\"work-with-your-existing-tools\">Work with your existing tools</h2><p>It's possible to connect your Ghost site to hundreds of the most popular apps and tools using integrations that take no more than a few minutes to setup.</p><p>Whether you need to automate workflows, connect your email list, build a community or embed products from your ecommerce store, our <a href=\"https://ghost.org/integrations/\">integrations library</a> has got it all covered with hundreds of tutorials.</p><figure class=\"kg-card kg-image-card kg-width-full\"><img src=\"https://static.ghost.org/v3.0.0/images/integrations-icons.png\" class=\"kg-image\" alt></figure><h2 id=\"zapier\">Zapier</h2><p>On top of this, you can connect your Ghost site to more than 1,000 external services using the official integration with <a href=\"https://zapier.com\">Zapier</a>.</p><p>Zapier sets up automations with Triggers and Actions, which allows you to create and customise a wide range of connected applications.</p><blockquote><strong>Example</strong>: When someone new subscribes to a newsletter on a Ghost site (Trigger) then the contact information is automatically pushed into MailChimp (Action).</blockquote><h2 id=\"custom-integrations\">Custom integrations</h2><p>At the heart of Ghost sits a robust JSON API – designed to create, manage and retrieve content with ease. </p><p>It's possible to create custom Ghost integrations with dedicated API keys and webhooks from the Integrations page within Ghost Admin. </p><figure class=\"kg-card kg-image-card\"><img src=\"https://static.ghost.org/v3.0.0/images/integrations-and-webhooks-in-ghost.png\" class=\"kg-image\" alt=\"Screenshot of custom integrations with webhooks in Ghost Admin\"></figure><p>Beyond that, the API allows you to build entirely custom publishing apps. You can send content from your favourite desktop editor, build a custom interface for handling editorial workflow or use Ghost as a full headless CMS with a custom front-end.</p><p>The Ghost API is <a href=\"https://ghost.org/docs/api/\">thoroughly documented</a> and straightforward to work with for developers of almost any level. </p><h2 id=\"final-step-themes\">Final step: Themes</h2><p>Alright, on to the last post in our welcome-series! If you're curious about creating your own Ghost theme from scratch, <a href=\"/themes/\">find out how that works</a>.</p>","comment_id":"600d50b3d9877fa6cc16195c","plaintext":"Work with your existing tools\nIt's possible to connect your Ghost site to hundreds of the most popular apps\nand tools using integrations that take no more than a few minutes to setup.\n\nWhether you need to automate workflows, connect your email list, build a\ncommunity or embed products from your ecommerce store, our integrations library\n[https://ghost.org/integrations/] has got it all covered with hundreds of\ntutorials.\n\nZapier\nOn top of this, you can connect your Ghost site to more than 1,000 external\nservices using the official integration with Zapier [https://zapier.com].\n\nZapier sets up automations with Triggers and Actions, which allows you to create\nand customise a wide range of connected applications.\n\n> Example: When someone new subscribes to a newsletter on a Ghost site (Trigger)\nthen the contact information is automatically pushed into MailChimp (Action).\nCustom integrations\nAt the heart of Ghost sits a robust JSON API – designed to create, manage and\nretrieve content with ease. \n\nIt's possible to create custom Ghost integrations with dedicated API keys and\nwebhooks from the Integrations page within Ghost Admin. \n\nBeyond that, the API allows you to build entirely custom publishing apps. You\ncan send content from your favourite desktop editor, build a custom interface\nfor handling editorial workflow or use Ghost as a full headless CMS with a\ncustom front-end.\n\nThe Ghost API is thoroughly documented [https://ghost.org/docs/api/] and\nstraightforward to work with for developers of almost any level. \n\nFinal step: Themes\nAlright, on to the last post in our welcome-series! If you're curious about\ncreating your own Ghost theme from scratch, find out how that works [/themes/].","feature_image":"https://static.ghost.org/v3.0.0/images/app-integrations.png","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-01-24 10:49:23","updated_at":"2021-02-14 19:22:39","published_at":"2021-01-24 10:49:24","custom_excerpt":"Built to be extended: easily register and distribute custom applications to your users.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"600d50b3d9877fa6cc16195e","uuid":"2f0170a1-0b11-4605-8e1a-4f5ee1536a10","title":"Data, not Files","slug":"organising-content","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[],\"markups\":[[\"code\"],[\"em\"],[\"strong\"],[\"a\",[\"href\",\"https://ghost.org/docs/api/handlebars-themes/\"]],[\"a\",[\"href\",\"http://yaml.org/spec/1.2/spec.html\",\"rel\",\"noreferrer nofollow noopener\"]],[\"a\",[\"href\",\"https://ghost.org/docs/api/handlebars-themes/routing/\"]],[\"a\",[\"href\",\"/apps-integrations/\"]]],\"sections\":[[1,\"h2\",[[0,[],0,\"Sensible tagging\"]]],[1,\"p\",[[0,[],0,\"You can think of tags like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content.\"]]],[1,\"p\",[[0,[],0,\"When you create content for your publication you can assign tags to help differentiate between categories of content. \"]]],[1,\"p\",[[0,[],0,\"For example you may tag some content with News and other content with Podcast, which would create two distinct categories of content listed on \"],[0,[0],1,\"/tag/news/\"],[0,[],0,\" and \"],[0,[0],1,\"/tag/podcast/\"],[0,[],0,\", respectively.\"]]],[1,\"p\",[[0,[],0,\"If you tag a post with both \"],[0,[0],1,\"News\"],[0,[],0,\" \"],[0,[1],1,\"and\"],[0,[],0,\" \"],[0,[0],1,\"Podcast\"],[0,[],0,\" - then it appears in both sections. Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data.\"]]],[1,\"h3\",[[0,[],0,\"The primary tag\"]]],[1,\"p\",[[0,[],0,\"Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. \"]]],[1,\"blockquote\",[[0,[1,2],1,\"News\"],[0,[],1,\", Technology, Startup\"]]],[1,\"p\",[[0,[],0,\"So you can add the most important tag which you want to show up in your theme, but also add related tags which are less important.\"]]],[1,\"h3\",[[0,[],0,\"Private tags\"]]],[1,\"p\",[[0,[],0,\"Sometimes you may want to assign a post a specific tag, but you don't necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling.\"]]],[1,\"p\",[[0,[],0,\"For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do.\"]]],[1,\"blockquote\",[[0,[1,2],1,\"News\"],[0,[],1,\", #video\"]]],[1,\"p\",[[0,[],0,\"Here, the theme would assign the post publicly displayed tags of News - but it would also keep a private record of the post being tagged with #video. In your theme, you could then look for private tags conditionally and give them special formatting. \"]]],[1,\"blockquote\",[[0,[1],0,\"You can find documentation for theme development techniques like this and many more over on Ghost's extensive \"],[0,[3],1,\"theme docs\"],[0,[],1,\".\"]]],[1,\"h2\",[[0,[],0,\"Dynamic routing\"]]],[1,\"p\",[[0,[],0,\"Dynamic routing gives you the ultimate freedom to build a custom publication to suit your needs. Routes are rules that map URL patterns to your content and templates. \"]]],[1,\"p\",[[0,[],0,\"You may not want content tagged with \"],[0,[0],1,\"News\"],[0,[],0,\" to exist on: \"],[0,[0],1,\"example.com/tag/news\"],[0,[],0,\". Instead, you want it to exist on \"],[0,[0],1,\"example.com/news\"],[0,[],0,\" .\"]]],[1,\"p\",[[0,[],0,\"In this case you can use dynamic routes to create customised collections of content on your site. It's also possible to use multiple templates in your theme to render each content type differently.\"]]],[1,\"p\",[[0,[],0,\"There are lots of use cases for dynamic routing with Ghost, here are a few common examples: \"]]],[3,\"ul\",[[[0,[],0,\"Setting a custom home page with its own template\"]],[[0,[],0,\"Having separate content hubs for blog and podcast, that render differently, and have custom RSS feeds to support two types of content\"]],[[0,[],0,\"Creating a founders column as a unique view, by filtering content created by specific authors\"]],[[0,[],0,\"Including dates in permalinks for your posts\"]],[[0,[],0,\"Setting posts to have a URL relative to their primary tag like \"],[0,[0],1,\"example.com/europe/story-title/\"],[1,[],0,0]]]],[1,\"blockquote\",[[0,[1],0,\"Dynamic routing can be configured in Ghost using \"],[0,[4],1,\"YAML\"],[0,[],0,\" files. Read our dynamic routing \"],[0,[5],1,\"documentation\"],[0,[],1,\" for further details.\"]]],[1,\"h2\",[[0,[],0,\"Next: Apps & Integrations\"]]],[1,\"p\",[[0,[],0,\"Work with all your favourite apps and tools using our \"],[0,[6],1,\"integrations\"],[0,[],0,\", or create your own custom integrations with webhooks.\"]]],[1,\"p\",[]]]}","html":"<h2 id=\"sensible-tagging\">Sensible tagging</h2><p>You can think of tags like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content.</p><p>When you create content for your publication you can assign tags to help differentiate between categories of content. </p><p>For example you may tag some content with News and other content with Podcast, which would create two distinct categories of content listed on <code>/tag/news/</code> and <code>/tag/podcast/</code>, respectively.</p><p>If you tag a post with both <code>News</code> <em>and</em> <code>Podcast</code> - then it appears in both sections. Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data.</p><h3 id=\"the-primary-tag\">The primary tag</h3><p>Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. </p><blockquote><em><strong>News</strong>, Technology, Startup</em></blockquote><p>So you can add the most important tag which you want to show up in your theme, but also add related tags which are less important.</p><h3 id=\"private-tags\">Private tags</h3><p>Sometimes you may want to assign a post a specific tag, but you don't necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling.</p><p>For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do.</p><blockquote><em><strong>News</strong>, #video</em></blockquote><p>Here, the theme would assign the post publicly displayed tags of News - but it would also keep a private record of the post being tagged with #video. In your theme, you could then look for private tags conditionally and give them special formatting. </p><blockquote><em>You can find documentation for theme development techniques like this and many more over on Ghost's extensive <a href=\"https://ghost.org/docs/api/handlebars-themes/\">theme docs</a>.</em></blockquote><h2 id=\"dynamic-routing\">Dynamic routing</h2><p>Dynamic routing gives you the ultimate freedom to build a custom publication to suit your needs. Routes are rules that map URL patterns to your content and templates. </p><p>You may not want content tagged with <code>News</code> to exist on: <code>example.com/tag/news</code>. Instead, you want it to exist on <code>example.com/news</code> .</p><p>In this case you can use dynamic routes to create customised collections of content on your site. It's also possible to use multiple templates in your theme to render each content type differently.</p><p>There are lots of use cases for dynamic routing with Ghost, here are a few common examples: </p><ul><li>Setting a custom home page with its own template</li><li>Having separate content hubs for blog and podcast, that render differently, and have custom RSS feeds to support two types of content</li><li>Creating a founders column as a unique view, by filtering content created by specific authors</li><li>Including dates in permalinks for your posts</li><li>Setting posts to have a URL relative to their primary tag like <code>example.com/europe/story-title/</code><br></li></ul><blockquote><em>Dynamic routing can be configured in Ghost using <a href=\"http://yaml.org/spec/1.2/spec.html\" rel=\"noreferrer nofollow noopener\">YAML</a> files. Read our dynamic routing <a href=\"https://ghost.org/docs/api/handlebars-themes/routing/\">documentation</a> for further details.</em></blockquote><h2 id=\"next-apps-integrations\">Next: Apps &amp; Integrations</h2><p>Work with all your favourite apps and tools using our <a href=\"/apps-integrations/\">integrations</a>, or create your own custom integrations with webhooks.</p>","comment_id":"600d50b3d9877fa6cc16195e","plaintext":"Sensible tagging\nYou can think of tags like Gmail labels. By tagging posts with one or more\nkeyword, you can organise articles into buckets of related content.\n\nWhen you create content for your publication you can assign tags to help\ndifferentiate between categories of content. \n\nFor example you may tag some content with News and other content with Podcast,\nwhich would create two distinct categories of content listed on /tag/news/ and \n/tag/podcast/, respectively.\n\nIf you tag a post with both News and Podcast - then it appears in both sections.\nTag archives are like dedicated home-pages for each category of content that you\nhave. They have their own pages, their own RSS feeds, and can support their own\ncover images and meta data.\n\nThe primary tag\nInside the Ghost editor, you can drag and drop tags into a specific order. The\nfirst tag in the list is always given the most importance, and some themes will\nonly display the primary tag (the first tag in the list) by default. \n\n> News, Technology, Startup\nSo you can add the most important tag which you want to show up in your theme,\nbut also add related tags which are less important.\n\nPrivate tags\nSometimes you may want to assign a post a specific tag, but you don't\nnecessarily want that tag appearing in the theme or creating an archive page. In\nGhost, hashtags are private and can be used for special styling.\n\nFor example, if you sometimes publish posts with video content - you might want\nyour theme to adapt and get rid of the sidebar for these posts, to give more\nspace for an embedded video to fill the screen. In this case, you could use\nprivate tags to tell your theme what to do.\n\n> News, #video\nHere, the theme would assign the post publicly displayed tags of News - but it\nwould also keep a private record of the post being tagged with #video. In your\ntheme, you could then look for private tags conditionally and give them special\nformatting. \n\n> You can find documentation for theme development techniques like this and many\nmore over on Ghost's extensive theme docs\n[https://ghost.org/docs/api/handlebars-themes/].\nDynamic routing\nDynamic routing gives you the ultimate freedom to build a custom publication to\nsuit your needs. Routes are rules that map URL patterns to your content and\ntemplates. \n\nYou may not want content tagged with News to exist on: example.com/tag/news.\nInstead, you want it to exist on example.com/news .\n\nIn this case you can use dynamic routes to create customised collections of\ncontent on your site. It's also possible to use multiple templates in your theme\nto render each content type differently.\n\nThere are lots of use cases for dynamic routing with Ghost, here are a few\ncommon examples: \n\n * Setting a custom home page with its own template\n * Having separate content hubs for blog and podcast, that render differently,\n   and have custom RSS feeds to support two types of content\n * Creating a founders column as a unique view, by filtering content created by\n   specific authors\n * Including dates in permalinks for your posts\n * Setting posts to have a URL relative to their primary tag like \n   example.com/europe/story-title/\n   \n\n> Dynamic routing can be configured in Ghost using YAML\n[http://yaml.org/spec/1.2/spec.html] files. Read our dynamic routing \ndocumentation [https://ghost.org/docs/api/handlebars-themes/routing/] for\nfurther details.\nNext: Apps & Integrations\nWork with all your favourite apps and tools using our integrations\n[/apps-integrations/], or create your own custom integrations with webhooks.","feature_image":"https://static.ghost.org/v3.0.0/images/organising-your-content.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-01-24 10:49:23","updated_at":"2021-02-05 10:22:29","published_at":"2021-01-24 10:49:25","custom_excerpt":"Ghost has a flexible organisational taxonomy called tags and the ability to create custom site structures using dynamic routes.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"600d50b3d9877fa6cc161960","uuid":"6ab9cfb8-351a-41ee-8d79-9b9215e6c44a","title":"Transparent API","slug":"admin-settings","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}]],\"cards\":[[\"image\",{\"src\":\"https://static.ghost.org/v1.0.0/images/private.png\"}]],\"markups\":[[\"em\"],[\"strong\"],[\"a\",[\"href\",\"https://ghost.org/pricing/\"]],[\"a\",[\"href\",\"/organising-content/\"]]],\"sections\":[[1,\"h2\",[[0,[],0,\"Make your site private\"]]],[1,\"p\",[[0,[],0,\"If you've got a publication that you don't want the world to see yet because it's not ready to launch, you can hide your Ghost site behind a basic shared pass-phrase.\"]]],[1,\"p\",[[0,[],0,\"You can toggle this preference on at the bottom of Ghost's General Settings:\"]]],[10,0],[1,\"p\",[[0,[],0,\"Ghost will give you a short, randomly generated pass-phrase which you can share with anyone who needs access to the site while you're working on it. While this setting is enabled, all search engine optimisation features will be switched off to help keep your site under the radar.\"]]],[1,\"p\",[[0,[],0,\"Do remember though, this is \"],[0,[0],1,\"not\"],[0,[],0,\" secure authentication. You shouldn't rely on this feature for protecting important private data. It's just a simple, shared pass-phrase for some very basic privacy.\"]]],[1,\"h2\",[[0,[],0,\"Invite your team \"]]],[1,\"p\",[[0,[],0,\"Ghost has a number of different user roles for your team:\"]]],[1,\"p\",[[0,[1],1,\"Contributors\"],[1,[],0,0],[0,[],0,\"This is the base user level in Ghost. Contributors can create and edit their own draft posts, but they are unable to edit drafts of others or publish posts. Contributors are \"],[0,[1],1,\"untrusted\"],[0,[],0,\" users with the most basic access to your publication.\"]]],[1,\"p\",[[0,[1],1,\"Authors\"],[1,[],0,1],[0,[],0,\"Authors are the 2nd user level in Ghost. Authors can write, edit  and publish their own posts. Authors are \"],[0,[1],1,\"trusted\"],[0,[],0,\" users. If you don't trust users to be allowed to publish their own posts, they should be set as Contributors.\"]]],[1,\"p\",[[0,[1],1,\"Editors\"],[1,[],0,2],[0,[],0,\"Editors are the 3rd user level in Ghost. Editors can do everything that an Author can do, but they can also edit and publish the posts of others - as well as their own. Editors can also invite new Contributors & Authors to the site.\"]]],[1,\"p\",[[0,[1],1,\"Administrators\"],[1,[],0,3],[0,[],0,\"The top user level in Ghost is Administrator. Again, administrators can do everything that Authors and Editors can do, but they can also edit all site settings and data, not just content. Additionally, administrators have full access to invite, manage or remove any other user of the site.\"],[1,[],0,4],[1,[],0,5],[0,[1],1,\"The Owner\"],[1,[],0,6],[0,[],0,\"There is only ever one owner of a Ghost site. The owner is a special user which has all the same permissions as an Administrator, but with two exceptions: The Owner can never be deleted. And in some circumstances the owner will have access to additional special settings if applicable. For example: billing details, if using \"],[0,[2,1],2,\"Ghost(Pro)\"],[0,[],0,\".\"]]],[1,\"blockquote\",[[0,[0],1,\"It's a good idea to ask all of your users to fill out their user profiles, including bio and social links. These will populate rich structured data for posts and generally create more opportunities for themes to fully populate their design.\"]]],[1,\"h2\",[[0,[],0,\"Next: Organising content\"]]],[1,\"p\",[[0,[],0,\"Find out how to \"],[0,[3],1,\"organise your content\"],[0,[],0,\" with sensible tags and authors, or for more advanced configurations, how to create custom content structures using dynamic routing.\"]]]]}","html":"<h2 id=\"make-your-site-private\">Make your site private</h2><p>If you've got a publication that you don't want the world to see yet because it's not ready to launch, you can hide your Ghost site behind a basic shared pass-phrase.</p><p>You can toggle this preference on at the bottom of Ghost's General Settings:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://static.ghost.org/v1.0.0/images/private.png\" class=\"kg-image\" alt></figure><p>Ghost will give you a short, randomly generated pass-phrase which you can share with anyone who needs access to the site while you're working on it. While this setting is enabled, all search engine optimisation features will be switched off to help keep your site under the radar.</p><p>Do remember though, this is <em>not</em> secure authentication. You shouldn't rely on this feature for protecting important private data. It's just a simple, shared pass-phrase for some very basic privacy.</p><h2 id=\"invite-your-team\">Invite your team </h2><p>Ghost has a number of different user roles for your team:</p><p><strong>Contributors</strong><br>This is the base user level in Ghost. Contributors can create and edit their own draft posts, but they are unable to edit drafts of others or publish posts. Contributors are <strong>untrusted</strong> users with the most basic access to your publication.</p><p><strong>Authors</strong><br>Authors are the 2nd user level in Ghost. Authors can write, edit  and publish their own posts. Authors are <strong>trusted</strong> users. If you don't trust users to be allowed to publish their own posts, they should be set as Contributors.</p><p><strong>Editors</strong><br>Editors are the 3rd user level in Ghost. Editors can do everything that an Author can do, but they can also edit and publish the posts of others - as well as their own. Editors can also invite new Contributors &amp; Authors to the site.</p><p><strong>Administrators</strong><br>The top user level in Ghost is Administrator. Again, administrators can do everything that Authors and Editors can do, but they can also edit all site settings and data, not just content. Additionally, administrators have full access to invite, manage or remove any other user of the site.<br><br><strong>The Owner</strong><br>There is only ever one owner of a Ghost site. The owner is a special user which has all the same permissions as an Administrator, but with two exceptions: The Owner can never be deleted. And in some circumstances the owner will have access to additional special settings if applicable. For example: billing details, if using <a href=\"https://ghost.org/pricing/\"><strong>Ghost(Pro)</strong></a>.</p><blockquote><em>It's a good idea to ask all of your users to fill out their user profiles, including bio and social links. These will populate rich structured data for posts and generally create more opportunities for themes to fully populate their design.</em></blockquote><h2 id=\"next-organising-content\">Next: Organising content</h2><p>Find out how to <a href=\"/organising-content/\">organise your content</a> with sensible tags and authors, or for more advanced configurations, how to create custom content structures using dynamic routing.</p>","comment_id":"600d50b3d9877fa6cc161960","plaintext":"Make your site private\nIf you've got a publication that you don't want the world to see yet because\nit's not ready to launch, you can hide your Ghost site behind a basic shared\npass-phrase.\n\nYou can toggle this preference on at the bottom of Ghost's General Settings:\n\nGhost will give you a short, randomly generated pass-phrase which you can share\nwith anyone who needs access to the site while you're working on it. While this\nsetting is enabled, all search engine optimisation features will be switched off\nto help keep your site under the radar.\n\nDo remember though, this is not secure authentication. You shouldn't rely on\nthis feature for protecting important private data. It's just a simple, shared\npass-phrase for some very basic privacy.\n\nInvite your team \nGhost has a number of different user roles for your team:\n\nContributors\nThis is the base user level in Ghost. Contributors can create and edit their own\ndraft posts, but they are unable to edit drafts of others or publish posts.\nContributors are untrusted users with the most basic access to your publication.\n\nAuthors\nAuthors are the 2nd user level in Ghost. Authors can write, edit  and publish\ntheir own posts. Authors are trusted users. If you don't trust users to be\nallowed to publish their own posts, they should be set as Contributors.\n\nEditors\nEditors are the 3rd user level in Ghost. Editors can do everything that an\nAuthor can do, but they can also edit and publish the posts of others - as well\nas their own. Editors can also invite new Contributors & Authors to the site.\n\nAdministrators\nThe top user level in Ghost is Administrator. Again, administrators can do\neverything that Authors and Editors can do, but they can also edit all site\nsettings and data, not just content. Additionally, administrators have full\naccess to invite, manage or remove any other user of the site.\n\nThe Owner\nThere is only ever one owner of a Ghost site. The owner is a special user which\nhas all the same permissions as an Administrator, but with two exceptions: The\nOwner can never be deleted. And in some circumstances the owner will have access\nto additional special settings if applicable. For example: billing details, if\nusing Ghost(Pro) [https://ghost.org/pricing/].\n\n> It's a good idea to ask all of your users to fill out their user profiles,\nincluding bio and social links. These will populate rich structured data for\nposts and generally create more opportunities for themes to fully populate their\ndesign.\nNext: Organising content\nFind out how to organise your content [/organising-content/] with sensible tags\nand authors, or for more advanced configurations, how to create custom content\nstructures using dynamic routing.","feature_image":"https://static.ghost.org/v3.0.0/images/admin-settings.png","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-01-24 10:49:23","updated_at":"2021-02-02 21:16:28","published_at":"2021-01-24 10:49:26","custom_excerpt":"Speckle's GraphQL API is accessible and easy to explore.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"600d50b3d9877fa6cc161962","uuid":"7ca62c63-76d0-453e-8bc9-d5eb2afb3d43","title":"Sharing And Collaborating","slug":"publishing-options","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"{\\n    \\\"@context\\\": \\\"https://schema.org\\\",\\n    \\\"@type\\\": \\\"Article\\\",\\n    \\\"publisher\\\": {\\n        \\\"@type\\\": \\\"Organization\\\",\\n        \\\"name\\\": \\\"Publishing options\\\",\\n        \\\"logo\\\": \\\"https://static.ghost.org/ghost-logo.svg\\\"\\n    },\\n    \\\"author\\\": {\\n        \\\"@type\\\": \\\"Person\\\",\\n        \\\"name\\\": \\\"Ghost\\\",\\n        \\\"url\\\": \\\"http://demo.ghost.io/author/ghost/\\\",\\n        \\\"sameAs\\\": []\\n    },\\n    \\\"headline\\\": \\\"Publishing options\\\",\\n    \\\"url\\\": \\\"http://demo.ghost.io/publishing-options\\\",\\n    \\\"datePublished\\\": \\\"2018-08-08T11:44:00.000Z\\\",\\n    \\\"dateModified\\\": \\\"2018-08-09T12:06:21.000Z\\\",\\n    \\\"keywords\\\": \\\"Getting Started\\\",\\n    \\\"description\\\": \\\"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.\\\"\\n}\\n    \"}]],\"markups\":[[\"strong\"],[\"a\",[\"href\",\"https://schema.org/\"]],[\"a\",[\"href\",\"https://search.google.com/structured-data/testing-tool\",\"rel\",\"noreferrer nofollow noopener\"]],[\"a\",[\"href\",\"/admin-settings/\"]]],\"sections\":[[1,\"h2\",[[0,[],0,\"Distribute your content\"]]],[1,\"p\",[[0,[],0,\"Access the post settings menu by clicking the settings icon in the top right hand corner of the editor and discover everything you need to get your content ready for publishing. This is where you can edit things like tags, post URL, publish date and custom meta data.\"]]],[1,\"h2\",[[0,[],0,\"Feature images, URL & excerpts\"]]],[1,\"p\",[[0,[],0,\"Insert your post feature image from the very top of the post settings menu. Consider resizing or optimising your image first to ensure it's an appropriate size. Below this, you can set your post URL, publish date and add a custom excerpt.\"]]],[1,\"h2\",[[0,[],0,\"Tags & authors\"]]],[1,\"p\",[[0,[],0,\"You can easily add multiple tags and authors to any post to filter and organise the relationships between your content in Ghost.\"]]],[1,\"h2\",[[0,[],0,\"Structured data & SEO\"]]],[1,\"p\",[[0,[],0,\"There's no need to hard code your meta data. In fact, Ghost will generate default meta data automatically using the content in your post.\"]]],[1,\"p\",[[0,[],0,\"Alternatively, you can override this by adding a custom meta title and description, as well as unique information for social media sharing cards on Facebook and Twitter.\"]]],[1,\"p\",[[0,[],0,\"It's also possible to set custom canonicals, which is useful for guest posts or curated lists of external links.\"]]],[1,\"p\",[[0,[],0,\"Ghost will automatically implement \"],[0,[0],1,\"structured data\"],[0,[],0,\" for your publication using JSON-LD to further optimise your content.\"]]],[10,0],[1,\"p\",[[0,[],0,\"You can test that the structured data \"],[0,[1],1,\"schema\"],[0,[],0,\" on your site is working as it should using \"],[0,[2],1,\"Google’s structured data tool\"],[0,[],0,\". \"]]],[1,\"h2\",[[0,[],0,\"Code injection\"]]],[1,\"p\",[[0,[],0,\"This tool allows you to inject code on a per post or page basis, or across your entire site. This means you can modify CSS, add unique tracking codes, or add other scripts to the head or foot of your publication without making edits to your theme files. \"]]],[1,\"p\",[[0,[0],1,\"To add code site-wide\"],[0,[],0,\", use the code injection tool in the main admin menu. This is useful for adding a Google Analytics tracking code, or to start tracking with any other analytics tool.\"]]],[1,\"p\",[[0,[0],1,\"To add code to a post or page\"],[0,[],0,\", use the code injection tool within the post settings menu. This is useful if you want to add art direction, scripts or styles that are only applicable to one post or page.\"]]],[1,\"h2\",[[0,[],0,\"Next: Admin settings\"]]],[1,\"p\",[[0,[],0,\"Now you understand how to create and optimise content, let's explore some \"],[0,[3],1,\"admin settings\"],[0,[],0,\" so you can invite your team and start collaborating.\"]]]]}","html":"<h2 id=\"distribute-your-content\">Distribute your content</h2><p>Access the post settings menu by clicking the settings icon in the top right hand corner of the editor and discover everything you need to get your content ready for publishing. This is where you can edit things like tags, post URL, publish date and custom meta data.</p><h2 id=\"feature-images-url-excerpts\">Feature images, URL &amp; excerpts</h2><p>Insert your post feature image from the very top of the post settings menu. Consider resizing or optimising your image first to ensure it's an appropriate size. Below this, you can set your post URL, publish date and add a custom excerpt.</p><h2 id=\"tags-authors\">Tags &amp; authors</h2><p>You can easily add multiple tags and authors to any post to filter and organise the relationships between your content in Ghost.</p><h2 id=\"structured-data-seo\">Structured data &amp; SEO</h2><p>There's no need to hard code your meta data. In fact, Ghost will generate default meta data automatically using the content in your post.</p><p>Alternatively, you can override this by adding a custom meta title and description, as well as unique information for social media sharing cards on Facebook and Twitter.</p><p>It's also possible to set custom canonicals, which is useful for guest posts or curated lists of external links.</p><p>Ghost will automatically implement <strong>structured data</strong> for your publication using JSON-LD to further optimise your content.</p><pre><code>{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Article\",\n    \"publisher\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Publishing options\",\n        \"logo\": \"https://static.ghost.org/ghost-logo.svg\"\n    },\n    \"author\": {\n        \"@type\": \"Person\",\n        \"name\": \"Ghost\",\n        \"url\": \"http://demo.ghost.io/author/ghost/\",\n        \"sameAs\": []\n    },\n    \"headline\": \"Publishing options\",\n    \"url\": \"http://demo.ghost.io/publishing-options\",\n    \"datePublished\": \"2018-08-08T11:44:00.000Z\",\n    \"dateModified\": \"2018-08-09T12:06:21.000Z\",\n    \"keywords\": \"Getting Started\",\n    \"description\": \"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.\"\n}\n    </code></pre><p>You can test that the structured data <a href=\"https://schema.org/\">schema</a> on your site is working as it should using <a href=\"https://search.google.com/structured-data/testing-tool\" rel=\"noreferrer nofollow noopener\">Google’s structured data tool</a>. </p><h2 id=\"code-injection\">Code injection</h2><p>This tool allows you to inject code on a per post or page basis, or across your entire site. This means you can modify CSS, add unique tracking codes, or add other scripts to the head or foot of your publication without making edits to your theme files. </p><p><strong>To add code site-wide</strong>, use the code injection tool in the main admin menu. This is useful for adding a Google Analytics tracking code, or to start tracking with any other analytics tool.</p><p><strong>To add code to a post or page</strong>, use the code injection tool within the post settings menu. This is useful if you want to add art direction, scripts or styles that are only applicable to one post or page.</p><h2 id=\"next-admin-settings\">Next: Admin settings</h2><p>Now you understand how to create and optimise content, let's explore some <a href=\"/admin-settings/\">admin settings</a> so you can invite your team and start collaborating.</p>","comment_id":"600d50b3d9877fa6cc161962","plaintext":"Distribute your content\nAccess the post settings menu by clicking the settings icon in the top right\nhand corner of the editor and discover everything you need to get your content\nready for publishing. This is where you can edit things like tags, post URL,\npublish date and custom meta data.\n\nFeature images, URL & excerpts\nInsert your post feature image from the very top of the post settings menu.\nConsider resizing or optimising your image first to ensure it's an appropriate\nsize. Below this, you can set your post URL, publish date and add a custom\nexcerpt.\n\nTags & authors\nYou can easily add multiple tags and authors to any post to filter and organise\nthe relationships between your content in Ghost.\n\nStructured data & SEO\nThere's no need to hard code your meta data. In fact, Ghost will generate\ndefault meta data automatically using the content in your post.\n\nAlternatively, you can override this by adding a custom meta title and\ndescription, as well as unique information for social media sharing cards on\nFacebook and Twitter.\n\nIt's also possible to set custom canonicals, which is useful for guest posts or\ncurated lists of external links.\n\nGhost will automatically implement structured data for your publication using\nJSON-LD to further optimise your content.\n\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Article\",\n    \"publisher\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Publishing options\",\n        \"logo\": \"https://static.ghost.org/ghost-logo.svg\"\n    },\n    \"author\": {\n        \"@type\": \"Person\",\n        \"name\": \"Ghost\",\n        \"url\": \"http://demo.ghost.io/author/ghost/\",\n        \"sameAs\": []\n    },\n    \"headline\": \"Publishing options\",\n    \"url\": \"http://demo.ghost.io/publishing-options\",\n    \"datePublished\": \"2018-08-08T11:44:00.000Z\",\n    \"dateModified\": \"2018-08-09T12:06:21.000Z\",\n    \"keywords\": \"Getting Started\",\n    \"description\": \"The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.\"\n}\n    \n\nYou can test that the structured data schema [https://schema.org/] on your site\nis working as it should using Google’s structured data tool\n[https://search.google.com/structured-data/testing-tool]. \n\nCode injection\nThis tool allows you to inject code on a per post or page basis, or across your\nentire site. This means you can modify CSS, add unique tracking codes, or add\nother scripts to the head or foot of your publication without making edits to\nyour theme files. \n\nTo add code site-wide, use the code injection tool in the main admin menu. This\nis useful for adding a Google Analytics tracking code, or to start tracking with\nany other analytics tool.\n\nTo add code to a post or page, use the code injection tool within the post\nsettings menu. This is useful if you want to add art direction, scripts or\nstyles that are only applicable to one post or page.\n\nNext: Admin settings\nNow you understand how to create and optimise content, let's explore some admin\nsettings [/admin-settings/] so you can invite your team and start collaborating.","feature_image":"https://static.ghost.org/v3.0.0/images/publishing-options.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-01-24 10:49:23","updated_at":"2021-01-28 12:15:19","published_at":"2021-01-24 10:49:27","custom_excerpt":"The Ghost editor post settings menu has everything you need to fully optimise and distribute your content effectively.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"600d50b3d9877fa6cc161964","uuid":"04eb4d8a-251e-4c2b-b4e1-003c8de0ad92","title":"Your First Data Stream","slug":"the-editor","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"https://static.ghost.org/v2.0.0/images/formatting-editor-demo.gif\"}],[\"code\",{\"code\":\"<header class=\\\"site-header outer\\\">\\n    <div class=\\\"inner\\\">\\n        {{> \\\"site-nav\\\"}}\\n    </div>\\n</header>\"}],[\"bookmark\",{\"type\":\"bookmark\",\"url\":\"https://ghost.org/\",\"metadata\":{\"url\":\"https://ghost.org\",\"title\":\"Ghost: The #1 open source headless Node.js CMS\",\"description\":\"The world’s most popular modern open source publishing platform. A headless Node.js CMS used by Apple, Sky News, Tinder and thousands more. MIT licensed, with 30k+ stars on Github.\",\"author\":null,\"publisher\":\"Ghost\",\"thumbnail\":\"https://ghost.org/images/meta/Ghost.png\",\"icon\":\"https://ghost.org/icons/icon-512x512.png?v=188b8b6d743c6338ba2eab2e35bab4f5\"}}],[\"image\",{\"src\":\"https://static.ghost.org/v3.0.0/images/image-sizes-ghost-editor.png\"}],[\"gallery\",{\"images\":[{\"fileName\":\"gallery-sample-1.jpg\",\"row\":0,\"width\":6000,\"height\":4000,\"src\":\"https://static.ghost.org/v3.0.0/images/gallery-sample-1.jpg\"},{\"fileName\":\"gallery-sample-2.jpg\",\"row\":0,\"width\":5746,\"height\":3831,\"src\":\"https://static.ghost.org/v3.0.0/images/gallery-sample-2.jpg\"},{\"fileName\":\"gallery-sample-3.jpg\",\"row\":0,\"width\":5872,\"height\":3915,\"src\":\"https://static.ghost.org/v3.0.0/images/gallery-sample-3.jpg\"}]}]],\"markups\":[[\"strong\"],[\"code\"],[\"a\",[\"href\",\"/publishing-options/\"]]],\"sections\":[[1,\"h2\",[[0,[],0,\"Just start writing\"]]],[1,\"p\",[[0,[],0,\"Ghost has a powerful visual editor with familiar formatting options, as well as the ability to add dynamic content.\"]]],[1,\"p\",[[0,[],0,\"Select your text to add formatting such as headers or to create links. Or use Markdown shortcuts to do the work for you - if that's your thing. \"]]],[10,0],[1,\"h2\",[[0,[],0,\"Rich editing at your fingertips\"]]],[1,\"p\",[[0,[],0,\"The editor can also handle rich media objects, called \"],[0,[0],1,\"cards\"],[0,[],0,\", which can be organised and re-ordered using drag and drop. \"]]],[1,\"p\",[[0,[],0,\"You can insert a card either by clicking the  \"],[0,[1],1,\"+\"],[0,[],0,\"  button, or typing  \"],[0,[1],1,\"/\"],[0,[],0,\"  on a new line to search for a particular card. This allows you to efficiently insert\"],[0,[0],1,\" images\"],[0,[],0,\", \"],[0,[0],1,\"markdown\"],[0,[],0,\", \"],[0,[0],1,\"html, embeds \"],[0,[],0,\"and more.\"]]],[1,\"p\",[[0,[0],1,\"For example\"],[0,[],0,\":\"]]],[3,\"ul\",[[[0,[],0,\"Insert a video from YouTube directly by pasting the URL\"]],[[0,[],0,\"Create unique content like buttons or forms using the HTML card\"]],[[0,[],0,\"Need to share some code? Embed code blocks directly \"]]]],[10,1],[1,\"p\",[[0,[],0,\"It's also possible to share links from across the web in a visual way using bookmark cards that automatically render information from a websites meta data. Paste any URL to try it out: \"]]],[10,2],[1,\"h2\",[[0,[],0,\"Working with images in posts\"]]],[1,\"p\",[[0,[],0,\"You can add images to your posts in many ways:\"]]],[3,\"ul\",[[[0,[],0,\"Upload from your computer\"]],[[0,[],0,\"Click and drag an image into the browser\"]],[[0,[],0,\"Paste directly into the editor from your clipboard\"]],[[0,[],0,\"Insert using a URL\"]]]],[1,\"h3\",[[0,[],0,\"Image sizes\"]]],[1,\"p\",[[0,[],0,\"Once inserted you can blend images beautifully into your content at different sizes and add captions and alt tags wherever needed.\"]]],[10,3],[1,\"h3\",[[0,[],0,\"Image galleries\"]]],[1,\"p\",[[0,[],0,\"Tell visual stories using the gallery card to add up to 9 images that will display as a responsive image gallery: \"]]],[10,4],[1,\"h3\",[[0,[],0,\"Image optimisation\"]]],[1,\"p\",[[0,[],0,\"Ghost will automatically resize and optimise your images with lossless compression. Your posts will be fully optimised for the web without any extra effort on your part.\"]]],[1,\"h2\",[[0,[],0,\"Next: Publishing Options\"]]],[1,\"p\",[[0,[],0,\"Once your post is looking good, you'll want to use the \"],[0,[2],1,\"publishing options\"],[0,[],0,\" to ensure it gets distributed in the right places, with custom meta data, feature images and more.\"]]],[1,\"p\",[]]]}","html":"<h2 id=\"just-start-writing\">Just start writing</h2><p>Ghost has a powerful visual editor with familiar formatting options, as well as the ability to add dynamic content.</p><p>Select your text to add formatting such as headers or to create links. Or use Markdown shortcuts to do the work for you - if that's your thing. </p><figure class=\"kg-card kg-image-card\"><img src=\"https://static.ghost.org/v2.0.0/images/formatting-editor-demo.gif\" class=\"kg-image\" alt></figure><h2 id=\"rich-editing-at-your-fingertips\">Rich editing at your fingertips</h2><p>The editor can also handle rich media objects, called <strong>cards</strong>, which can be organised and re-ordered using drag and drop. </p><p>You can insert a card either by clicking the  <code>+</code>  button, or typing  <code>/</code>  on a new line to search for a particular card. This allows you to efficiently insert<strong> images</strong>, <strong>markdown</strong>, <strong>html, embeds </strong>and more.</p><p><strong>For example</strong>:</p><ul><li>Insert a video from YouTube directly by pasting the URL</li><li>Create unique content like buttons or forms using the HTML card</li><li>Need to share some code? Embed code blocks directly </li></ul><pre><code>&lt;header class=\"site-header outer\"&gt;\n    &lt;div class=\"inner\"&gt;\n        {{&gt; \"site-nav\"}}\n    &lt;/div&gt;\n&lt;/header&gt;</code></pre><p>It's also possible to share links from across the web in a visual way using bookmark cards that automatically render information from a websites meta data. Paste any URL to try it out: </p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://ghost.org/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Ghost: The #1 open source headless Node.js CMS</div><div class=\"kg-bookmark-description\">The world’s most popular modern open source publishing platform. A headless Node.js CMS used by Apple, Sky News, Tinder and thousands more. MIT licensed, with 30k+ stars on Github.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://ghost.org/icons/icon-512x512.png?v&#x3D;188b8b6d743c6338ba2eab2e35bab4f5\"><span class=\"kg-bookmark-publisher\">Ghost</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://ghost.org/images/meta/Ghost.png\"></div></a></figure><h2 id=\"working-with-images-in-posts\">Working with images in posts</h2><p>You can add images to your posts in many ways:</p><ul><li>Upload from your computer</li><li>Click and drag an image into the browser</li><li>Paste directly into the editor from your clipboard</li><li>Insert using a URL</li></ul><h3 id=\"image-sizes\">Image sizes</h3><p>Once inserted you can blend images beautifully into your content at different sizes and add captions and alt tags wherever needed.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://static.ghost.org/v3.0.0/images/image-sizes-ghost-editor.png\" class=\"kg-image\" alt></figure><h3 id=\"image-galleries\">Image galleries</h3><p>Tell visual stories using the gallery card to add up to 9 images that will display as a responsive image gallery: </p><figure class=\"kg-card kg-gallery-card kg-width-wide\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://static.ghost.org/v3.0.0/images/gallery-sample-1.jpg\" width=\"6000\" height=\"4000\" alt></div><div class=\"kg-gallery-image\"><img src=\"https://static.ghost.org/v3.0.0/images/gallery-sample-2.jpg\" width=\"5746\" height=\"3831\" alt></div><div class=\"kg-gallery-image\"><img src=\"https://static.ghost.org/v3.0.0/images/gallery-sample-3.jpg\" width=\"5872\" height=\"3915\" alt></div></div></div></figure><h3 id=\"image-optimisation\">Image optimisation</h3><p>Ghost will automatically resize and optimise your images with lossless compression. Your posts will be fully optimised for the web without any extra effort on your part.</p><h2 id=\"next-publishing-options\">Next: Publishing Options</h2><p>Once your post is looking good, you'll want to use the <a href=\"/publishing-options/\">publishing options</a> to ensure it gets distributed in the right places, with custom meta data, feature images and more.</p>","comment_id":"600d50b3d9877fa6cc161964","plaintext":"Just start writing\nGhost has a powerful visual editor with familiar formatting options, as well as\nthe ability to add dynamic content.\n\nSelect your text to add formatting such as headers or to create links. Or use\nMarkdown shortcuts to do the work for you - if that's your thing. \n\nRich editing at your fingertips\nThe editor can also handle rich media objects, called cards, which can be\norganised and re-ordered using drag and drop. \n\nYou can insert a card either by clicking the+ button, or typing/ on a new line\nto search for a particular card. This allows you to efficiently insert images, \nmarkdown, html, embeds and more.\n\nFor example:\n\n * Insert a video from YouTube directly by pasting the URL\n * Create unique content like buttons or forms using the HTML card\n * Need to share some code? Embed code blocks directly \n\n<header class=\"site-header outer\">\n    <div class=\"inner\">\n        {{> \"site-nav\"}}\n    </div>\n</header>\n\nIt's also possible to share links from across the web in a visual way using\nbookmark cards that automatically render information from a websites meta data.\nPaste any URL to try it out: \n\nGhost: The #1 open source headless Node.js CMSThe world’s most popular modern\nopen source publishing platform. A headless Node.js CMS used by Apple, Sky\nNews,\nTinder and thousands more. MIT licensed, with 30k+ stars on Github.Ghost\n[https://ghost.org/]Working with images in posts\nYou can add images to your posts in many ways:\n\n * Upload from your computer\n * Click and drag an image into the browser\n * Paste directly into the editor from your clipboard\n * Insert using a URL\n\nImage sizes\nOnce inserted you can blend images beautifully into your content at different\nsizes and add captions and alt tags wherever needed.\n\nImage galleries\nTell visual stories using the gallery card to add up to 9 images that will\ndisplay as a responsive image gallery: \n\nImage optimisation\nGhost will automatically resize and optimise your images with lossless\ncompression. Your posts will be fully optimised for the web without any extra\neffort on your part.\n\nNext: Publishing Options\nOnce your post is looking good, you'll want to use the publishing options\n[/publishing-options/] to ensure it gets distributed in the right places, with\ncustom meta data, feature images and more.","feature_image":"https://static.ghost.org/v3.0.0/images/writing-posts-with-ghost.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-01-24 10:49:23","updated_at":"2021-01-28 12:14:47","published_at":"2021-01-24 10:49:28","custom_excerpt":"Discover familiar formatting options in a functional toolbar and the ability to add dynamic content seamlessly.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"600d50b3d9877fa6cc161966","uuid":"1c5318f1-0481-4818-a038-ecc0a9d9df48","title":"Installation & First Steps","slug":"welcome","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[[\"strong\"],[\"a\",[\"href\",\"https://ghost.org/integrations/\"]],[\"a\",[\"href\",\"https://ghost.org/pricing\"]],[\"a\",[\"href\",\"https://github.com/TryGhost\"]],[\"a\",[\"href\",\"/the-editor/\"]]],\"sections\":[[1,\"h2\",[[0,[0],1,\"A few things you should know\"]]],[3,\"ol\",[[[0,[],0,\"Ghost is designed for ambitious, professional publishers who want to actively build a business around their content. That's who it works best for. \"]],[[0,[],0,\"The entire platform can be modified and customised to suit your needs. It's very powerful, but does require some knowledge of code. Ghost is not necessarily a good platform for beginners or people who just want a simple personal blog. \"]],[[0,[],0,\"It's possible to work with all your favourite tools and apps with hundreds of \"],[0,[1],1,\"integrations\"],[0,[],0,\" to speed up your workflows, connect email lists, build communities and much more.\"]]]],[1,\"h2\",[[0,[],0,\"Behind the scenes\"]]],[1,\"p\",[[0,[],0,\"Ghost is made by an independent non-profit organisation called the Ghost Foundation. We are 100% self funded by revenue from our \"],[0,[2],1,\"Ghost(Pro)\"],[0,[],0,\" service, and every penny we make is re-invested into funding further development of free, open source technology for modern publishing.\"]]],[1,\"p\",[[0,[],0,\"The version of Ghost you are looking at right now would not have been made possible without generous contributions from the open source \"],[0,[3],1,\"community\"],[0,[],0,\".\"]]],[1,\"h2\",[[0,[],0,\"Next up, the editor\"]]],[1,\"p\",[[0,[],0,\"The main thing you'll want to read about next is probably: \"],[0,[4],1,\"the Ghost editor\"],[0,[],0,\". This is where the good stuff happens.\"]]],[1,\"blockquote\",[[0,[],0,\"By the way, once you're done reading, you can simply delete the default Ghost user from your team to remove all of these introductory posts! \"]]]]}","html":"<h2 id=\"a-few-things-you-should-know\"><strong>A few things you should know</strong></h2><ol><li>Ghost is designed for ambitious, professional publishers who want to actively build a business around their content. That's who it works best for. </li><li>The entire platform can be modified and customised to suit your needs. It's very powerful, but does require some knowledge of code. Ghost is not necessarily a good platform for beginners or people who just want a simple personal blog. </li><li>It's possible to work with all your favourite tools and apps with hundreds of <a href=\"https://ghost.org/integrations/\">integrations</a> to speed up your workflows, connect email lists, build communities and much more.</li></ol><h2 id=\"behind-the-scenes\">Behind the scenes</h2><p>Ghost is made by an independent non-profit organisation called the Ghost Foundation. We are 100% self funded by revenue from our <a href=\"https://ghost.org/pricing\">Ghost(Pro)</a> service, and every penny we make is re-invested into funding further development of free, open source technology for modern publishing.</p><p>The version of Ghost you are looking at right now would not have been made possible without generous contributions from the open source <a href=\"https://github.com/TryGhost\">community</a>.</p><h2 id=\"next-up-the-editor\">Next up, the editor</h2><p>The main thing you'll want to read about next is probably: <a href=\"/the-editor/\">the Ghost editor</a>. This is where the good stuff happens.</p><blockquote>By the way, once you're done reading, you can simply delete the default Ghost user from your team to remove all of these introductory posts! </blockquote>","comment_id":"600d50b3d9877fa6cc161966","plaintext":"A few things you should know\n 1. Ghost is designed for ambitious, professional publishers who want to\n    actively build a business around their content. That's who it works best\n    for. \n 2. The entire platform can be modified and customised to suit your needs. It's\n    very powerful, but does require some knowledge of code. Ghost is not\n    necessarily a good platform for beginners or people who just want a simple\n    personal blog. \n 3. It's possible to work with all your favourite tools and apps with hundreds\n    of integrations [https://ghost.org/integrations/] to speed up your\n    workflows, connect email lists, build communities and much more.\n\nBehind the scenes\nGhost is made by an independent non-profit organisation called the Ghost\nFoundation. We are 100% self funded by revenue from our Ghost(Pro)\n[https://ghost.org/pricing] service, and every penny we make is re-invested into\nfunding further development of free, open source technology for modern\npublishing.\n\nThe version of Ghost you are looking at right now would not have been made\npossible without generous contributions from the open source community\n[https://github.com/TryGhost].\n\nNext up, the editor\nThe main thing you'll want to read about next is probably: the Ghost editor\n[/the-editor/]. This is where the good stuff happens.\n\n> By the way, once you're done reading, you can simply delete the default Ghost\nuser from your team to remove all of these introductory posts!","feature_image":"https://static.ghost.org/v3.0.0/images/welcome-to-ghost.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-01-24 10:49:23","updated_at":"2021-01-28 12:14:27","published_at":"2021-01-24 10:49:29","custom_excerpt":"Welcome, it's great to have you here.\nWe know that first impressions are important, so we've populated your new site with some initial getting started posts that will help you get familiar with everything in no time.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"60104cda297b11b3964ca908","uuid":"9b74505e-4f4d-4f86-804d-88b3316b975e","title":"Interoperability","slug":"interoperability","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"image\",{\"src\":\"/content/images/2021/01/connectors-alpha@2x.png\",\"width\":2560,\"height\":1282,\"cardWidth\":\"full\"}],[\"image\",{\"src\":\"/content/images/2021/01/oss@3x.png\",\"width\":3930,\"height\":1986}],[\"gallery\",{\"images\":[{\"fileName\":\"bugs.png\",\"row\":0,\"width\":150,\"height\":150,\"src\":\"/content/images/2021/01/bugs.png\"},{\"fileName\":\"features.png\",\"row\":0,\"width\":150,\"height\":150,\"src\":\"/content/images/2021/01/features.png\"},{\"fileName\":\"dev.png\",\"row\":0,\"width\":150,\"height\":150,\"src\":\"/content/images/2021/01/dev.png\"},{\"fileName\":\"general.png\",\"row\":1,\"width\":150,\"height\":150,\"src\":\"/content/images/2021/01/general.png\"},{\"fileName\":\"insider.png\",\"row\":1,\"width\":150,\"height\":150,\"src\":\"/content/images/2021/01/insider-1.png\"}]}],[\"hr\",{}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"Mostly how great our connectors are. \"]]],[1,\"p\",[[0,[],0,\"Principles of our approach: Lossy Interoperability\"]]],[1,\"h2\",[[0,[],0,\"Hello World\"]]],[1,\"p\",[[0,[],0,\"Muffin gummies dragée jelly-o lollipop jujubes brownie. Chocolate toffee muffin pie fruitcake sugar plum. Tootsie roll pastry bonbon oat cake donut sweet roll. Tart cake jelly-o dessert lemon drops cookie croissant. Donut biscuit candy canes brownie sweet danish oat cake. \"]]],[10,0],[1,\"p\",[[0,[],0,\"Donut jelly chocolate cake pie cake chupa chups. Ice cream bonbon biscuit lollipop. Sweet roll wafer donut muffin tootsie roll icing liquorice cookie.\"]]],[1,\"blockquote\",[[0,[],0,\"Apple pie chocolate cake sugar plum wafer marshmallow. Chupa chups cookie dragée marzipan marshmallow sesame snaps lollipop. Cheesecake tiramisu caramels biscuit jelly pastry oat cake pastry. Dragée pie gummi bears donut. Jelly cotton candy pudding wafer chocolate cake gingerbread cake jelly-o.\"]]],[1,\"p\",[[0,[],0,\"Pudding chocolate bar pie biscuit tootsie roll marzipan liquorice gummies wafer. Topping chocolate bar jelly beans gummies jelly croissant sweet roll jelly-o topping. Cake lemon drops cupcake macaroon gummi bears. \"]]],[10,1],[1,\"p\",[[0,[],0,\"Cupcake biscuit lollipop cookie lemon drops jelly-o. Dragée dragée jujubes candy sweet roll biscuit gingerbread bonbon oat cake. Icing cupcake sweet ice cream brownie.\"]]],[1,\"h2\",[[0,[],0,\"Finally\"]]],[1,\"p\",[[0,[],0,\"Tart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate bar brownie pudding. \"]]],[10,2],[1,\"p\",[[0,[],0,\"Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears topping carrot cake ice cream cotton candy cotton candy croissant sweet roll. Topping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer macaroon chocolate cake icing.\"]]],[10,3],[1,\"p\",[[0,[],0,\"Tart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate bar brownie pudding. Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears topping carrot cake ice cream cotton candy cotton candy croissant sweet roll. Topping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer macaroon chocolate cake icing.\"]]],[1,\"h2\",[[0,[],0,\"Finally\"]]],[1,\"p\",[[0,[],0,\"Tart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate bar brownie pudding. Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears topping carrot cake ice cream cotton candy cotton candy croissant sweet roll. Topping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer macaroon chocolate cake icing.\"]]]]}","html":"<p>Mostly how great our connectors are. </p><p>Principles of our approach: Lossy Interoperability</p><h2 id=\"hello-world\">Hello World</h2><p>Muffin gummies dragée jelly-o lollipop jujubes brownie. Chocolate toffee muffin pie fruitcake sugar plum. Tootsie roll pastry bonbon oat cake donut sweet roll. Tart cake jelly-o dessert lemon drops cookie croissant. Donut biscuit candy canes brownie sweet danish oat cake. </p><figure class=\"kg-card kg-image-card kg-width-full\"><img src=\"/content/images/2021/01/connectors-alpha@2x.png\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2021/01/connectors-alpha@2x.png 600w, /content/images/size/w1000/2021/01/connectors-alpha@2x.png 1000w, /content/images/size/w1600/2021/01/connectors-alpha@2x.png 1600w, /content/images/size/w2400/2021/01/connectors-alpha@2x.png 2400w\"></figure><p>Donut jelly chocolate cake pie cake chupa chups. Ice cream bonbon biscuit lollipop. Sweet roll wafer donut muffin tootsie roll icing liquorice cookie.</p><blockquote>Apple pie chocolate cake sugar plum wafer marshmallow. Chupa chups cookie dragée marzipan marshmallow sesame snaps lollipop. Cheesecake tiramisu caramels biscuit jelly pastry oat cake pastry. Dragée pie gummi bears donut. Jelly cotton candy pudding wafer chocolate cake gingerbread cake jelly-o.</blockquote><p>Pudding chocolate bar pie biscuit tootsie roll marzipan liquorice gummies wafer. Topping chocolate bar jelly beans gummies jelly croissant sweet roll jelly-o topping. Cake lemon drops cupcake macaroon gummi bears. </p><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2021/01/oss@3x.png\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2021/01/oss@3x.png 600w, /content/images/size/w1000/2021/01/oss@3x.png 1000w, /content/images/size/w1600/2021/01/oss@3x.png 1600w, /content/images/size/w2400/2021/01/oss@3x.png 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Cupcake biscuit lollipop cookie lemon drops jelly-o. Dragée dragée jujubes candy sweet roll biscuit gingerbread bonbon oat cake. Icing cupcake sweet ice cream brownie.</p><h2 id=\"finally\">Finally</h2><p>Tart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate bar brownie pudding. </p><figure class=\"kg-card kg-gallery-card kg-width-wide\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"/content/images/2021/01/bugs.png\" width=\"150\" height=\"150\" alt></div><div class=\"kg-gallery-image\"><img src=\"/content/images/2021/01/features.png\" width=\"150\" height=\"150\" alt></div><div class=\"kg-gallery-image\"><img src=\"/content/images/2021/01/dev.png\" width=\"150\" height=\"150\" alt></div></div><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"/content/images/2021/01/general.png\" width=\"150\" height=\"150\" alt></div><div class=\"kg-gallery-image\"><img src=\"/content/images/2021/01/insider-1.png\" width=\"150\" height=\"150\" alt></div></div></div></figure><p>Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears topping carrot cake ice cream cotton candy cotton candy croissant sweet roll. Topping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer macaroon chocolate cake icing.</p><hr><p>Tart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate bar brownie pudding. Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears topping carrot cake ice cream cotton candy cotton candy croissant sweet roll. Topping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer macaroon chocolate cake icing.</p><h2 id=\"finally-1\">Finally</h2><p>Tart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate bar brownie pudding. Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears topping carrot cake ice cream cotton candy cotton candy croissant sweet roll. Topping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer macaroon chocolate cake icing.</p>","comment_id":"60104cda297b11b3964ca908","plaintext":"Mostly how great our connectors are. \n\nPrinciples of our approach: Lossy Interoperability\n\nHello World\nMuffin gummies dragée jelly-o lollipop jujubes brownie. Chocolate toffee muffin\npie fruitcake sugar plum. Tootsie roll pastry bonbon oat cake donut sweet roll.\nTart cake jelly-o dessert lemon drops cookie croissant. Donut biscuit candy\ncanes brownie sweet danish oat cake. \n\nDonut jelly chocolate cake pie cake chupa chups. Ice cream bonbon biscuit\nlollipop. Sweet roll wafer donut muffin tootsie roll icing liquorice cookie.\n\n> Apple pie chocolate cake sugar plum wafer marshmallow. Chupa chups cookie dragée\nmarzipan marshmallow sesame snaps lollipop. Cheesecake tiramisu caramels biscuit\njelly pastry oat cake pastry. Dragée pie gummi bears donut. Jelly cotton candy\npudding wafer chocolate cake gingerbread cake jelly-o.\nPudding chocolate bar pie biscuit tootsie roll marzipan liquorice gummies wafer.\nTopping chocolate bar jelly beans gummies jelly croissant sweet roll jelly-o\ntopping. Cake lemon drops cupcake macaroon gummi bears. \n\nCupcake biscuit lollipop cookie lemon drops jelly-o. Dragée dragée jujubes candy\nsweet roll biscuit gingerbread bonbon oat cake. Icing cupcake sweet ice cream\nbrownie.\n\nFinally\nTart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate\nbar brownie pudding. \n\nCroissant bonbon jelly bonbon soufflé. Jelly-o gummi bears topping carrot cake\nice cream cotton candy cotton candy croissant sweet roll. Topping sesame snaps\njujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer macaroon chocolate\ncake icing.\n\n\n--------------------------------------------------------------------------------\n\nTart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate\nbar brownie pudding. Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears\ntopping carrot cake ice cream cotton candy cotton candy croissant sweet roll.\nTopping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer\nmacaroon chocolate cake icing.\n\nFinally\nTart bear claw candy canes tootsie roll dragée. Cookie halvah jelly chocolate\nbar brownie pudding. Croissant bonbon jelly bonbon soufflé. Jelly-o gummi bears\ntopping carrot cake ice cream cotton candy cotton candy croissant sweet roll.\nTopping sesame snaps jujubes. Cookie jelly pastry jujubes pastry lollipop. Wafer\nmacaroon chocolate cake icing.","feature_image":"/content/images/2021/02/interop.svg","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-26 17:09:46","updated_at":"2021-02-14 16:15:16","published_at":"2021-02-02 17:10:00","custom_excerpt":"Quickly exchange data between AEC software like Revit, Grasshopper, and Rhino.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"60104d59297b11b3964ca914","uuid":"dc9c5352-87ff-4507-ab03-629d109cad4d","title":"Collaboration","slug":"collaboration","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"Sharing streams with others & permission levels\"]]],[1,\"p\",[[0,[],0,\"Version Control System small blurb + link to versioning\"]]],[1,\"p\",[[0,[],0,\"Real time notifications\"]]]]}","html":"<p>Sharing streams with others &amp; permission levels</p><p>Version Control System small blurb + link to versioning</p><p>Real time notifications</p>","comment_id":"60104d59297b11b3964ca914","plaintext":"Sharing streams with others & permission levels\n\nVersion Control System small blurb + link to versioning\n\nReal time notifications","feature_image":"/content/images/2021/02/collab-3.svg","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-26 17:11:53","updated_at":"2021-02-14 19:13:09","published_at":"2021-02-01 17:13:00","custom_excerpt":"Sharing has never been easier: architects, engineers and designers use Speckle to share the information that's needed to get the job done.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"60105ed4297b11b3964ca91e","uuid":"7705af1e-bbb1-421c-af85-e0cd23b09e04","title":"Automation","slug":"data-not-files","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"code\",{\"code\":\"var x = 20;\\n\\nforeach(var y in test) {\\n    doStuff( y );\\n}\",\"language\":\"javascript\",\"caption\":\"hello caption.js\"}],[\"image\",{\"src\":\"/content/images/2021/01/xunit-2.png\",\"width\":1401,\"height\":801,\"caption\":\"hello xunit\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"Speckle is amazing for automation: apps and scripts (HIGH LEVEL overview)\"]]],[1,\"p\",[[0,[],0,\"Message: It's an amazing base for digital transformation.\"]]],[1,\"p\",[[0,[],0,\"Soufflé dragée biscuit toffee sweet roll chocolate cake pastry tiramisu sweet roll. Toffee candy canes wafer candy topping cheesecake danish candy. Sugar plum brownie sweet wafer fruitcake.\"]]],[10,0],[1,\"p\",[[0,[],0,\"Bonbon gummies bear claw danish sugar plum chupa chups candy. Ice cream jelly beans bonbon. Muffin cake apple pie. Chocolate cake biscuit cake caramels tiramisu pastry cheesecake pie candy. Caramels sugar plum lollipop caramels dessert gummi bears powder tiramisu carrot cake. Tiramisu caramels sweet roll sugar plum.\"]]],[10,1],[1,\"p\",[[0,[],0,\"Jelly beans cheesecake soufflé cheesecake candy sesame snaps. Lemon drops oat cake cake icing candy canes fruitcake. Chupa chups biscuit cupcake brownie pie. Oat cake gummies jelly beans soufflé soufflé cake chocolate bar cupcake. Jelly beans dragée halvah. Powder chocolate cake lemon drops candy fruitcake icing. Marshmallow bonbon marshmallow. Dessert apple pie chocolate jujubes cotton candy candy canes. Candy topping cheesecake. Oat cake cookie gummi bears marshmallow.\"]]],[1,\"p\",[[0,[],0,\"Pudding jelly beans chocolate cake tootsie roll jelly-o. Donut pudding cake pie jelly bear claw caramels apple pie tiramisu. Oat cake carrot cake cookie caramels soufflé wafer. Lollipop gingerbread cookie candy canes dragée biscuit. Soufflé sweet roll lemon drops sweet roll apple pie candy liquorice soufflé. Dessert jelly beans brownie. Liquorice fruitcake cupcake. Sugar plum sweet marshmallow.\"]]],[1,\"p\",[[0,[],0,\"Tiramisu fruitcake lemon drops. Wafer croissant dragée caramels pastry lollipop gummi bears gummies gummies. Gummi bears toffee bear claw cake chocolate cake. Ice cream oat cake candy cheesecake candy sweet soufflé cake. Ice cream cupcake sweet roll cake pastry carrot cake candy. Bear claw jujubes cake apple pie wafer chocolate bar. Cotton candy biscuit fruitcake dragée. Cake fruitcake tiramisu donut liquorice cheesecake cake ice cream chocolate cake. Sweet cake cotton candy jelly beans chupa chups sugar plum.\"]]]]}","html":"<p>Speckle is amazing for automation: apps and scripts (HIGH LEVEL overview)</p><p>Message: It's an amazing base for digital transformation.</p><p>Soufflé dragée biscuit toffee sweet roll chocolate cake pastry tiramisu sweet roll. Toffee candy canes wafer candy topping cheesecake danish candy. Sugar plum brownie sweet wafer fruitcake.</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-javascript\">var x = 20;\n\nforeach(var y in test) {\n    doStuff( y );\n}</code></pre><figcaption>hello caption.js</figcaption></figure><p>Bonbon gummies bear claw danish sugar plum chupa chups candy. Ice cream jelly beans bonbon. Muffin cake apple pie. Chocolate cake biscuit cake caramels tiramisu pastry cheesecake pie candy. Caramels sugar plum lollipop caramels dessert gummi bears powder tiramisu carrot cake. Tiramisu caramels sweet roll sugar plum.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"/content/images/2021/01/xunit-2.png\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2021/01/xunit-2.png 600w, /content/images/size/w1000/2021/01/xunit-2.png 1000w, /content/images/2021/01/xunit-2.png 1401w\" sizes=\"(min-width: 720px) 720px\"><figcaption>hello xunit</figcaption></figure><p>Jelly beans cheesecake soufflé cheesecake candy sesame snaps. Lemon drops oat cake cake icing candy canes fruitcake. Chupa chups biscuit cupcake brownie pie. Oat cake gummies jelly beans soufflé soufflé cake chocolate bar cupcake. Jelly beans dragée halvah. Powder chocolate cake lemon drops candy fruitcake icing. Marshmallow bonbon marshmallow. Dessert apple pie chocolate jujubes cotton candy candy canes. Candy topping cheesecake. Oat cake cookie gummi bears marshmallow.</p><p>Pudding jelly beans chocolate cake tootsie roll jelly-o. Donut pudding cake pie jelly bear claw caramels apple pie tiramisu. Oat cake carrot cake cookie caramels soufflé wafer. Lollipop gingerbread cookie candy canes dragée biscuit. Soufflé sweet roll lemon drops sweet roll apple pie candy liquorice soufflé. Dessert jelly beans brownie. Liquorice fruitcake cupcake. Sugar plum sweet marshmallow.</p><p>Tiramisu fruitcake lemon drops. Wafer croissant dragée caramels pastry lollipop gummi bears gummies gummies. Gummi bears toffee bear claw cake chocolate cake. Ice cream oat cake candy cheesecake candy sweet soufflé cake. Ice cream cupcake sweet roll cake pastry carrot cake candy. Bear claw jujubes cake apple pie wafer chocolate bar. Cotton candy biscuit fruitcake dragée. Cake fruitcake tiramisu donut liquorice cheesecake cake ice cream chocolate cake. Sweet cake cotton candy jelly beans chupa chups sugar plum.</p>","comment_id":"60105ed4297b11b3964ca91e","plaintext":"Speckle is amazing for automation: apps and scripts (HIGH LEVEL overview)\n\nMessage: It's an amazing base for digital transformation.\n\nSoufflé dragée biscuit toffee sweet roll chocolate cake pastry tiramisu sweet\nroll. Toffee candy canes wafer candy topping cheesecake danish candy. Sugar plum\nbrownie sweet wafer fruitcake.\n\nvar x = 20;\n\nforeach(var y in test) {\n    doStuff( y );\n}\n\nhello caption.jsBonbon gummies bear claw danish sugar plum chupa chups candy.\nIce cream jelly beans bonbon. Muffin cake apple pie. Chocolate cake biscuit cake\ncaramels tiramisu pastry cheesecake pie candy. Caramels sugar plum lollipop\ncaramels dessert gummi bears powder tiramisu carrot cake. Tiramisu caramels\nsweet roll sugar plum.\n\nhello xunitJelly beans cheesecake soufflé cheesecake candy sesame snaps. Lemon\ndrops oat cake cake icing candy canes fruitcake. Chupa chups biscuit cupcake\nbrownie pie. Oat cake gummies jelly beans soufflé soufflé cake chocolate bar\ncupcake. Jelly beans dragée halvah. Powder chocolate cake lemon drops candy\nfruitcake icing. Marshmallow bonbon marshmallow. Dessert apple pie chocolate\njujubes cotton candy candy canes. Candy topping cheesecake. Oat cake cookie\ngummi bears marshmallow.\n\nPudding jelly beans chocolate cake tootsie roll jelly-o. Donut pudding cake pie\njelly bear claw caramels apple pie tiramisu. Oat cake carrot cake cookie\ncaramels soufflé wafer. Lollipop gingerbread cookie candy canes dragée biscuit.\nSoufflé sweet roll lemon drops sweet roll apple pie candy liquorice soufflé.\nDessert jelly beans brownie. Liquorice fruitcake cupcake. Sugar plum sweet\nmarshmallow.\n\nTiramisu fruitcake lemon drops. Wafer croissant dragée caramels pastry lollipop\ngummi bears gummies gummies. Gummi bears toffee bear claw cake chocolate cake.\nIce cream oat cake candy cheesecake candy sweet soufflé cake. Ice cream cupcake\nsweet roll cake pastry carrot cake candy. Bear claw jujubes cake apple pie wafer\nchocolate bar. Cotton candy biscuit fruitcake dragée. Cake fruitcake tiramisu\ndonut liquorice cheesecake cake ice cream chocolate cake. Sweet cake cotton\ncandy jelly beans chupa chups sugar plum.","feature_image":"/content/images/2021/01/insider.png","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-26 18:26:28","updated_at":"2021-02-06 10:10:36","published_at":"2021-01-24 18:27:00","custom_excerpt":"Say goodbye to file exports and vendor lock-in & start leveraging powerful APIs to enhance your design processes.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"601281442c15d83646449da9","uuid":"1a312c04-7530-4bfa-bfe8-3ff9a35372e7","title":"Tools for Every Stack","slug":"hai-there","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"code\",{\"code\":\"using Speckle.Newtonsoft.Json;\\nusing Speckle.Newtonsoft.Json.Serialization;\\nusing Speckle.Newtonsoft.Json.Linq;\\nusing System;\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing System.Runtime.Serialization;\\nusing System.Text.RegularExpressions;\\nusing System.Threading;\\nusing Speckle.Core.Logging;\\nusing Speckle.Core.Models;\\nusing Speckle.Core.Transports;\\n\\nnamespace Speckle.Core.Serialisation\\n{\\n  /// <summary>\\n  /// Json converter that handles base speckle objects. Enables detachment &\\n  /// simultaneous transport (persistence) of objects. \\n  /// </summary>\\n  public class BaseObjectSerializer : JsonConverter\\n  {\\n\\n    /// <summary>\\n    /// Property that describes the type of the object.\\n    /// </summary>\\n    public string TypeDiscriminator = \\\"speckle_type\\\";\\n\\n    public CancellationToken CancellationToken { get; set; }\\n\\n    /// <summary>\\n    /// The sync transport. This transport will be used synchronously. \\n    /// </summary>\\n    public ITransport ReadTransport { get; set; }\\n\\n    /// <summary>\\n    /// List of transports to write to.\\n    /// </summary>\\n    public List<ITransport> WriteTransports { get; set; } = new List<ITransport>();\\n\\n    #region Write Json Helper Properties\\n\\n    /// <summary>\\n    /// Keeps track of wether current property pointer is marked for detachment.\\n    /// </summary>\\n    List<bool> DetachLineage { get; set; }\\n\\n    /// <summary>\\n    /// Keeps track of the hash chain through the object tree.\\n    /// </summary>\\n    List<string> Lineage { get; set; }\\n\\n    /// <summary>\\n    /// Dictionary of object if and its subsequent closure table (a dictionary of hashes and min depth at which they are found).\\n    /// </summary>\\n    Dictionary<string, Dictionary<string, int>> RefMinDepthTracker { get; set; }\\n\\n    public int TotalProcessedCount = 0;\\n    #endregion\\n\\n    public override bool CanWrite => true;\\n\\n    public override bool CanRead => true;\\n\\n    public Action<string, int> OnProgressAction { get; set; }\\n\\n    public Action<string, Exception> OnErrorAction { get; set; }\\n\\n\\n    public BaseObjectSerializer()\\n    {\\n      ResetAndInitialize();\\n    }\\n\\n    /// <summary>\\n    /// Reinitializes the lineage, and other variables that get used during the\\n    /// json writing process.\\n    /// </summary>\\n    public void ResetAndInitialize()\\n    {\\n      DetachLineage = new List<bool>();\\n      Lineage = new List<string>();\\n      RefMinDepthTracker = new Dictionary<string, Dictionary<string, int>>();\\n      OnProgressAction = null;\\n      TotalProcessedCount = 0;\\n    }\\n\\n    public override bool CanConvert(Type objectType) => true;\\n\\n    #region Read Json\\n\\n    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\\n    {\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return null; // Check for cancellation\\n      }\\n\\n      if (reader.TokenType == JsonToken.Null)\\n      {\\n        return null;\\n      }\\n\\n      // Check if we passed in an array, rather than an object.\\n      // TODO: Test the following branch. It's not used anywhere at the moment, and the default serializer prevents it from\\n      // ever being used (only allows single object serialization)\\n      if (reader.TokenType == JsonToken.StartArray)\\n      {\\n        var list = new List<Base>();\\n        var jarr = JArray.Load(reader);\\n\\n        foreach (var val in jarr)\\n        {\\n          if (CancellationToken.IsCancellationRequested)\\n          {\\n            return null; // Check for cancellation\\n          }\\n\\n          var whatever = SerializationUtilities.HandleValue(val, serializer, CancellationToken);\\n          list.Add(whatever as Base);\\n        }\\n        return list;\\n      }\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return null; // Check for cancellation\\n      }\\n\\n      var jObject = JObject.Load(reader);\\n\\n      if (jObject == null)\\n      {\\n        return null;\\n      }\\n\\n      var objType = jObject.GetValue(TypeDiscriminator);\\n\\n      // Assume dictionary!\\n      if (objType == null)\\n      {\\n        var dict = new Dictionary<string, object>();\\n\\n        foreach (var val in jObject)\\n        {\\n          if (CancellationToken.IsCancellationRequested)\\n          {\\n            return null; // Check for cancellation\\n          }\\n\\n          dict[val.Key] = SerializationUtilities.HandleValue(val.Value, serializer, CancellationToken);\\n        }\\n        return dict;\\n      }\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return null; // Check for cancellation\\n      }\\n\\n      var discriminator = Extensions.Value<string>(objType);\\n\\n      // Check for references.\\n      if (discriminator == \\\"reference\\\")\\n      {\\n        var id = Extensions.Value<string>(jObject.GetValue(\\\"referencedId\\\"));\\n        string str = \\\"\\\";\\n\\n        if (ReadTransport != null)\\n        {\\n          str = ReadTransport.GetObject(id);\\n        }\\n        else\\n        {\\n          Log.CaptureAndThrow(new SpeckleException(\\\"Cannot resolve reference, no transport is defined.\\\"), level: Sentry.Protocol.SentryLevel.Warning);\\n        }\\n\\n        if (str != null && str != \\\"\\\")\\n        {\\n          jObject = JObject.Parse(str);\\n          discriminator = Extensions.Value<string>(jObject.GetValue(TypeDiscriminator));\\n        }\\n        else\\n        {\\n          Log.CaptureAndThrow(new SpeckleException(\\\"Cannot resolve reference. The provided transport could not find it.\\\"), level: Sentry.Protocol.SentryLevel.Warning);\\n        }\\n      }\\n\\n      var type = SerializationUtilities.GetType(discriminator);\\n      var obj = existingValue ?? Activator.CreateInstance(type);\\n\\n      var contract = (JsonDynamicContract)serializer.ContractResolver.ResolveContract(type);\\n      var used = new HashSet<string>();\\n\\n      // remove unsettable properties\\n      jObject.Remove(TypeDiscriminator);\\n      jObject.Remove(\\\"__closure\\\");\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return null; // Check for cancellation\\n      }\\n\\n      foreach (var jProperty in jObject.Properties())\\n      {\\n        if (CancellationToken.IsCancellationRequested)\\n        {\\n          return null; // Check for cancellation\\n        }\\n\\n        if (used.Contains(jProperty.Name))\\n        {\\n          continue;\\n        }\\n\\n        used.Add(jProperty.Name);\\n\\n        // first attempt to find a settable property, otherwise fall back to a dynamic set without type\\n        JsonProperty property = contract.Properties.GetClosestMatchProperty(jProperty.Name);\\n\\n        if (property != null && property.Writable && !property.Ignored)\\n        {\\n          if (type == typeof(Abstract) && property.PropertyName == \\\"base\\\")\\n          {\\n            var propertyValue = SerializationUtilities.HandleAbstractOriginalValue(jProperty.Value, ((JValue)jObject.GetValue(\\\"assemblyQualifiedName\\\")).Value as string, serializer);\\n            property.ValueProvider.SetValue(obj, propertyValue);\\n          }\\n          else\\n          {\\n            var val = SerializationUtilities.HandleValue(jProperty.Value, serializer, CancellationToken, property);\\n            property.ValueProvider.SetValue(obj, val);\\n          }\\n        }\\n        else\\n        {\\n          // dynamic properties\\n          CallSiteCache.SetValue(jProperty.Name, obj, SerializationUtilities.HandleValue(jProperty.Value, serializer, CancellationToken));\\n        }\\n      }\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return null; // Check for cancellation\\n      }\\n\\n      TotalProcessedCount++;\\n      OnProgressAction?.Invoke(\\\"DS\\\", 1);\\n\\n      foreach (var callback in contract.OnDeserializedCallbacks)\\n      {\\n        callback(obj, serializer.Context);\\n      }\\n\\n      return obj;\\n    }\\n\\n    #endregion\\n\\n    #region Write Json\\n\\n    // Keeps track of the actual tree structure of the objects being serialised.\\n    // These tree references will thereafter be stored in the __tree prop. \\n    private void TrackReferenceInTree(string refId)\\n    {\\n      // Help with creating closure table entries.\\n      for (int i = 0; i < Lineage.Count; i++)\\n      {\\n        var parent = Lineage[i];\\n\\n        if (!RefMinDepthTracker.ContainsKey(parent))\\n        {\\n          RefMinDepthTracker[parent] = new Dictionary<string, int>();\\n        }\\n\\n        if (!RefMinDepthTracker[parent].ContainsKey(refId))\\n        {\\n          RefMinDepthTracker[parent][refId] = Lineage.Count - i;\\n        }\\n        else if (RefMinDepthTracker[parent][refId] > Lineage.Count - i)\\n        {\\n          RefMinDepthTracker[parent][refId] = Lineage.Count - i;\\n        }\\n      }\\n    }\\n\\n    private bool FirstEntry = true, FirstEntryWasListOrDict = false;\\n\\n    // While this function looks complicated, it's actually quite smooth:\\n    // The important things to remember is that serialization goes depth first:\\n    // The first object to get fully serialised is the first nested one, with\\n    // the parent object being last. \\n    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\\n    {\\n      var xxxx = serializer.ReferenceLoopHandling;\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return; // Check for cancellation\\n      }\\n\\n      /////////////////////////////////////\\n      // Path one: nulls\\n      /////////////////////////////////////\\n\\n      if (value == null)\\n      {\\n        return;\\n      }\\n\\n      /////////////////////////////////////\\n      // Path two: primitives (string, bool, int, etc)\\n      /////////////////////////////////////\\n\\n      if (value.GetType().IsPrimitive || value is string)\\n      {\\n        FirstEntry = false;\\n        var t = JToken.FromObject(value); // bypasses this converter as we do not pass in the serializer\\n        t.WriteTo(writer);\\n        return;\\n      }\\n\\n      /////////////////////////////////////\\n      // Path three: Bases\\n      /////////////////////////////////////\\n\\n      if (value is Base && !(value is ObjectReference))\\n      {\\n        if (CancellationToken.IsCancellationRequested)\\n        {\\n          return; // Check for cancellation\\n        }\\n\\n        var obj = value as Base;\\n\\n        FirstEntry = false;\\n        //TotalProcessedCount++;\\n\\n        // Append to lineage tracker\\n        Lineage.Add(Guid.NewGuid().ToString());\\n\\n        var jo = new JObject();\\n        var propertyNames = obj.GetDynamicMemberNames();\\n\\n        var contract = (JsonDynamicContract)serializer.ContractResolver.ResolveContract(value.GetType());\\n\\n        // Iterate through the object's properties, one by one, checking for ignored ones\\n        foreach (var prop in propertyNames)\\n        {\\n          if (CancellationToken.IsCancellationRequested)\\n          {\\n            return; // Check for cancellation\\n          }\\n          // Ignore properties starting with a double underscore.\\n          if (prop.StartsWith(\\\"__\\\"))\\n          {\\n            continue;\\n          }\\n\\n          var property = contract.Properties.GetClosestMatchProperty(prop);\\n\\n          // Ignore properties decorated with [JsonIgnore].\\n          if (property != null && property.Ignored)\\n          {\\n            continue;\\n          }\\n\\n          // Ignore nulls\\n          object propValue = obj[prop];\\n          if (propValue == null)\\n          {\\n            continue;\\n          }\\n\\n          // Check if this property is marked for detachment: either by the presence of \\\"@\\\" at the beginning of the name, or by the presence of a DetachProperty attribute on a typed property.\\n          if (property != null)\\n          {\\n            var detachableAttributes = property.AttributeProvider.GetAttributes(typeof(DetachProperty), true);\\n            if (detachableAttributes.Count > 0)\\n            {\\n              DetachLineage.Add(((DetachProperty)detachableAttributes[0]).Detachable);\\n            }\\n            else\\n            {\\n              DetachLineage.Add(false);\\n            }\\n\\n            var chunkableAttributes = property.AttributeProvider.GetAttributes(typeof(Chunkable), true);\\n            if (chunkableAttributes.Count > 0)\\n            {\\n              //DetachLineage.Add(true); // NOOPE\\n              serializer.Context = new StreamingContext(StreamingContextStates.Other, chunkableAttributes[0]);\\n            }\\n            else\\n            {\\n              //DetachLineage.Add(false);\\n              serializer.Context = new StreamingContext();\\n            }\\n          }\\n          else if (prop.StartsWith(\\\"@\\\")) // Convention check for dynamically added properties.\\n          {\\n            DetachLineage.Add(true);\\n\\n            var chunkSyntax = new Regex(@\\\"^@\\\\((\\\\d*)\\\\)\\\");\\n\\n            if (chunkSyntax.IsMatch(prop))\\n            {\\n              int chunkSize;\\n              var match = chunkSyntax.Match(prop);\\n              int.TryParse(match.Groups[match.Groups.Count - 1].Value, out chunkSize);\\n              serializer.Context = new StreamingContext(StreamingContextStates.Other,\\n                chunkSize > 0 ? new Chunkable(chunkSize) : new Chunkable());\\n            }\\n          }\\n          else\\n          {\\n            DetachLineage.Add(false);\\n          }\\n\\n          // Set and store a reference, if it is marked as detachable and the transport is not null.\\n          if (WriteTransports != null && WriteTransports.Count != 0 && propValue is Base && DetachLineage[DetachLineage.Count - 1])\\n          {\\n            var what = JToken.FromObject(propValue, serializer); // Trigger next.\\n\\n            if (CancellationToken.IsCancellationRequested)\\n            {\\n              return; // Check for cancellation\\n            }\\n\\n            var refHash = ((JObject)what).GetValue(\\\"id\\\").ToString();\\n\\n            var reference = new ObjectReference() { referencedId = refHash };\\n            TrackReferenceInTree(refHash);\\n            jo.Add(prop, JToken.FromObject(reference));\\n          }\\n          else\\n          {\\n            jo.Add(prop, JToken.FromObject(propValue, serializer)); // Default route\\n          }\\n\\n          // Pop detach lineage. If you don't get this, remember this thing moves ONLY FORWARD, DEPTH FIRST\\n          DetachLineage.RemoveAt(DetachLineage.Count - 1);\\n        }\\n\\n        // Check if we actually have any transports present that would warrant a \\n        if ((WriteTransports != null && WriteTransports.Count != 0) && RefMinDepthTracker.ContainsKey(Lineage[Lineage.Count - 1]))\\n        {\\n          jo.Add(\\\"__closure\\\", JToken.FromObject(RefMinDepthTracker[Lineage[Lineage.Count - 1]]));\\n        }\\n\\n        var hash = Models.Utilities.hashString(jo.ToString());\\n        if (!jo.ContainsKey(\\\"id\\\"))\\n        {\\n          jo.Add(\\\"id\\\", JToken.FromObject(hash));\\n        }\\n        jo.WriteTo(writer);\\n\\n        if ((DetachLineage.Count == 0 || DetachLineage[DetachLineage.Count - 1]) && WriteTransports != null && WriteTransports.Count != 0)\\n        {\\n          var objString = jo.ToString();\\n          var objId = jo[\\\"id\\\"].Value<string>();\\n\\n          OnProgressAction?.Invoke(\\\"S\\\", 1);\\n\\n          foreach (var transport in WriteTransports)\\n          {\\n            if (CancellationToken.IsCancellationRequested)\\n            {\\n              continue; // Check for cancellation\\n            }\\n\\n            transport.SaveObject(objId, objString);\\n          }\\n        }\\n\\n        // Pop lineage tracker\\n        Lineage.RemoveAt(Lineage.Count - 1);\\n        return;\\n      }\\n\\n      /////////////////////////////////////\\n      // Path four: lists/arrays & dicts\\n      /////////////////////////////////////\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return; // Check for cancellation\\n      }\\n\\n      var type = value.GetType();\\n\\n      // TODO: List handling and dictionary serialisation handling can be sped up significantly if we first check by their inner type.\\n      // This handles a broader case in which we are, essentially, checking only for object[] or List<object> / Dictionary<string, object> cases.\\n      // A much faster approach is to check for List<primitive>, where primitive = string, number, etc. and directly serialize it in full.\\n      // Same goes for dictionaries.\\n      if (typeof(IEnumerable).IsAssignableFrom(type) && !typeof(IDictionary).IsAssignableFrom(type) && type != typeof(string))\\n      {\\n\\n        if (TotalProcessedCount == 0 && FirstEntry)\\n        {\\n          FirstEntry = false;\\n          FirstEntryWasListOrDict = true;\\n          TotalProcessedCount += 1;\\n          DetachLineage.Add(WriteTransports != null && WriteTransports.Count != 0 ? true : false);\\n        }\\n\\n        JArray arr = new JArray();\\n\\n        // Chunking large lists into manageable parts.\\n        if (DetachLineage[DetachLineage.Count - 1] && serializer.Context.Context is Chunkable chunkInfo)\\n        {\\n          var maxCount = chunkInfo.MaxObjCountPerChunk;\\n          var i = 0;\\n          var chunkList = new List<DataChunk>();\\n          var currChunk = new DataChunk();\\n\\n          foreach (var arrValue in ((IEnumerable)value))\\n          {\\n            if (i == maxCount)\\n            {\\n              chunkList.Add(currChunk);\\n              currChunk = new DataChunk();\\n              i = 0;\\n            }\\n            currChunk.data.Add(arrValue);\\n            i++;\\n          }\\n          chunkList.Add(currChunk);\\n          value = chunkList;\\n        }\\n\\n        foreach (var arrValue in ((IEnumerable)value))\\n        {\\n          if (CancellationToken.IsCancellationRequested)\\n          {\\n            return; // Check for cancellation\\n          }\\n\\n          if (arrValue == null)\\n          {\\n            continue;\\n          }\\n\\n          if (WriteTransports != null && WriteTransports.Count != 0 && arrValue is Base && DetachLineage[DetachLineage.Count - 1])\\n          {\\n            var what = JToken.FromObject(arrValue, serializer); // Trigger next\\n\\n            var refHash = ((JObject)what).GetValue(\\\"id\\\").ToString();\\n\\n            var reference = new ObjectReference() { referencedId = refHash };\\n            TrackReferenceInTree(refHash);\\n            arr.Add(JToken.FromObject(reference));\\n          }\\n          else\\n          {\\n            arr.Add(JToken.FromObject(arrValue, serializer)); // Default route\\n          }\\n        }\\n\\n        if (CancellationToken.IsCancellationRequested)\\n        {\\n          return; // Check for cancellation\\n        }\\n\\n        arr.WriteTo(writer);\\n\\n        if (DetachLineage.Count == 1 && FirstEntryWasListOrDict) // are we in a list entry point case?\\n        {\\n          DetachLineage.RemoveAt(0);\\n        }\\n\\n        return;\\n      }\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return; // Check for cancellation\\n      }\\n\\n      if (typeof(IDictionary).IsAssignableFrom(type))\\n      {\\n        if (TotalProcessedCount == 0 && FirstEntry)\\n        {\\n          FirstEntry = false;\\n          FirstEntryWasListOrDict = true;\\n          TotalProcessedCount += 1;\\n          DetachLineage.Add(WriteTransports != null && WriteTransports.Count != 0 ? true : false);\\n        }\\n        var dict = value as IDictionary;\\n        var dictJo = new JObject();\\n        foreach (DictionaryEntry kvp in dict)\\n        {\\n          if (CancellationToken.IsCancellationRequested)\\n          {\\n            return; // Check for cancellation\\n          }\\n\\n          if (kvp.Value == null)\\n          {\\n            continue;\\n          }\\n\\n          JToken jToken;\\n          if (WriteTransports != null && WriteTransports.Count != 0 && kvp.Value is Base && DetachLineage[DetachLineage.Count - 1])\\n          {\\n            var what = JToken.FromObject(kvp.Value, serializer); // Trigger next\\n            var refHash = ((JObject)what).GetValue(\\\"id\\\").ToString();\\n\\n            var reference = new ObjectReference() { referencedId = refHash };\\n            TrackReferenceInTree(refHash);\\n            jToken = JToken.FromObject(reference);\\n          }\\n          else\\n          {\\n            jToken = JToken.FromObject(kvp.Value, serializer); // Default route\\n          }\\n          dictJo.Add(kvp.Key.ToString(), jToken);\\n        }\\n        dictJo.WriteTo(writer);\\n\\n        if (CancellationToken.IsCancellationRequested)\\n        {\\n          return; // Check for cancellation\\n        }\\n\\n        if (DetachLineage.Count == 1 && FirstEntryWasListOrDict) // are we in a dictionary entry point case?\\n        {\\n          DetachLineage.RemoveAt(0);\\n        }\\n\\n        return;\\n      }\\n\\n      /////////////////////////////////////\\n      // Path five: everything else (enums?)\\n      /////////////////////////////////////\\n\\n      if (CancellationToken.IsCancellationRequested)\\n      {\\n        return; // Check for cancellation\\n      }\\n\\n      FirstEntry = false;\\n      var lastCall = JToken.FromObject(value); // bypasses this converter as we do not pass in the serializer\\n      lastCall.WriteTo(writer);\\n    }\\n\\n    #endregion\\n\\n  }\\n\\n}\",\"language\":\"csharp\"}]],\"markups\":[],\"sections\":[[1,\"p\",[[1,[],0,0],[0,[],0,\"Fruitcake powder tiramisu cotton candy jelly-o pastry chocolate. Marzipan macaroon pastry sesame snaps dragée icing sweet roll lemon drops dessert. Fruitcake icing ice cream croissant pie. Gingerbread cupcake fruitcake candy canes lemon drops cheesecake oat cake sesame snaps. \"]]],[10,0],[1,\"p\",[[0,[],0,\"Chocolate pie sesame snaps gummi bears tiramisu marzipan muffin danish. Ice cream chupa chups donut. Donut topping cheesecake. Candy canes chocolate sesame snaps gummi bears gummies lollipop. Halvah sesame snaps jelly tart chocolate cake danish ice cream. Apple pie cookie apple pie. Croissant carrot cake chocolate jelly beans tootsie roll toffee. Icing apple pie jelly chocolate cake apple pie muffin jelly bonbon lollipop.\"]]]]}","html":"<p><br>Fruitcake powder tiramisu cotton candy jelly-o pastry chocolate. Marzipan macaroon pastry sesame snaps dragée icing sweet roll lemon drops dessert. Fruitcake icing ice cream croissant pie. Gingerbread cupcake fruitcake candy canes lemon drops cheesecake oat cake sesame snaps. </p><pre><code class=\"language-csharp\">using Speckle.Newtonsoft.Json;\nusing Speckle.Newtonsoft.Json.Serialization;\nusing Speckle.Newtonsoft.Json.Linq;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Threading;\nusing Speckle.Core.Logging;\nusing Speckle.Core.Models;\nusing Speckle.Core.Transports;\n\nnamespace Speckle.Core.Serialisation\n{\n  /// &lt;summary&gt;\n  /// Json converter that handles base speckle objects. Enables detachment &amp;\n  /// simultaneous transport (persistence) of objects. \n  /// &lt;/summary&gt;\n  public class BaseObjectSerializer : JsonConverter\n  {\n\n    /// &lt;summary&gt;\n    /// Property that describes the type of the object.\n    /// &lt;/summary&gt;\n    public string TypeDiscriminator = \"speckle_type\";\n\n    public CancellationToken CancellationToken { get; set; }\n\n    /// &lt;summary&gt;\n    /// The sync transport. This transport will be used synchronously. \n    /// &lt;/summary&gt;\n    public ITransport ReadTransport { get; set; }\n\n    /// &lt;summary&gt;\n    /// List of transports to write to.\n    /// &lt;/summary&gt;\n    public List&lt;ITransport&gt; WriteTransports { get; set; } = new List&lt;ITransport&gt;();\n\n    #region Write Json Helper Properties\n\n    /// &lt;summary&gt;\n    /// Keeps track of wether current property pointer is marked for detachment.\n    /// &lt;/summary&gt;\n    List&lt;bool&gt; DetachLineage { get; set; }\n\n    /// &lt;summary&gt;\n    /// Keeps track of the hash chain through the object tree.\n    /// &lt;/summary&gt;\n    List&lt;string&gt; Lineage { get; set; }\n\n    /// &lt;summary&gt;\n    /// Dictionary of object if and its subsequent closure table (a dictionary of hashes and min depth at which they are found).\n    /// &lt;/summary&gt;\n    Dictionary&lt;string, Dictionary&lt;string, int&gt;&gt; RefMinDepthTracker { get; set; }\n\n    public int TotalProcessedCount = 0;\n    #endregion\n\n    public override bool CanWrite =&gt; true;\n\n    public override bool CanRead =&gt; true;\n\n    public Action&lt;string, int&gt; OnProgressAction { get; set; }\n\n    public Action&lt;string, Exception&gt; OnErrorAction { get; set; }\n\n\n    public BaseObjectSerializer()\n    {\n      ResetAndInitialize();\n    }\n\n    /// &lt;summary&gt;\n    /// Reinitializes the lineage, and other variables that get used during the\n    /// json writing process.\n    /// &lt;/summary&gt;\n    public void ResetAndInitialize()\n    {\n      DetachLineage = new List&lt;bool&gt;();\n      Lineage = new List&lt;string&gt;();\n      RefMinDepthTracker = new Dictionary&lt;string, Dictionary&lt;string, int&gt;&gt;();\n      OnProgressAction = null;\n      TotalProcessedCount = 0;\n    }\n\n    public override bool CanConvert(Type objectType) =&gt; true;\n\n    #region Read Json\n\n    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n    {\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      if (reader.TokenType == JsonToken.Null)\n      {\n        return null;\n      }\n\n      // Check if we passed in an array, rather than an object.\n      // TODO: Test the following branch. It's not used anywhere at the moment, and the default serializer prevents it from\n      // ever being used (only allows single object serialization)\n      if (reader.TokenType == JsonToken.StartArray)\n      {\n        var list = new List&lt;Base&gt;();\n        var jarr = JArray.Load(reader);\n\n        foreach (var val in jarr)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return null; // Check for cancellation\n          }\n\n          var whatever = SerializationUtilities.HandleValue(val, serializer, CancellationToken);\n          list.Add(whatever as Base);\n        }\n        return list;\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      var jObject = JObject.Load(reader);\n\n      if (jObject == null)\n      {\n        return null;\n      }\n\n      var objType = jObject.GetValue(TypeDiscriminator);\n\n      // Assume dictionary!\n      if (objType == null)\n      {\n        var dict = new Dictionary&lt;string, object&gt;();\n\n        foreach (var val in jObject)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return null; // Check for cancellation\n          }\n\n          dict[val.Key] = SerializationUtilities.HandleValue(val.Value, serializer, CancellationToken);\n        }\n        return dict;\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      var discriminator = Extensions.Value&lt;string&gt;(objType);\n\n      // Check for references.\n      if (discriminator == \"reference\")\n      {\n        var id = Extensions.Value&lt;string&gt;(jObject.GetValue(\"referencedId\"));\n        string str = \"\";\n\n        if (ReadTransport != null)\n        {\n          str = ReadTransport.GetObject(id);\n        }\n        else\n        {\n          Log.CaptureAndThrow(new SpeckleException(\"Cannot resolve reference, no transport is defined.\"), level: Sentry.Protocol.SentryLevel.Warning);\n        }\n\n        if (str != null &amp;&amp; str != \"\")\n        {\n          jObject = JObject.Parse(str);\n          discriminator = Extensions.Value&lt;string&gt;(jObject.GetValue(TypeDiscriminator));\n        }\n        else\n        {\n          Log.CaptureAndThrow(new SpeckleException(\"Cannot resolve reference. The provided transport could not find it.\"), level: Sentry.Protocol.SentryLevel.Warning);\n        }\n      }\n\n      var type = SerializationUtilities.GetType(discriminator);\n      var obj = existingValue ?? Activator.CreateInstance(type);\n\n      var contract = (JsonDynamicContract)serializer.ContractResolver.ResolveContract(type);\n      var used = new HashSet&lt;string&gt;();\n\n      // remove unsettable properties\n      jObject.Remove(TypeDiscriminator);\n      jObject.Remove(\"__closure\");\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      foreach (var jProperty in jObject.Properties())\n      {\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return null; // Check for cancellation\n        }\n\n        if (used.Contains(jProperty.Name))\n        {\n          continue;\n        }\n\n        used.Add(jProperty.Name);\n\n        // first attempt to find a settable property, otherwise fall back to a dynamic set without type\n        JsonProperty property = contract.Properties.GetClosestMatchProperty(jProperty.Name);\n\n        if (property != null &amp;&amp; property.Writable &amp;&amp; !property.Ignored)\n        {\n          if (type == typeof(Abstract) &amp;&amp; property.PropertyName == \"base\")\n          {\n            var propertyValue = SerializationUtilities.HandleAbstractOriginalValue(jProperty.Value, ((JValue)jObject.GetValue(\"assemblyQualifiedName\")).Value as string, serializer);\n            property.ValueProvider.SetValue(obj, propertyValue);\n          }\n          else\n          {\n            var val = SerializationUtilities.HandleValue(jProperty.Value, serializer, CancellationToken, property);\n            property.ValueProvider.SetValue(obj, val);\n          }\n        }\n        else\n        {\n          // dynamic properties\n          CallSiteCache.SetValue(jProperty.Name, obj, SerializationUtilities.HandleValue(jProperty.Value, serializer, CancellationToken));\n        }\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      TotalProcessedCount++;\n      OnProgressAction?.Invoke(\"DS\", 1);\n\n      foreach (var callback in contract.OnDeserializedCallbacks)\n      {\n        callback(obj, serializer.Context);\n      }\n\n      return obj;\n    }\n\n    #endregion\n\n    #region Write Json\n\n    // Keeps track of the actual tree structure of the objects being serialised.\n    // These tree references will thereafter be stored in the __tree prop. \n    private void TrackReferenceInTree(string refId)\n    {\n      // Help with creating closure table entries.\n      for (int i = 0; i &lt; Lineage.Count; i++)\n      {\n        var parent = Lineage[i];\n\n        if (!RefMinDepthTracker.ContainsKey(parent))\n        {\n          RefMinDepthTracker[parent] = new Dictionary&lt;string, int&gt;();\n        }\n\n        if (!RefMinDepthTracker[parent].ContainsKey(refId))\n        {\n          RefMinDepthTracker[parent][refId] = Lineage.Count - i;\n        }\n        else if (RefMinDepthTracker[parent][refId] &gt; Lineage.Count - i)\n        {\n          RefMinDepthTracker[parent][refId] = Lineage.Count - i;\n        }\n      }\n    }\n\n    private bool FirstEntry = true, FirstEntryWasListOrDict = false;\n\n    // While this function looks complicated, it's actually quite smooth:\n    // The important things to remember is that serialization goes depth first:\n    // The first object to get fully serialised is the first nested one, with\n    // the parent object being last. \n    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\n    {\n      var xxxx = serializer.ReferenceLoopHandling;\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      /////////////////////////////////////\n      // Path one: nulls\n      /////////////////////////////////////\n\n      if (value == null)\n      {\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path two: primitives (string, bool, int, etc)\n      /////////////////////////////////////\n\n      if (value.GetType().IsPrimitive || value is string)\n      {\n        FirstEntry = false;\n        var t = JToken.FromObject(value); // bypasses this converter as we do not pass in the serializer\n        t.WriteTo(writer);\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path three: Bases\n      /////////////////////////////////////\n\n      if (value is Base &amp;&amp; !(value is ObjectReference))\n      {\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return; // Check for cancellation\n        }\n\n        var obj = value as Base;\n\n        FirstEntry = false;\n        //TotalProcessedCount++;\n\n        // Append to lineage tracker\n        Lineage.Add(Guid.NewGuid().ToString());\n\n        var jo = new JObject();\n        var propertyNames = obj.GetDynamicMemberNames();\n\n        var contract = (JsonDynamicContract)serializer.ContractResolver.ResolveContract(value.GetType());\n\n        // Iterate through the object's properties, one by one, checking for ignored ones\n        foreach (var prop in propertyNames)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return; // Check for cancellation\n          }\n          // Ignore properties starting with a double underscore.\n          if (prop.StartsWith(\"__\"))\n          {\n            continue;\n          }\n\n          var property = contract.Properties.GetClosestMatchProperty(prop);\n\n          // Ignore properties decorated with [JsonIgnore].\n          if (property != null &amp;&amp; property.Ignored)\n          {\n            continue;\n          }\n\n          // Ignore nulls\n          object propValue = obj[prop];\n          if (propValue == null)\n          {\n            continue;\n          }\n\n          // Check if this property is marked for detachment: either by the presence of \"@\" at the beginning of the name, or by the presence of a DetachProperty attribute on a typed property.\n          if (property != null)\n          {\n            var detachableAttributes = property.AttributeProvider.GetAttributes(typeof(DetachProperty), true);\n            if (detachableAttributes.Count &gt; 0)\n            {\n              DetachLineage.Add(((DetachProperty)detachableAttributes[0]).Detachable);\n            }\n            else\n            {\n              DetachLineage.Add(false);\n            }\n\n            var chunkableAttributes = property.AttributeProvider.GetAttributes(typeof(Chunkable), true);\n            if (chunkableAttributes.Count &gt; 0)\n            {\n              //DetachLineage.Add(true); // NOOPE\n              serializer.Context = new StreamingContext(StreamingContextStates.Other, chunkableAttributes[0]);\n            }\n            else\n            {\n              //DetachLineage.Add(false);\n              serializer.Context = new StreamingContext();\n            }\n          }\n          else if (prop.StartsWith(\"@\")) // Convention check for dynamically added properties.\n          {\n            DetachLineage.Add(true);\n\n            var chunkSyntax = new Regex(@\"^@\\((\\d*)\\)\");\n\n            if (chunkSyntax.IsMatch(prop))\n            {\n              int chunkSize;\n              var match = chunkSyntax.Match(prop);\n              int.TryParse(match.Groups[match.Groups.Count - 1].Value, out chunkSize);\n              serializer.Context = new StreamingContext(StreamingContextStates.Other,\n                chunkSize &gt; 0 ? new Chunkable(chunkSize) : new Chunkable());\n            }\n          }\n          else\n          {\n            DetachLineage.Add(false);\n          }\n\n          // Set and store a reference, if it is marked as detachable and the transport is not null.\n          if (WriteTransports != null &amp;&amp; WriteTransports.Count != 0 &amp;&amp; propValue is Base &amp;&amp; DetachLineage[DetachLineage.Count - 1])\n          {\n            var what = JToken.FromObject(propValue, serializer); // Trigger next.\n\n            if (CancellationToken.IsCancellationRequested)\n            {\n              return; // Check for cancellation\n            }\n\n            var refHash = ((JObject)what).GetValue(\"id\").ToString();\n\n            var reference = new ObjectReference() { referencedId = refHash };\n            TrackReferenceInTree(refHash);\n            jo.Add(prop, JToken.FromObject(reference));\n          }\n          else\n          {\n            jo.Add(prop, JToken.FromObject(propValue, serializer)); // Default route\n          }\n\n          // Pop detach lineage. If you don't get this, remember this thing moves ONLY FORWARD, DEPTH FIRST\n          DetachLineage.RemoveAt(DetachLineage.Count - 1);\n        }\n\n        // Check if we actually have any transports present that would warrant a \n        if ((WriteTransports != null &amp;&amp; WriteTransports.Count != 0) &amp;&amp; RefMinDepthTracker.ContainsKey(Lineage[Lineage.Count - 1]))\n        {\n          jo.Add(\"__closure\", JToken.FromObject(RefMinDepthTracker[Lineage[Lineage.Count - 1]]));\n        }\n\n        var hash = Models.Utilities.hashString(jo.ToString());\n        if (!jo.ContainsKey(\"id\"))\n        {\n          jo.Add(\"id\", JToken.FromObject(hash));\n        }\n        jo.WriteTo(writer);\n\n        if ((DetachLineage.Count == 0 || DetachLineage[DetachLineage.Count - 1]) &amp;&amp; WriteTransports != null &amp;&amp; WriteTransports.Count != 0)\n        {\n          var objString = jo.ToString();\n          var objId = jo[\"id\"].Value&lt;string&gt;();\n\n          OnProgressAction?.Invoke(\"S\", 1);\n\n          foreach (var transport in WriteTransports)\n          {\n            if (CancellationToken.IsCancellationRequested)\n            {\n              continue; // Check for cancellation\n            }\n\n            transport.SaveObject(objId, objString);\n          }\n        }\n\n        // Pop lineage tracker\n        Lineage.RemoveAt(Lineage.Count - 1);\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path four: lists/arrays &amp; dicts\n      /////////////////////////////////////\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      var type = value.GetType();\n\n      // TODO: List handling and dictionary serialisation handling can be sped up significantly if we first check by their inner type.\n      // This handles a broader case in which we are, essentially, checking only for object[] or List&lt;object&gt; / Dictionary&lt;string, object&gt; cases.\n      // A much faster approach is to check for List&lt;primitive&gt;, where primitive = string, number, etc. and directly serialize it in full.\n      // Same goes for dictionaries.\n      if (typeof(IEnumerable).IsAssignableFrom(type) &amp;&amp; !typeof(IDictionary).IsAssignableFrom(type) &amp;&amp; type != typeof(string))\n      {\n\n        if (TotalProcessedCount == 0 &amp;&amp; FirstEntry)\n        {\n          FirstEntry = false;\n          FirstEntryWasListOrDict = true;\n          TotalProcessedCount += 1;\n          DetachLineage.Add(WriteTransports != null &amp;&amp; WriteTransports.Count != 0 ? true : false);\n        }\n\n        JArray arr = new JArray();\n\n        // Chunking large lists into manageable parts.\n        if (DetachLineage[DetachLineage.Count - 1] &amp;&amp; serializer.Context.Context is Chunkable chunkInfo)\n        {\n          var maxCount = chunkInfo.MaxObjCountPerChunk;\n          var i = 0;\n          var chunkList = new List&lt;DataChunk&gt;();\n          var currChunk = new DataChunk();\n\n          foreach (var arrValue in ((IEnumerable)value))\n          {\n            if (i == maxCount)\n            {\n              chunkList.Add(currChunk);\n              currChunk = new DataChunk();\n              i = 0;\n            }\n            currChunk.data.Add(arrValue);\n            i++;\n          }\n          chunkList.Add(currChunk);\n          value = chunkList;\n        }\n\n        foreach (var arrValue in ((IEnumerable)value))\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return; // Check for cancellation\n          }\n\n          if (arrValue == null)\n          {\n            continue;\n          }\n\n          if (WriteTransports != null &amp;&amp; WriteTransports.Count != 0 &amp;&amp; arrValue is Base &amp;&amp; DetachLineage[DetachLineage.Count - 1])\n          {\n            var what = JToken.FromObject(arrValue, serializer); // Trigger next\n\n            var refHash = ((JObject)what).GetValue(\"id\").ToString();\n\n            var reference = new ObjectReference() { referencedId = refHash };\n            TrackReferenceInTree(refHash);\n            arr.Add(JToken.FromObject(reference));\n          }\n          else\n          {\n            arr.Add(JToken.FromObject(arrValue, serializer)); // Default route\n          }\n        }\n\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return; // Check for cancellation\n        }\n\n        arr.WriteTo(writer);\n\n        if (DetachLineage.Count == 1 &amp;&amp; FirstEntryWasListOrDict) // are we in a list entry point case?\n        {\n          DetachLineage.RemoveAt(0);\n        }\n\n        return;\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      if (typeof(IDictionary).IsAssignableFrom(type))\n      {\n        if (TotalProcessedCount == 0 &amp;&amp; FirstEntry)\n        {\n          FirstEntry = false;\n          FirstEntryWasListOrDict = true;\n          TotalProcessedCount += 1;\n          DetachLineage.Add(WriteTransports != null &amp;&amp; WriteTransports.Count != 0 ? true : false);\n        }\n        var dict = value as IDictionary;\n        var dictJo = new JObject();\n        foreach (DictionaryEntry kvp in dict)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return; // Check for cancellation\n          }\n\n          if (kvp.Value == null)\n          {\n            continue;\n          }\n\n          JToken jToken;\n          if (WriteTransports != null &amp;&amp; WriteTransports.Count != 0 &amp;&amp; kvp.Value is Base &amp;&amp; DetachLineage[DetachLineage.Count - 1])\n          {\n            var what = JToken.FromObject(kvp.Value, serializer); // Trigger next\n            var refHash = ((JObject)what).GetValue(\"id\").ToString();\n\n            var reference = new ObjectReference() { referencedId = refHash };\n            TrackReferenceInTree(refHash);\n            jToken = JToken.FromObject(reference);\n          }\n          else\n          {\n            jToken = JToken.FromObject(kvp.Value, serializer); // Default route\n          }\n          dictJo.Add(kvp.Key.ToString(), jToken);\n        }\n        dictJo.WriteTo(writer);\n\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return; // Check for cancellation\n        }\n\n        if (DetachLineage.Count == 1 &amp;&amp; FirstEntryWasListOrDict) // are we in a dictionary entry point case?\n        {\n          DetachLineage.RemoveAt(0);\n        }\n\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path five: everything else (enums?)\n      /////////////////////////////////////\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      FirstEntry = false;\n      var lastCall = JToken.FromObject(value); // bypasses this converter as we do not pass in the serializer\n      lastCall.WriteTo(writer);\n    }\n\n    #endregion\n\n  }\n\n}</code></pre><p>Chocolate pie sesame snaps gummi bears tiramisu marzipan muffin danish. Ice cream chupa chups donut. Donut topping cheesecake. Candy canes chocolate sesame snaps gummi bears gummies lollipop. Halvah sesame snaps jelly tart chocolate cake danish ice cream. Apple pie cookie apple pie. Croissant carrot cake chocolate jelly beans tootsie roll toffee. Icing apple pie jelly chocolate cake apple pie muffin jelly bonbon lollipop.</p>","comment_id":"601281442c15d83646449da9","plaintext":"\nFruitcake powder tiramisu cotton candy jelly-o pastry chocolate. Marzipan\nmacaroon pastry sesame snaps dragée icing sweet roll lemon drops dessert.\nFruitcake icing ice cream croissant pie. Gingerbread cupcake fruitcake candy\ncanes lemon drops cheesecake oat cake sesame snaps. \n\nusing Speckle.Newtonsoft.Json;\nusing Speckle.Newtonsoft.Json.Serialization;\nusing Speckle.Newtonsoft.Json.Linq;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Runtime.Serialization;\nusing System.Text.RegularExpressions;\nusing System.Threading;\nusing Speckle.Core.Logging;\nusing Speckle.Core.Models;\nusing Speckle.Core.Transports;\n\nnamespace Speckle.Core.Serialisation\n{\n  /// <summary>\n  /// Json converter that handles base speckle objects. Enables detachment &\n  /// simultaneous transport (persistence) of objects. \n  /// </summary>\n  public class BaseObjectSerializer : JsonConverter\n  {\n\n    /// <summary>\n    /// Property that describes the type of the object.\n    /// </summary>\n    public string TypeDiscriminator = \"speckle_type\";\n\n    public CancellationToken CancellationToken { get; set; }\n\n    /// <summary>\n    /// The sync transport. This transport will be used synchronously. \n    /// </summary>\n    public ITransport ReadTransport { get; set; }\n\n    /// <summary>\n    /// List of transports to write to.\n    /// </summary>\n    public List<ITransport> WriteTransports { get; set; } = new List<ITransport>();\n\n    #region Write Json Helper Properties\n\n    /// <summary>\n    /// Keeps track of wether current property pointer is marked for detachment.\n    /// </summary>\n    List<bool> DetachLineage { get; set; }\n\n    /// <summary>\n    /// Keeps track of the hash chain through the object tree.\n    /// </summary>\n    List<string> Lineage { get; set; }\n\n    /// <summary>\n    /// Dictionary of object if and its subsequent closure table (a dictionary of hashes and min depth at which they are found).\n    /// </summary>\n    Dictionary<string, Dictionary<string, int>> RefMinDepthTracker { get; set; }\n\n    public int TotalProcessedCount = 0;\n    #endregion\n\n    public override bool CanWrite => true;\n\n    public override bool CanRead => true;\n\n    public Action<string, int> OnProgressAction { get; set; }\n\n    public Action<string, Exception> OnErrorAction { get; set; }\n\n\n    public BaseObjectSerializer()\n    {\n      ResetAndInitialize();\n    }\n\n    /// <summary>\n    /// Reinitializes the lineage, and other variables that get used during the\n    /// json writing process.\n    /// </summary>\n    public void ResetAndInitialize()\n    {\n      DetachLineage = new List<bool>();\n      Lineage = new List<string>();\n      RefMinDepthTracker = new Dictionary<string, Dictionary<string, int>>();\n      OnProgressAction = null;\n      TotalProcessedCount = 0;\n    }\n\n    public override bool CanConvert(Type objectType) => true;\n\n    #region Read Json\n\n    public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n    {\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      if (reader.TokenType == JsonToken.Null)\n      {\n        return null;\n      }\n\n      // Check if we passed in an array, rather than an object.\n      // TODO: Test the following branch. It's not used anywhere at the moment, and the default serializer prevents it from\n      // ever being used (only allows single object serialization)\n      if (reader.TokenType == JsonToken.StartArray)\n      {\n        var list = new List<Base>();\n        var jarr = JArray.Load(reader);\n\n        foreach (var val in jarr)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return null; // Check for cancellation\n          }\n\n          var whatever = SerializationUtilities.HandleValue(val, serializer, CancellationToken);\n          list.Add(whatever as Base);\n        }\n        return list;\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      var jObject = JObject.Load(reader);\n\n      if (jObject == null)\n      {\n        return null;\n      }\n\n      var objType = jObject.GetValue(TypeDiscriminator);\n\n      // Assume dictionary!\n      if (objType == null)\n      {\n        var dict = new Dictionary<string, object>();\n\n        foreach (var val in jObject)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return null; // Check for cancellation\n          }\n\n          dict[val.Key] = SerializationUtilities.HandleValue(val.Value, serializer, CancellationToken);\n        }\n        return dict;\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      var discriminator = Extensions.Value<string>(objType);\n\n      // Check for references.\n      if (discriminator == \"reference\")\n      {\n        var id = Extensions.Value<string>(jObject.GetValue(\"referencedId\"));\n        string str = \"\";\n\n        if (ReadTransport != null)\n        {\n          str = ReadTransport.GetObject(id);\n        }\n        else\n        {\n          Log.CaptureAndThrow(new SpeckleException(\"Cannot resolve reference, no transport is defined.\"), level: Sentry.Protocol.SentryLevel.Warning);\n        }\n\n        if (str != null && str != \"\")\n        {\n          jObject = JObject.Parse(str);\n          discriminator = Extensions.Value<string>(jObject.GetValue(TypeDiscriminator));\n        }\n        else\n        {\n          Log.CaptureAndThrow(new SpeckleException(\"Cannot resolve reference. The provided transport could not find it.\"), level: Sentry.Protocol.SentryLevel.Warning);\n        }\n      }\n\n      var type = SerializationUtilities.GetType(discriminator);\n      var obj = existingValue ?? Activator.CreateInstance(type);\n\n      var contract = (JsonDynamicContract)serializer.ContractResolver.ResolveContract(type);\n      var used = new HashSet<string>();\n\n      // remove unsettable properties\n      jObject.Remove(TypeDiscriminator);\n      jObject.Remove(\"__closure\");\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      foreach (var jProperty in jObject.Properties())\n      {\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return null; // Check for cancellation\n        }\n\n        if (used.Contains(jProperty.Name))\n        {\n          continue;\n        }\n\n        used.Add(jProperty.Name);\n\n        // first attempt to find a settable property, otherwise fall back to a dynamic set without type\n        JsonProperty property = contract.Properties.GetClosestMatchProperty(jProperty.Name);\n\n        if (property != null && property.Writable && !property.Ignored)\n        {\n          if (type == typeof(Abstract) && property.PropertyName == \"base\")\n          {\n            var propertyValue = SerializationUtilities.HandleAbstractOriginalValue(jProperty.Value, ((JValue)jObject.GetValue(\"assemblyQualifiedName\")).Value as string, serializer);\n            property.ValueProvider.SetValue(obj, propertyValue);\n          }\n          else\n          {\n            var val = SerializationUtilities.HandleValue(jProperty.Value, serializer, CancellationToken, property);\n            property.ValueProvider.SetValue(obj, val);\n          }\n        }\n        else\n        {\n          // dynamic properties\n          CallSiteCache.SetValue(jProperty.Name, obj, SerializationUtilities.HandleValue(jProperty.Value, serializer, CancellationToken));\n        }\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return null; // Check for cancellation\n      }\n\n      TotalProcessedCount++;\n      OnProgressAction?.Invoke(\"DS\", 1);\n\n      foreach (var callback in contract.OnDeserializedCallbacks)\n      {\n        callback(obj, serializer.Context);\n      }\n\n      return obj;\n    }\n\n    #endregion\n\n    #region Write Json\n\n    // Keeps track of the actual tree structure of the objects being serialised.\n    // These tree references will thereafter be stored in the __tree prop. \n    private void TrackReferenceInTree(string refId)\n    {\n      // Help with creating closure table entries.\n      for (int i = 0; i < Lineage.Count; i++)\n      {\n        var parent = Lineage[i];\n\n        if (!RefMinDepthTracker.ContainsKey(parent))\n        {\n          RefMinDepthTracker[parent] = new Dictionary<string, int>();\n        }\n\n        if (!RefMinDepthTracker[parent].ContainsKey(refId))\n        {\n          RefMinDepthTracker[parent][refId] = Lineage.Count - i;\n        }\n        else if (RefMinDepthTracker[parent][refId] > Lineage.Count - i)\n        {\n          RefMinDepthTracker[parent][refId] = Lineage.Count - i;\n        }\n      }\n    }\n\n    private bool FirstEntry = true, FirstEntryWasListOrDict = false;\n\n    // While this function looks complicated, it's actually quite smooth:\n    // The important things to remember is that serialization goes depth first:\n    // The first object to get fully serialised is the first nested one, with\n    // the parent object being last. \n    public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\n    {\n      var xxxx = serializer.ReferenceLoopHandling;\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      /////////////////////////////////////\n      // Path one: nulls\n      /////////////////////////////////////\n\n      if (value == null)\n      {\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path two: primitives (string, bool, int, etc)\n      /////////////////////////////////////\n\n      if (value.GetType().IsPrimitive || value is string)\n      {\n        FirstEntry = false;\n        var t = JToken.FromObject(value); // bypasses this converter as we do not pass in the serializer\n        t.WriteTo(writer);\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path three: Bases\n      /////////////////////////////////////\n\n      if (value is Base && !(value is ObjectReference))\n      {\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return; // Check for cancellation\n        }\n\n        var obj = value as Base;\n\n        FirstEntry = false;\n        //TotalProcessedCount++;\n\n        // Append to lineage tracker\n        Lineage.Add(Guid.NewGuid().ToString());\n\n        var jo = new JObject();\n        var propertyNames = obj.GetDynamicMemberNames();\n\n        var contract = (JsonDynamicContract)serializer.ContractResolver.ResolveContract(value.GetType());\n\n        // Iterate through the object's properties, one by one, checking for ignored ones\n        foreach (var prop in propertyNames)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return; // Check for cancellation\n          }\n          // Ignore properties starting with a double underscore.\n          if (prop.StartsWith(\"__\"))\n          {\n            continue;\n          }\n\n          var property = contract.Properties.GetClosestMatchProperty(prop);\n\n          // Ignore properties decorated with [JsonIgnore].\n          if (property != null && property.Ignored)\n          {\n            continue;\n          }\n\n          // Ignore nulls\n          object propValue = obj[prop];\n          if (propValue == null)\n          {\n            continue;\n          }\n\n          // Check if this property is marked for detachment: either by the presence of \"@\" at the beginning of the name, or by the presence of a DetachProperty attribute on a typed property.\n          if (property != null)\n          {\n            var detachableAttributes = property.AttributeProvider.GetAttributes(typeof(DetachProperty), true);\n            if (detachableAttributes.Count > 0)\n            {\n              DetachLineage.Add(((DetachProperty)detachableAttributes[0]).Detachable);\n            }\n            else\n            {\n              DetachLineage.Add(false);\n            }\n\n            var chunkableAttributes = property.AttributeProvider.GetAttributes(typeof(Chunkable), true);\n            if (chunkableAttributes.Count > 0)\n            {\n              //DetachLineage.Add(true); // NOOPE\n              serializer.Context = new StreamingContext(StreamingContextStates.Other, chunkableAttributes[0]);\n            }\n            else\n            {\n              //DetachLineage.Add(false);\n              serializer.Context = new StreamingContext();\n            }\n          }\n          else if (prop.StartsWith(\"@\")) // Convention check for dynamically added properties.\n          {\n            DetachLineage.Add(true);\n\n            var chunkSyntax = new Regex(@\"^@\\((\\d*)\\)\");\n\n            if (chunkSyntax.IsMatch(prop))\n            {\n              int chunkSize;\n              var match = chunkSyntax.Match(prop);\n              int.TryParse(match.Groups[match.Groups.Count - 1].Value, out chunkSize);\n              serializer.Context = new StreamingContext(StreamingContextStates.Other,\n                chunkSize > 0 ? new Chunkable(chunkSize) : new Chunkable());\n            }\n          }\n          else\n          {\n            DetachLineage.Add(false);\n          }\n\n          // Set and store a reference, if it is marked as detachable and the transport is not null.\n          if (WriteTransports != null && WriteTransports.Count != 0 && propValue is Base && DetachLineage[DetachLineage.Count - 1])\n          {\n            var what = JToken.FromObject(propValue, serializer); // Trigger next.\n\n            if (CancellationToken.IsCancellationRequested)\n            {\n              return; // Check for cancellation\n            }\n\n            var refHash = ((JObject)what).GetValue(\"id\").ToString();\n\n            var reference = new ObjectReference() { referencedId = refHash };\n            TrackReferenceInTree(refHash);\n            jo.Add(prop, JToken.FromObject(reference));\n          }\n          else\n          {\n            jo.Add(prop, JToken.FromObject(propValue, serializer)); // Default route\n          }\n\n          // Pop detach lineage. If you don't get this, remember this thing moves ONLY FORWARD, DEPTH FIRST\n          DetachLineage.RemoveAt(DetachLineage.Count - 1);\n        }\n\n        // Check if we actually have any transports present that would warrant a \n        if ((WriteTransports != null && WriteTransports.Count != 0) && RefMinDepthTracker.ContainsKey(Lineage[Lineage.Count - 1]))\n        {\n          jo.Add(\"__closure\", JToken.FromObject(RefMinDepthTracker[Lineage[Lineage.Count - 1]]));\n        }\n\n        var hash = Models.Utilities.hashString(jo.ToString());\n        if (!jo.ContainsKey(\"id\"))\n        {\n          jo.Add(\"id\", JToken.FromObject(hash));\n        }\n        jo.WriteTo(writer);\n\n        if ((DetachLineage.Count == 0 || DetachLineage[DetachLineage.Count - 1]) && WriteTransports != null && WriteTransports.Count != 0)\n        {\n          var objString = jo.ToString();\n          var objId = jo[\"id\"].Value<string>();\n\n          OnProgressAction?.Invoke(\"S\", 1);\n\n          foreach (var transport in WriteTransports)\n          {\n            if (CancellationToken.IsCancellationRequested)\n            {\n              continue; // Check for cancellation\n            }\n\n            transport.SaveObject(objId, objString);\n          }\n        }\n\n        // Pop lineage tracker\n        Lineage.RemoveAt(Lineage.Count - 1);\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path four: lists/arrays & dicts\n      /////////////////////////////////////\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      var type = value.GetType();\n\n      // TODO: List handling and dictionary serialisation handling can be sped up significantly if we first check by their inner type.\n      // This handles a broader case in which we are, essentially, checking only for object[] or List<object> / Dictionary<string, object> cases.\n      // A much faster approach is to check for List<primitive>, where primitive = string, number, etc. and directly serialize it in full.\n      // Same goes for dictionaries.\n      if (typeof(IEnumerable).IsAssignableFrom(type) && !typeof(IDictionary).IsAssignableFrom(type) && type != typeof(string))\n      {\n\n        if (TotalProcessedCount == 0 && FirstEntry)\n        {\n          FirstEntry = false;\n          FirstEntryWasListOrDict = true;\n          TotalProcessedCount += 1;\n          DetachLineage.Add(WriteTransports != null && WriteTransports.Count != 0 ? true : false);\n        }\n\n        JArray arr = new JArray();\n\n        // Chunking large lists into manageable parts.\n        if (DetachLineage[DetachLineage.Count - 1] && serializer.Context.Context is Chunkable chunkInfo)\n        {\n          var maxCount = chunkInfo.MaxObjCountPerChunk;\n          var i = 0;\n          var chunkList = new List<DataChunk>();\n          var currChunk = new DataChunk();\n\n          foreach (var arrValue in ((IEnumerable)value))\n          {\n            if (i == maxCount)\n            {\n              chunkList.Add(currChunk);\n              currChunk = new DataChunk();\n              i = 0;\n            }\n            currChunk.data.Add(arrValue);\n            i++;\n          }\n          chunkList.Add(currChunk);\n          value = chunkList;\n        }\n\n        foreach (var arrValue in ((IEnumerable)value))\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return; // Check for cancellation\n          }\n\n          if (arrValue == null)\n          {\n            continue;\n          }\n\n          if (WriteTransports != null && WriteTransports.Count != 0 && arrValue is Base && DetachLineage[DetachLineage.Count - 1])\n          {\n            var what = JToken.FromObject(arrValue, serializer); // Trigger next\n\n            var refHash = ((JObject)what).GetValue(\"id\").ToString();\n\n            var reference = new ObjectReference() { referencedId = refHash };\n            TrackReferenceInTree(refHash);\n            arr.Add(JToken.FromObject(reference));\n          }\n          else\n          {\n            arr.Add(JToken.FromObject(arrValue, serializer)); // Default route\n          }\n        }\n\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return; // Check for cancellation\n        }\n\n        arr.WriteTo(writer);\n\n        if (DetachLineage.Count == 1 && FirstEntryWasListOrDict) // are we in a list entry point case?\n        {\n          DetachLineage.RemoveAt(0);\n        }\n\n        return;\n      }\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      if (typeof(IDictionary).IsAssignableFrom(type))\n      {\n        if (TotalProcessedCount == 0 && FirstEntry)\n        {\n          FirstEntry = false;\n          FirstEntryWasListOrDict = true;\n          TotalProcessedCount += 1;\n          DetachLineage.Add(WriteTransports != null && WriteTransports.Count != 0 ? true : false);\n        }\n        var dict = value as IDictionary;\n        var dictJo = new JObject();\n        foreach (DictionaryEntry kvp in dict)\n        {\n          if (CancellationToken.IsCancellationRequested)\n          {\n            return; // Check for cancellation\n          }\n\n          if (kvp.Value == null)\n          {\n            continue;\n          }\n\n          JToken jToken;\n          if (WriteTransports != null && WriteTransports.Count != 0 && kvp.Value is Base && DetachLineage[DetachLineage.Count - 1])\n          {\n            var what = JToken.FromObject(kvp.Value, serializer); // Trigger next\n            var refHash = ((JObject)what).GetValue(\"id\").ToString();\n\n            var reference = new ObjectReference() { referencedId = refHash };\n            TrackReferenceInTree(refHash);\n            jToken = JToken.FromObject(reference);\n          }\n          else\n          {\n            jToken = JToken.FromObject(kvp.Value, serializer); // Default route\n          }\n          dictJo.Add(kvp.Key.ToString(), jToken);\n        }\n        dictJo.WriteTo(writer);\n\n        if (CancellationToken.IsCancellationRequested)\n        {\n          return; // Check for cancellation\n        }\n\n        if (DetachLineage.Count == 1 && FirstEntryWasListOrDict) // are we in a dictionary entry point case?\n        {\n          DetachLineage.RemoveAt(0);\n        }\n\n        return;\n      }\n\n      /////////////////////////////////////\n      // Path five: everything else (enums?)\n      /////////////////////////////////////\n\n      if (CancellationToken.IsCancellationRequested)\n      {\n        return; // Check for cancellation\n      }\n\n      FirstEntry = false;\n      var lastCall = JToken.FromObject(value); // bypasses this converter as we do not pass in the serializer\n      lastCall.WriteTo(writer);\n    }\n\n    #endregion\n\n  }\n\n}\n\nChocolate pie sesame snaps gummi bears tiramisu marzipan muffin danish. Ice\ncream chupa chups donut. Donut topping cheesecake. Candy canes chocolate sesame\nsnaps gummi bears gummies lollipop. Halvah sesame snaps jelly tart chocolate\ncake danish ice cream. Apple pie cookie apple pie. Croissant carrot cake\nchocolate jelly beans tootsie roll toffee. Icing apple pie jelly chocolate cake\napple pie muffin jelly bonbon lollipop.","feature_image":"/content/images/2021/01/Screenshot-2020-05-18-at-18.09.05.png","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-28 09:17:56","updated_at":"2021-02-02 21:16:21","published_at":"2021-01-28 19:19:48","custom_excerpt":".NET, Python, Javascript - we've got you covered. ","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"601281522c15d83646449dad","uuid":"285182a4-cc12-47fa-8c5e-e359ff6b3915","title":"Versioning","slug":"project-delivery","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"Speckle as a VCS\"]]],[1,\"p\",[]]]}","html":"<p>Speckle as a VCS</p>","comment_id":"601281522c15d83646449dad","plaintext":"Speckle as a VCS","feature_image":"/content/images/2021/02/copy.svg","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-28 09:18:10","updated_at":"2021-02-06 10:09:46","published_at":"2021-01-31 09:18:00","custom_excerpt":"Bonbon gummies bear claw danish sugar plum chupa chups candy. Ice cream jelly beans bonbon. Muffin cake apple pie.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"60132e023d0406908f70f20b","uuid":"f5ccd3e6-3e19-4ff7-8857-9fe37c3f8405","title":"AEC Software Engineer","slug":"test","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"If software APIs are your daily bread 🍞, then this position is for you! We're looking for an experienced developer who has tamed various authoring and analysis tools APIs (Revit, Rhino, Grasshopper, Dynamo APIs...) to help us support and expand our growing list of connectors. You will be in charge of our .NET SDK. Web development / Python skills are a plus!\"]]],[1,\"p\",[[0,[],0,\"Required skills:\"]]],[3,\"ul\",[[[0,[],0,\"C# & .NET\"]],[[0,[],0,\"WPF\"]],[[0,[],0,\"AEC APIs (Revit, Rhino, etc.)\"]],[[0,[],0,\"Working knowledge of AEC software (Revit, Rhino, Dynamo, Grasshopper, etc.)\"]]]],[1,\"p\",[[0,[],0,\"Bonus skills:\"]]],[3,\"ul\",[[[0,[],0,\"Experience with game development engines (Unity, Unreal)\"]],[[0,[],0,\"C++\"]],[[0,[],0,\"Devops\"]]]]]}","html":"<p>If software APIs are your daily bread 🍞, then this position is for you! We're looking for an experienced developer who has tamed various authoring and analysis tools APIs (Revit, Rhino, Grasshopper, Dynamo APIs...) to help us support and expand our growing list of connectors. You will be in charge of our .NET SDK. Web development / Python skills are a plus!</p><p>Required skills:</p><ul><li>C# &amp; .NET</li><li>WPF</li><li>AEC APIs (Revit, Rhino, etc.)</li><li>Working knowledge of AEC software (Revit, Rhino, Dynamo, Grasshopper, etc.)</li></ul><p>Bonus skills:</p><ul><li>Experience with game development engines (Unity, Unreal)</li><li>C++</li><li>Devops</li></ul>","comment_id":"60132e023d0406908f70f20b","plaintext":"If software APIs are your daily bread 🍞, then this position is for you! We're\nlooking for an experienced developer who has tamed various authoring and\nanalysis tools APIs (Revit, Rhino, Grasshopper, Dynamo APIs...) to help us\nsupport and expand our growing list of connectors. You will be in charge of our\n.NET SDK. Web development / Python skills are a plus!\n\nRequired skills:\n\n * C# & .NET\n * WPF\n * AEC APIs (Revit, Rhino, etc.)\n * Working knowledge of AEC software (Revit, Rhino, Dynamo, Grasshopper, etc.)\n\nBonus skills:\n\n * Experience with game development engines (Unity, Unreal)\n * C++\n * Devops","feature_image":null,"featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-28 21:34:58","updated_at":"2021-01-31 10:27:00","published_at":"2021-01-30 20:36:39","custom_excerpt":"C#, WPF, AEC APIs, GraphQL | Remote/London\n","codeinjection_head":null,"codeinjection_foot":null,"custom_template":"custom-careers-post","canonical_url":null},{"id":"60158e543d0406908f70f218","uuid":"099f1d3a-0821-408e-9142-12bfd6028f20","title":"About","slug":"about","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[[\"strong\"]],\"sections\":[[1,\"h2\",[[0,[],0,\"Speckle is open source digital infrastructure for the built environment. We handle \"],[0,[0],1,\"interoperability\"],[0,[],0,\" between software silos, real time \"],[0,[0],1,\"collaboration\"],[0,[],0,\", data management, versioning and \"],[0,[0],1,\"automation\"],[0,[],0,\". \"]]],[1,\"h2\",[[0,[],0,\"Our mission is to revolutionise the AEC industry's digital performance and accelerate the pace of innovation. \"]]],[1,\"p\",[]]]}","html":"<h2 id=\"speckle-is-open-source-digital-infrastructure-for-the-built-environment-we-handle-interoperability-between-software-silos-real-time-collaboration-data-management-versioning-and-automation-\">Speckle is open source digital infrastructure for the built environment. We handle <strong>interoperability</strong> between software silos, real time <strong>collaboration</strong>, data management, versioning and <strong>automation</strong>. </h2><h2 id=\"our-mission-is-to-revolutionise-the-aec-industry-s-digital-performance-and-accelerate-the-pace-of-innovation-\">Our mission is to revolutionise the AEC industry's digital performance and accelerate the pace of innovation. </h2>","comment_id":"60158e543d0406908f70f218","plaintext":"Speckle is open source digital infrastructure for the built environment. We\nhandle interoperability between software silos, real time collaboration, data\nmanagement, versioning and automation. \nOur mission is to revolutionise the AEC industry's digital performance and\naccelerate the pace of innovation.","feature_image":"/content/images/2021/01/Screenshot-2020-12-04-at-09.28.50.png","featured":0,"type":"page","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-30 16:50:28","updated_at":"2021-01-31 19:02:33","published_at":"2021-01-30 17:06:42","custom_excerpt":"Speckle is open source digital infrastructure for the built environment. We handle interoperability between software silos, real time collaboration, data management, versioning and automation.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6015ea0646f2deffd6a28192","uuid":"c62bcf20-254d-456b-9895-b77ad070406f","title":"Frontend Engineer","slug":"frontend-engineer","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"We're looking for an experienced and talented Frontend + UX/UI engineer to look after and improve the Speckle Web app and to develop brand new specialized apps that will leverage Speckle data (dashboards, automation & management tools and more) and experiences. \"]]],[1,\"p\",[[0,[],0,\"Required skills:\"]]],[3,\"ul\",[[[0,[],0,\"Javascript\"]],[[0,[],0,\"Frameworks: Vuejs, Ghost, Tailwind\"]],[[0,[],0,\"GraphQL\"]],[[0,[],0,\"UX/UI\"]]]],[1,\"p\",[[0,[],0,\"Bonus skills:\"]]],[3,\"ul\",[[[0,[],0,\"Experience in working in the AEC industry\"]],[[0,[],0,\"NodeJs\"]],[[0,[],0,\"ThreeJs\"]]]]]}","html":"<p>We're looking for an experienced and talented Frontend + UX/UI engineer to look after and improve the Speckle Web app and to develop brand new specialized apps that will leverage Speckle data (dashboards, automation &amp; management tools and more) and experiences. </p><p>Required skills:</p><ul><li>Javascript</li><li>Frameworks: Vuejs, Ghost, Tailwind</li><li>GraphQL</li><li>UX/UI</li></ul><p>Bonus skills:</p><ul><li>Experience in working in the AEC industry</li><li>NodeJs</li><li>ThreeJs</li></ul>","comment_id":"6015ea0646f2deffd6a28192","plaintext":"We're looking for an experienced and talented Frontend + UX/UI engineer to look\nafter and improve the Speckle Web app and to develop brand new specialized apps\nthat will leverage Speckle data (dashboards, automation & management tools and\nmore) and experiences. \n\nRequired skills:\n\n * Javascript\n * Frameworks: Vuejs, Ghost, Tailwind\n * GraphQL\n * UX/UI\n\nBonus skills:\n\n * Experience in working in the AEC industry\n * NodeJs\n * ThreeJs","feature_image":null,"featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-30 23:21:42","updated_at":"2021-01-31 17:21:09","published_at":"2021-01-30 23:24:19","custom_excerpt":"Js, Vue, UX/UI, GraphQL, ThreeJs | Remote/London","codeinjection_head":null,"codeinjection_foot":null,"custom_template":"custom-careers-post","canonical_url":null},{"id":"601693da16926135029da161","uuid":"3fbb412a-150e-4595-865e-df28ddedb3d3","title":"Speckle v2 Alpha FAQ","slug":"speckle-v2-alpha-faq","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"\\nSpeckle v2 is a brand new Speckle, re-written from scratch to scale - both in terms of data, as well as features. We've incorporated the lessons learned during V1, and we've brought along the best parts and made them even better. \\n\\nAll the code for v2 can be found in our new github organisation, [Speckle Systems](https://github.com/specklesystems). There are three main repositories: \\n\\n- [speckle-sharp](https://github.com/specklesystems/speckle-sharp): a monorepo containing all our .NET projects: Core (the .NET SDK), Objects (our default Kit), converters and connectors (currently for Revit, Rhino, Dynamo & Grasshopper)\\n- [speckle-server](https://github.com/specklesystems/speckle-server): the backend and frontend monorepo.\\n- [speckle-py](https://github.com/specklesystems/speckle-py): the 2.0 Python SDK.\\n\\n**To get started as a developer,** read the instructions in each repo's README. Inside speckle-sharp, you'll also find additional instructions under each connector's folder.\\n\\n### FAQ\\n\\n1. **What are the main changes and new features?** Okay, this is going to be a long list, but it's worth reading it!\\n    - New server architecture: goodbye MongoDB, welcome Postgress. The new DB is better suited for our new data structures and queries.\\n    - Speckle ❤️Git: v2 is highly inspired by how Git works. You'll now see that Streams behave a bit like git repositories: they have branches and commits! More on this in a future post.\\n    - Extensible objects: our new .NET SDK makes use of a new `Base` class which lets you add properties at runtime and do a lot of other cool things without having to define your own schemas or Kits, read more on [The Base Object](https://discourse.speckle.works/t/core-2-0-the-base-object/782).\\n    - Better performance: big streams of data can now be decomposed into smaller entities, this means you can stream really huge models and then only query the parts that you need! Read more on the [Decomposition API](https://discourse.speckle.works/t/core-2-0-decomposition-api/911)\\n    - Transports: ever desired saving Speckle data to disk, to JSON or to any other database/location/format? Now you can! You can now create new Transports (eg a MongoDB or a InMemory transport) and send your data there instead than to a Speckle server. Read more on [Transports](https://discourse.speckle.works/t/core-2-0-transports/919).\\n    - More stable Kits: we have also changed the way Kits behave (basically custom schemas you can use with Speckle), and made them much more stable and still as flexible as they used to be. Read on this in [Introducing Kits 2.0](https://discourse.speckle.works/t/introducing-kits-2-0/710).\\n    - Better conversions: we have managed to finally support some fundamental geometry conversions that v1 never had, namely NURB Surfaces and BREPs. We have also highly extended and improved various other conversions, especially in the Revit Converter and when generating Revit elements from Grasshopper (the so called SchemaBuilder component).\\n    - Brand new [Python SDK,](https://github.com/specklesystems/speckle-py) together with our brand new .NET SDK, we are releasing a Python one to match it in almost all features and functionalities\\n    - We have also released publicly and under an open source permissive license, some tools that we have developed and use internally that you might find useful too. An [xUnit test framework](https://speckle.systems/blog/xunitrevit/) for Revit and an [Async Grasshopper component](https://speckle.systems/blog/async-gh/). Check them out!\\n2. **What is not ready yet?** Being this an alpha release, there's still parts that need a lot of love and other that we haven't started yet, namely:\\n    - 3D viewer, is not there yet! We know it's a crucial part of speckle and we're working on it\\n    - web app, it's there but it's still very minimal, new features will be added as soon as we develop them\\n    - additional connectors, especially community contributions that we had in 1.0 haven't been ported to 2.0 yet, these include: Excel, Unreal, Blender & Civil3D. \\n    We have recently started working on the Unity connector and its WIP version [is hosted here](https://github.com/specklesystems/speckle-unity-wip).\\n    If you'd like to help Speckle and contribute to develop and maintain any of these, **please get in touch!**\\n3. **Cool stuff, what next?** We're working hard to get to a stable v2 release, we expect to have a first release candidate in Q1 of 2021, it's soon so stay tuned! \\nYou can see the maturity of each Speckle piece of the puzzle in our [Release Roadmap](https://www.notion.so/ed92c5d501824d569545662df65ccec4) and of course keep in touch on our [forum](https://discourse.speckle.works/) and on [Twitter](https://twitter.com/)!\\n4. Any additional questions on 2.0? Please drop them in the [forum](https://discourse.speckle.works/c/general/8)!\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>Speckle v2 is a brand new Speckle, re-written from scratch to scale - both in terms of data, as well as features. We've incorporated the lessons learned during V1, and we've brought along the best parts and made them even better.</p>\n<p>All the code for v2 can be found in our new github organisation, <a href=\"https://github.com/specklesystems\">Speckle Systems</a>. There are three main repositories:</p>\n<ul>\n<li><a href=\"https://github.com/specklesystems/speckle-sharp\">speckle-sharp</a>: a monorepo containing all our .NET projects: Core (the .NET SDK), Objects (our default Kit), converters and connectors (currently for Revit, Rhino, Dynamo &amp; Grasshopper)</li>\n<li><a href=\"https://github.com/specklesystems/speckle-server\">speckle-server</a>: the backend and frontend monorepo.</li>\n<li><a href=\"https://github.com/specklesystems/speckle-py\">speckle-py</a>: the 2.0 Python SDK.</li>\n</ul>\n<p><strong>To get started as a developer,</strong> read the instructions in each repo's README. Inside speckle-sharp, you'll also find additional instructions under each connector's folder.</p>\n<h3 id=\"faq\">FAQ</h3>\n<ol>\n<li><strong>What are the main changes and new features?</strong> Okay, this is going to be a long list, but it's worth reading it!\n<ul>\n<li>New server architecture: goodbye MongoDB, welcome Postgress. The new DB is better suited for our new data structures and queries.</li>\n<li>Speckle ❤️Git: v2 is highly inspired by how Git works. You'll now see that Streams behave a bit like git repositories: they have branches and commits! More on this in a future post.</li>\n<li>Extensible objects: our new .NET SDK makes use of a new <code>Base</code> class which lets you add properties at runtime and do a lot of other cool things without having to define your own schemas or Kits, read more on <a href=\"https://discourse.speckle.works/t/core-2-0-the-base-object/782\">The Base Object</a>.</li>\n<li>Better performance: big streams of data can now be decomposed into smaller entities, this means you can stream really huge models and then only query the parts that you need! Read more on the <a href=\"https://discourse.speckle.works/t/core-2-0-decomposition-api/911\">Decomposition API</a></li>\n<li>Transports: ever desired saving Speckle data to disk, to JSON or to any other database/location/format? Now you can! You can now create new Transports (eg a MongoDB or a InMemory transport) and send your data there instead than to a Speckle server. Read more on <a href=\"https://discourse.speckle.works/t/core-2-0-transports/919\">Transports</a>.</li>\n<li>More stable Kits: we have also changed the way Kits behave (basically custom schemas you can use with Speckle), and made them much more stable and still as flexible as they used to be. Read on this in <a href=\"https://discourse.speckle.works/t/introducing-kits-2-0/710\">Introducing Kits 2.0</a>.</li>\n<li>Better conversions: we have managed to finally support some fundamental geometry conversions that v1 never had, namely NURB Surfaces and BREPs. We have also highly extended and improved various other conversions, especially in the Revit Converter and when generating Revit elements from Grasshopper (the so called SchemaBuilder component).</li>\n<li>Brand new <a href=\"https://github.com/specklesystems/speckle-py\">Python SDK,</a> together with our brand new .NET SDK, we are releasing a Python one to match it in almost all features and functionalities</li>\n<li>We have also released publicly and under an open source permissive license, some tools that we have developed and use internally that you might find useful too. An <a href=\"https://speckle.systems/blog/xunitrevit/\">xUnit test framework</a> for Revit and an <a href=\"https://speckle.systems/blog/async-gh/\">Async Grasshopper component</a>. Check them out!</li>\n</ul>\n</li>\n<li><strong>What is not ready yet?</strong> Being this an alpha release, there's still parts that need a lot of love and other that we haven't started yet, namely:\n<ul>\n<li>3D viewer, is not there yet! We know it's a crucial part of speckle and we're working on it</li>\n<li>web app, it's there but it's still very minimal, new features will be added as soon as we develop them</li>\n<li>additional connectors, especially community contributions that we had in 1.0 haven't been ported to 2.0 yet, these include: Excel, Unreal, Blender &amp; Civil3D.<br>\nWe have recently started working on the Unity connector and its WIP version <a href=\"https://github.com/specklesystems/speckle-unity-wip\">is hosted here</a>.<br>\nIf you'd like to help Speckle and contribute to develop and maintain any of these, <strong>please get in touch!</strong></li>\n</ul>\n</li>\n<li><strong>Cool stuff, what next?</strong> We're working hard to get to a stable v2 release, we expect to have a first release candidate in Q1 of 2021, it's soon so stay tuned!<br>\nYou can see the maturity of each Speckle piece of the puzzle in our <a href=\"https://www.notion.so/ed92c5d501824d569545662df65ccec4\">Release Roadmap</a> and of course keep in touch on our <a href=\"https://discourse.speckle.works/\">forum</a> and on <a href=\"https://twitter.com/\">Twitter</a>!</li>\n<li>Any additional questions on 2.0? Please drop them in the <a href=\"https://discourse.speckle.works/c/general/8\">forum</a>!</li>\n</ol>\n<!--kg-card-end: markdown-->","comment_id":"601693da16926135029da161","plaintext":"Speckle v2 is a brand new Speckle, re-written from scratch to scale - both in\nterms of data, as well as features. We've incorporated the lessons learned\nduring V1, and we've brought along the best parts and made them even better.\n\nAll the code for v2 can be found in our new github organisation, Speckle Systems\n[https://github.com/specklesystems]. There are three main repositories:\n\n * speckle-sharp [https://github.com/specklesystems/speckle-sharp]: a monorepo\n   containing all our .NET projects: Core (the .NET SDK), Objects (our default\n   Kit), converters and connectors (currently for Revit, Rhino, Dynamo &\n   Grasshopper)\n * speckle-server [https://github.com/specklesystems/speckle-server]: the\n   backend and frontend monorepo.\n * speckle-py [https://github.com/specklesystems/speckle-py]: the 2.0 Python\n   SDK.\n\nTo get started as a developer, read the instructions in each repo's README.\nInside speckle-sharp, you'll also find additional instructions under each\nconnector's folder.\n\nFAQ\n 1. What are the main changes and new features? Okay, this is going to be a long\n    list, but it's worth reading it! * New server architecture: goodbye MongoDB,\n       welcome Postgress. The new DB is better suited for our new data\n       structures and queries.\n     * Speckle ❤️Git: v2 is highly inspired by\n       how Git works. You'll now see that Streams behave a bit like git\n       repositories: they have branches and commits! More on this in a future\n       post.\n     * Extensible objects: our new .NET SDK\n       makes use of a new Base class which lets you add properties at runtime\n       and do a lot of other cool things without having to define your own\n       schemas or Kits, read more on The Base Object\n       [https://discourse.speckle.works/t/core-2-0-the-base-object/782].\n     * Better performance: big streams of data\n       can now be decomposed into smaller entities, this means you can stream\n       really huge models and then only query the parts that you need! Read more\n       on the Decomposition API\n       [https://discourse.speckle.works/t/core-2-0-decomposition-api/911]\n     * Transports: ever desired saving Speckle\n       data to disk, to JSON or to any other database/location/format? Now you\n       can! You can now create new Transports (eg a MongoDB or a InMemory\n       transport) and send your data there instead than to a Speckle server.\n       Read more on Transports\n       [https://discourse.speckle.works/t/core-2-0-transports/919].\n     * More stable Kits: we have also changed\n       the way Kits behave (basically custom schemas you can use with Speckle),\n       and made them much more stable and still as flexible as they used to be.\n       Read on this in Introducing Kits 2.0\n       [https://discourse.speckle.works/t/introducing-kits-2-0/710].\n     * Better conversions: we have managed to\n       finally support some fundamental geometry conversions that v1 never had,\n       namely NURB Surfaces and BREPs. We have also highly extended and improved\n       various other conversions, especially in the Revit Converter and when\n       generating Revit elements from Grasshopper (the so called SchemaBuilder\n       component).\n     * Brand new Python SDK, [https://github.com/specklesystems/speckle-py] \n       together with our brand new .NET SDK, we are releasing a Python one to\n       match it in almost all features and functionalities\n     * We have also released publicly and under\n       an open source permissive license, some tools that we have developed and\n       use internally that you might find useful too. An xUnit test framework\n       [https://speckle.systems/blog/xunitrevit/] for Revit and an Async\n       Grasshopper component [https://speckle.systems/blog/async-gh/]. Check\n       them out!\n    \n    \n 2. What is not ready yet? Being this an alpha release, there's still parts that\n    need a lot of love and other that we haven't started yet, namely: * 3D\n       viewer, is not there yet! We know it's a crucial part of speckle and\n       we're working on it\n     * web app,\n       it's there but it's still very minimal, new features will be added as\n       soon as we develop them\n     * \n       additional connectors, especially community contributions that we had in\n       1.0 haven't been ported to 2.0 yet, these include: Excel, Unreal, Blender\n       & Civil3D.\n       We have recently started working on the Unity connector and its WIP\n       version is hosted here\n       [https://github.com/specklesystems/speckle-unity-wip].\n       If you'd like to help Speckle and contribute to develop and maintain any\n       of these, please get in touch!\n    \n    \n 3. Cool stuff, what next? We're working hard to get to a stable v2 release, we\n    expect to have a first release candidate in Q1 of 2021, it's soon so stay\n    tuned!\n    You can see the maturity of each Speckle piece of the puzzle in our Release\n    Roadmap [https://www.notion.so/ed92c5d501824d569545662df65ccec4] and of\n    course keep in touch on our forum [https://discourse.speckle.works/] and on \n    Twitter [https://twitter.com/]!\n 4. Any additional questions on 2.0? Please drop them in the forum\n    [https://discourse.speckle.works/c/general/8]!","feature_image":null,"featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 11:26:18","updated_at":"2021-01-31 11:27:26","published_at":"2021-01-31 11:27:26","custom_excerpt":"Speckle v2 is a brand new Speckle, re-written from scratch to scale - both in terms of data, as well as features. We've incorporated the lessons learned during V1, and we've brought along the best parts and made them even better.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6016942c16926135029da16a","uuid":"6c9d545f-6231-476c-928d-f00bc234d68d","title":"Open Source in AEC & Speckle","slug":"open-source-in-aec-speckle","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"![oss-graphic](https://strapi.speckle.works/uploads/oss-1200x2375_0cb8f310f5.png)\\n\\nWhen Speckle started back in 2015, as part of Dimitrie’s research at UCL The Bartlett School of Architecture, the choice of licensing it under a permissive open source license followed naturally from the setting in which the project was created: [a consortium of academic and industry stakeholders, financed by the EU’s Horizon 2020 programme](http://innochain.net/), and tasked with the shared mission of moving the architecture, engineering and construction industry forward.\\n\\nNot surpsingly, a shared mission focused on a common greater good, collaboration, and passion are key ingredients of open source. With this post, the team at Speckle would like to talk about what open source means for us, as well as the AEC industry, and how we’re attempting to transform the industry with those values in mind.\\n\\n## What is Open Source?\\n\\nLet's start by saying what OSS (Open Source Software) is not: it's not a hype, a buzzword, a hippy movement, a charity, a left-wing anarchist movement, or an IP devouring spaghetti monster. Though may contain traces of some of those elements, here’s a more authoritative definition:\\n\\n> \\\"Open-source software is a type of computer software in which source code is released under a license in which the copyright holder grants users the rights to use, study, change, and distribute the software to anyone and for any purpose.\\\" -Wikipedia\\n\\nLicensing differences aside, in open source software, the code is open and visible to everyone. Moreover, anyone can contribute to it, use it, and share it free of charge. **It is as if we could access the recipe for making sourdough bread - and we were even allowed to make it ourselves, improve upon it, and sell it to others. Shocking, isn’t it?**\\n\\nContrary to popular belief, OSS allows for better security and transparency (more eyes on the code lead to better and more robust software), as well as longevity. For example, Speckle was born before Flux was revealed to the world, and is still alive and kicking five years later - two and a half years after Flux abruptly shut down. This, and many other reasons, is why OSS is becoming the norm rather than the exception in some parts of the tech industry.\\n\\nOpen source is already a key component of many other industries. For example, the open source blogging platform Wordpress - which is how both Matteo and Dimitrie learned PHP many years ago - powers an astounding 35% of the internet in 2020. In 2013, only 35% of database engines were open source; now they account for almost 50% of the market ([source](https://db-engines.com/en/ranking_osvsc)). Beyond this, there’s a host of open source technologies out there (e.g., Linux, React.js, Nginx, Kubernetes, PostgreSQL, GitLab, TensorFlow, Blender, FreeCAD etc.) that power the business logic of the world.\\n\\n## Software as a Competitive Advantage\\n\\nIn AEC the open source landscape is budding, but still quite fragmented. Most AEC companies and industry software vendors treat OSS with a measure of suspicion. Nevertheless, “brick & mortar” AEC companies treat whatever software or automation tools they produce as key differentiators that give them a competitive advantage.\\n\\nIn turn, this undermines the formation of a community and blocks innovation. From our first-hand experience, this is a fundamentally misguided approach. Why would AEC companies compete against each other in software and product development - domains *outside* their core expertise and skill sets, and for which they are culturally and technologically ill-equipped?\\n\\nWe can trace this behaviour to the desire of AEC companies to project an image of a digitally-ready and competent enterprise. Being digitally savvy is a key differentiator, and a necessary skill in today’s market. To achieve this, most AEC companies prefer to rely on curated press releases and presentations of the digital tools they produce rather than actually releasing them as software products that everybody can use - let alone open sourcing them.\\n\\nThis results in a lot of duplication of work across the industry: different companies solve the same problem over and over again as they cannot build on top of each other’s efforts. Moreover, because they are not culturally and operationally ready to **maintain** the software they produce (as much of the software development efforts are financed through project-based work), many times work is duplicated even within the same enterprise. Just ask a computational designer how many times they’ve had to automate Revit imports or exports from Rhino, an analytics dashboard for a project, or a 3D interactive visualisation with Unity or Unreal.\\n\\n**Nevertheless, the goal of becoming a digitally savvy enterprise is not at odds with the principles behind open source.** Google, Facebook, and even Microsoft, are heavily investing in delivering and supporting open source software in order to extend their commercial interests, ensure a level playing field in key competitive areas, and, most importantly, gain market mindshare and project an image of a forward thinking enterprise. In essence, this is because being **open source acts as a force multiplier extending the outreach, quality and longevity of software that benefits fairly both the authors of the code, as well as the adopters.**\\n\\n> Changing this attitude in the AEC industry is a big reason why Speckle is open source. We believe in improving the industry as a whole, and we want to show that a collaborative and cooperative approach is a viable path to digital progress.\\n\\n## Dynamics of Open Source\\n\\nPresently, the adversarial attitude towards software development in AEC results in a stagnating knowledge base as skills and experience do not accumulate into a greater whole. As a result, the industry is stuck with a slow, incremental at best, pace of innovation. This plays perfectly into the hands of software vendors servicing the industry, who are the ones exerting most control over the speed and efficiency with which AEC “digitalises”. In contrast, the dynamics of an open source ecosystem would work in the opposite direction by accelerating innovation and promoting healthy competition.\\n\\nUsually, a well functioning open source project is surrounded by an ecosystem of other related software, open or proprietary, that depends upon, or extends, the original. The dynamics of this ecosystem are beneficial to all stakeholders involved. Linux, WordPress, Qt, various DBs, other frameworks and programming languages are all examples of this virtuous circle. Having a low level open source base on which to build on enables developers to focus on business needs rather than reinventing the wheel. The benefits go both ways: improvements to the open source base travel upstream, making it more robust and businesses achieve better results faster, with less investment and more time for refinement.\\n\\n**Unfortunately, within AEC the key low level building blocks are all proprietary**, be it geometry kernels, data or cloud infrastructure. Developers are, most of the time, tied to extending and building on top of the proprietary solutions offered by software vendors. Open source or not, the software they produce still enriches, and is dependent upon, a closed source core. This leads to an imbalance of power: developers do not participate on equal grounds in the creation of value, and are beholden to the interests of software vendors.\\n\\n> Speckle reverses this balance. Rather than providing a closed source core on which to build a flawed ecosystem, we provide an open source platform for handling data and interoperability on top of which we want to encourage the growth of a virtuous ecosystem that benefits all.\\n\\n## Open vs. Open Source\\n\\nThe AEC industry tends to sometimes use interchangeably the terms “open” and “open source” and, generally, muddle the distinction between them. This creates a false impression of “righteousness” which we believe is extremely detrimental to the industry at large; it degrades the principles of open source, while confusing and disorienting users.\\n\\nOne of the most clear examples of this semantic insecurity, and one that’s close to Speckle’s heart, is the term Open API. An API (application programming interface) is the instrument through which a library, or software communicates with the external world (other consuming services, an application built on top, or a website). First, calling an API “open” does not mean it is open source. In some cases, it simply means that it is **documented** according to a well established standard (called, not surprisingly, [Open API](https://swagger.io/specification/)). Most importantly, an “Open API” can be served by a proprietary application - either cloud or desktop based. In this case, the term “open” does not come with any of the freedoms and rights usually associated with open source.\\n\\nThere are other examples that make clear the importance to distinguish between “open” and “open source”. For example, in order to access the source (and use) of the libraries for reading common data formats in AEC authored by the Open Design Alliance, [a yearly membership fee of 30.000 USD is required](https://www.opendesign.com/pricing). If these libraries were genuinely open source, their source code would be freely available at no cost. Nevertheless, there are a growing number of examples of truly open source software. A well established project is [Ladybug Tools](https://www.ladybug.tools/); other notable examples are software packages such as [Blender](https://www.blender.org/) and [FreeCAD](https://www.freecadweb.org/). If you want to know more, [Nick](https://twitter.com/GimbalNick) has put together a [nice list of OSS in AEC](https://airtable.com/shrqOCpnYNftdDMzR/tblKhB3De2xrqy69s), which complements the one put out by the [Open-Source Architecture Community](https://community.osarch.org/). We’re happy to see Speckle on these lists!\\n\\n> We've talked a lot about open source so far; but where's the Speckle Source? Here it is, and don't forget to give those repos a ⭐:\\n> **[Speckle Sharp](https://github.com/specklesystems/speckle-sharp)** - contains the .NET SDK and all connectors (Grasshopper, Revit, Dynamo, etc.)\\n> **[Speckle Server](https://github.com/specklesystems/speckle-server)** - contains the server and frontend applicaiton! \\n> \\n> [The Speckle Org](https://github.com/specklesystems) is where other parts of Speckle will make their way into OSS. \\n\\n## What Does Open Source Mean for Speckle?\\n\\nAfter setting [up a company to work entirely on Speckle](https://speckle.systems/blog/speckle2-vision-and-faq) and deciding to go for a rewrite of most of its codebase, we asked ourselves: is open source still the right way?\\n\\n**Long story short: yes, it is**. We see Speckle as a critical digital infrastructural piece on which we, as an industry, can build on top of and foster a dynamic ecosystem whose interactions are not a zero-sum game. Speckle, as a company, will follow the example of many other successful companies building open source. Our future monetisation plans do not compromise this; on the contrary, we will commercially succeed if the industry as a whole succeeds.\\n\\nOur mission is to transform the AEC industry for the better by providing a truly open source data platform that everyone can use and extend. This implies more than just writing good code: we want to change the adversarial environment of software development in AEC to a collaborative one. How?\\n\\n**First, we practice what we preach**: Speckle is the result of 3+ years of research coupled with several man years of development; it might not be the best answer to your interoperability and data problems, but it’s the best we’ve come up with so far. You can take it and use it to make a better one, or help us make Speckle better by contributing: it’s open source, and publicly available.\\n\\n**Second, Speckle 1.0 is licensed under MIT, and 2.0 under the Apache 2.0 licence**. These are two of the most permissive, non-copyleft licenses currently available. There are no proprietary dependencies, or any hidden catches. Furthermore, we are committed to keep the core of Speckle as free as possible from closed source software.\\n\\n**Last, but most importantly, we’re building a community**. Instead of just producing code in isolation, we’re having [monthly community standups](https://discourse.speckle.works/t/community-standup/951/12) and dedicate time [documenting our progress with Speckle 2.0](https://discourse.speckle.works/c/speckle-insider/10). Anyone can join our meetings, follow the progress of our code, and jump in at any time! You can help in whatever way you can, from trying out the beta releases and sending bug reports and feedback to contributing with code and pull requests.\\n\\nBeing open source has had a huge impact in how we operate and it’s a big part of our success. For us, open source is the answer to proprietary software monopolies that lock their users into legacy solutions and artificially stall the pace of progress in our industry. Open source is not a hype: it's a progressive force of change from which we all can benefit.\\n\\n## Bonus content: \\n\\nWe've asked each of us to write a short sentence on how they see open source. Here's what we got: \\n\\n[Matteo](https://twitter.com/teocomi): \\n\\n> For me open source means democratising the tools our industry needs to advance technologically as a whole, there is simply no way ahead without. \\n\\n[Izzy](https://twitter.com/izzylys):\\n\\n> Open source is a beautiful force for collaborative innovation and an essential ingredient to a progressive and sustainable future for the industry.\\n\\n[Alan](https://twitter.com/AlanRynne):\\n\\n> For me, open source is all about sharing knowledge with little limitations, and providing the tools for others to use and build upon your own work. \\n\\n[Dimitrie](https://twitter.com/idid):\\n\\n> Working on open source is really satisfying. It encourages me to be a better person, a better coder, and build a better product - and a better world!\\n\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p><img src=\"https://strapi.speckle.works/uploads/oss-1200x2375_0cb8f310f5.png\" alt=\"oss-graphic\"></p>\n<p>When Speckle started back in 2015, as part of Dimitrie’s research at UCL The Bartlett School of Architecture, the choice of licensing it under a permissive open source license followed naturally from the setting in which the project was created: <a href=\"http://innochain.net/\">a consortium of academic and industry stakeholders, financed by the EU’s Horizon 2020 programme</a>, and tasked with the shared mission of moving the architecture, engineering and construction industry forward.</p>\n<p>Not surpsingly, a shared mission focused on a common greater good, collaboration, and passion are key ingredients of open source. With this post, the team at Speckle would like to talk about what open source means for us, as well as the AEC industry, and how we’re attempting to transform the industry with those values in mind.</p>\n<h2 id=\"whatisopensource\">What is Open Source?</h2>\n<p>Let's start by saying what OSS (Open Source Software) is not: it's not a hype, a buzzword, a hippy movement, a charity, a left-wing anarchist movement, or an IP devouring spaghetti monster. Though may contain traces of some of those elements, here’s a more authoritative definition:</p>\n<blockquote>\n<p>&quot;Open-source software is a type of computer software in which source code is released under a license in which the copyright holder grants users the rights to use, study, change, and distribute the software to anyone and for any purpose.&quot; -Wikipedia</p>\n</blockquote>\n<p>Licensing differences aside, in open source software, the code is open and visible to everyone. Moreover, anyone can contribute to it, use it, and share it free of charge. <strong>It is as if we could access the recipe for making sourdough bread - and we were even allowed to make it ourselves, improve upon it, and sell it to others. Shocking, isn’t it?</strong></p>\n<p>Contrary to popular belief, OSS allows for better security and transparency (more eyes on the code lead to better and more robust software), as well as longevity. For example, Speckle was born before Flux was revealed to the world, and is still alive and kicking five years later - two and a half years after Flux abruptly shut down. This, and many other reasons, is why OSS is becoming the norm rather than the exception in some parts of the tech industry.</p>\n<p>Open source is already a key component of many other industries. For example, the open source blogging platform Wordpress - which is how both Matteo and Dimitrie learned PHP many years ago - powers an astounding 35% of the internet in 2020. In 2013, only 35% of database engines were open source; now they account for almost 50% of the market (<a href=\"https://db-engines.com/en/ranking_osvsc\">source</a>). Beyond this, there’s a host of open source technologies out there (e.g., Linux, React.js, Nginx, Kubernetes, PostgreSQL, GitLab, TensorFlow, Blender, FreeCAD etc.) that power the business logic of the world.</p>\n<h2 id=\"softwareasacompetitiveadvantage\">Software as a Competitive Advantage</h2>\n<p>In AEC the open source landscape is budding, but still quite fragmented. Most AEC companies and industry software vendors treat OSS with a measure of suspicion. Nevertheless, “brick &amp; mortar” AEC companies treat whatever software or automation tools they produce as key differentiators that give them a competitive advantage.</p>\n<p>In turn, this undermines the formation of a community and blocks innovation. From our first-hand experience, this is a fundamentally misguided approach. Why would AEC companies compete against each other in software and product development - domains <em>outside</em> their core expertise and skill sets, and for which they are culturally and technologically ill-equipped?</p>\n<p>We can trace this behaviour to the desire of AEC companies to project an image of a digitally-ready and competent enterprise. Being digitally savvy is a key differentiator, and a necessary skill in today’s market. To achieve this, most AEC companies prefer to rely on curated press releases and presentations of the digital tools they produce rather than actually releasing them as software products that everybody can use - let alone open sourcing them.</p>\n<p>This results in a lot of duplication of work across the industry: different companies solve the same problem over and over again as they cannot build on top of each other’s efforts. Moreover, because they are not culturally and operationally ready to <strong>maintain</strong> the software they produce (as much of the software development efforts are financed through project-based work), many times work is duplicated even within the same enterprise. Just ask a computational designer how many times they’ve had to automate Revit imports or exports from Rhino, an analytics dashboard for a project, or a 3D interactive visualisation with Unity or Unreal.</p>\n<p><strong>Nevertheless, the goal of becoming a digitally savvy enterprise is not at odds with the principles behind open source.</strong> Google, Facebook, and even Microsoft, are heavily investing in delivering and supporting open source software in order to extend their commercial interests, ensure a level playing field in key competitive areas, and, most importantly, gain market mindshare and project an image of a forward thinking enterprise. In essence, this is because being <strong>open source acts as a force multiplier extending the outreach, quality and longevity of software that benefits fairly both the authors of the code, as well as the adopters.</strong></p>\n<blockquote>\n<p>Changing this attitude in the AEC industry is a big reason why Speckle is open source. We believe in improving the industry as a whole, and we want to show that a collaborative and cooperative approach is a viable path to digital progress.</p>\n</blockquote>\n<h2 id=\"dynamicsofopensource\">Dynamics of Open Source</h2>\n<p>Presently, the adversarial attitude towards software development in AEC results in a stagnating knowledge base as skills and experience do not accumulate into a greater whole. As a result, the industry is stuck with a slow, incremental at best, pace of innovation. This plays perfectly into the hands of software vendors servicing the industry, who are the ones exerting most control over the speed and efficiency with which AEC “digitalises”. In contrast, the dynamics of an open source ecosystem would work in the opposite direction by accelerating innovation and promoting healthy competition.</p>\n<p>Usually, a well functioning open source project is surrounded by an ecosystem of other related software, open or proprietary, that depends upon, or extends, the original. The dynamics of this ecosystem are beneficial to all stakeholders involved. Linux, WordPress, Qt, various DBs, other frameworks and programming languages are all examples of this virtuous circle. Having a low level open source base on which to build on enables developers to focus on business needs rather than reinventing the wheel. The benefits go both ways: improvements to the open source base travel upstream, making it more robust and businesses achieve better results faster, with less investment and more time for refinement.</p>\n<p><strong>Unfortunately, within AEC the key low level building blocks are all proprietary</strong>, be it geometry kernels, data or cloud infrastructure. Developers are, most of the time, tied to extending and building on top of the proprietary solutions offered by software vendors. Open source or not, the software they produce still enriches, and is dependent upon, a closed source core. This leads to an imbalance of power: developers do not participate on equal grounds in the creation of value, and are beholden to the interests of software vendors.</p>\n<blockquote>\n<p>Speckle reverses this balance. Rather than providing a closed source core on which to build a flawed ecosystem, we provide an open source platform for handling data and interoperability on top of which we want to encourage the growth of a virtuous ecosystem that benefits all.</p>\n</blockquote>\n<h2 id=\"openvsopensource\">Open vs. Open Source</h2>\n<p>The AEC industry tends to sometimes use interchangeably the terms “open” and “open source” and, generally, muddle the distinction between them. This creates a false impression of “righteousness” which we believe is extremely detrimental to the industry at large; it degrades the principles of open source, while confusing and disorienting users.</p>\n<p>One of the most clear examples of this semantic insecurity, and one that’s close to Speckle’s heart, is the term Open API. An API (application programming interface) is the instrument through which a library, or software communicates with the external world (other consuming services, an application built on top, or a website). First, calling an API “open” does not mean it is open source. In some cases, it simply means that it is <strong>documented</strong> according to a well established standard (called, not surprisingly, <a href=\"https://swagger.io/specification/\">Open API</a>). Most importantly, an “Open API” can be served by a proprietary application - either cloud or desktop based. In this case, the term “open” does not come with any of the freedoms and rights usually associated with open source.</p>\n<p>There are other examples that make clear the importance to distinguish between “open” and “open source”. For example, in order to access the source (and use) of the libraries for reading common data formats in AEC authored by the Open Design Alliance, <a href=\"https://www.opendesign.com/pricing\">a yearly membership fee of 30.000 USD is required</a>. If these libraries were genuinely open source, their source code would be freely available at no cost. Nevertheless, there are a growing number of examples of truly open source software. A well established project is <a href=\"https://www.ladybug.tools/\">Ladybug Tools</a>; other notable examples are software packages such as <a href=\"https://www.blender.org/\">Blender</a> and <a href=\"https://www.freecadweb.org/\">FreeCAD</a>. If you want to know more, <a href=\"https://twitter.com/GimbalNick\">Nick</a> has put together a <a href=\"https://airtable.com/shrqOCpnYNftdDMzR/tblKhB3De2xrqy69s\">nice list of OSS in AEC</a>, which complements the one put out by the <a href=\"https://community.osarch.org/\">Open-Source Architecture Community</a>. We’re happy to see Speckle on these lists!</p>\n<blockquote>\n<p>We've talked a lot about open source so far; but where's the Speckle Source? Here it is, and don't forget to give those repos a ⭐:<br>\n<strong><a href=\"https://github.com/specklesystems/speckle-sharp\">Speckle Sharp</a></strong> - contains the .NET SDK and all connectors (Grasshopper, Revit, Dynamo, etc.)<br>\n<strong><a href=\"https://github.com/specklesystems/speckle-server\">Speckle Server</a></strong> - contains the server and frontend applicaiton!</p>\n<p><a href=\"https://github.com/specklesystems\">The Speckle Org</a> is where other parts of Speckle will make their way into OSS.</p>\n</blockquote>\n<h2 id=\"whatdoesopensourcemeanforspeckle\">What Does Open Source Mean for Speckle?</h2>\n<p>After setting <a href=\"https://speckle.systems/blog/speckle2-vision-and-faq\">up a company to work entirely on Speckle</a> and deciding to go for a rewrite of most of its codebase, we asked ourselves: is open source still the right way?</p>\n<p><strong>Long story short: yes, it is</strong>. We see Speckle as a critical digital infrastructural piece on which we, as an industry, can build on top of and foster a dynamic ecosystem whose interactions are not a zero-sum game. Speckle, as a company, will follow the example of many other successful companies building open source. Our future monetisation plans do not compromise this; on the contrary, we will commercially succeed if the industry as a whole succeeds.</p>\n<p>Our mission is to transform the AEC industry for the better by providing a truly open source data platform that everyone can use and extend. This implies more than just writing good code: we want to change the adversarial environment of software development in AEC to a collaborative one. How?</p>\n<p><strong>First, we practice what we preach</strong>: Speckle is the result of 3+ years of research coupled with several man years of development; it might not be the best answer to your interoperability and data problems, but it’s the best we’ve come up with so far. You can take it and use it to make a better one, or help us make Speckle better by contributing: it’s open source, and publicly available.</p>\n<p><strong>Second, Speckle 1.0 is licensed under MIT, and 2.0 under the Apache 2.0 licence</strong>. These are two of the most permissive, non-copyleft licenses currently available. There are no proprietary dependencies, or any hidden catches. Furthermore, we are committed to keep the core of Speckle as free as possible from closed source software.</p>\n<p><strong>Last, but most importantly, we’re building a community</strong>. Instead of just producing code in isolation, we’re having <a href=\"https://discourse.speckle.works/t/community-standup/951/12\">monthly community standups</a> and dedicate time <a href=\"https://discourse.speckle.works/c/speckle-insider/10\">documenting our progress with Speckle 2.0</a>. Anyone can join our meetings, follow the progress of our code, and jump in at any time! You can help in whatever way you can, from trying out the beta releases and sending bug reports and feedback to contributing with code and pull requests.</p>\n<p>Being open source has had a huge impact in how we operate and it’s a big part of our success. For us, open source is the answer to proprietary software monopolies that lock their users into legacy solutions and artificially stall the pace of progress in our industry. Open source is not a hype: it's a progressive force of change from which we all can benefit.</p>\n<h2 id=\"bonuscontent\">Bonus content:</h2>\n<p>We've asked each of us to write a short sentence on how they see open source. Here's what we got:</p>\n<p><a href=\"https://twitter.com/teocomi\">Matteo</a>:</p>\n<blockquote>\n<p>For me open source means democratising the tools our industry needs to advance technologically as a whole, there is simply no way ahead without.</p>\n</blockquote>\n<p><a href=\"https://twitter.com/izzylys\">Izzy</a>:</p>\n<blockquote>\n<p>Open source is a beautiful force for collaborative innovation and an essential ingredient to a progressive and sustainable future for the industry.</p>\n</blockquote>\n<p><a href=\"https://twitter.com/AlanRynne\">Alan</a>:</p>\n<blockquote>\n<p>For me, open source is all about sharing knowledge with little limitations, and providing the tools for others to use and build upon your own work.</p>\n</blockquote>\n<p><a href=\"https://twitter.com/idid\">Dimitrie</a>:</p>\n<blockquote>\n<p>Working on open source is really satisfying. It encourages me to be a better person, a better coder, and build a better product - and a better world!</p>\n</blockquote>\n<!--kg-card-end: markdown-->","comment_id":"6016942c16926135029da16a","plaintext":"\n\nWhen Speckle started back in 2015, as part of Dimitrie’s research at UCL The\nBartlett School of Architecture, the choice of licensing it under a permissive\nopen source license followed naturally from the setting in which the project was\ncreated: a consortium of academic and industry stakeholders, financed by the\nEU’s Horizon 2020 programme [http://innochain.net/], and tasked with the shared\nmission of moving the architecture, engineering and construction industry\nforward.\n\nNot surpsingly, a shared mission focused on a common greater good,\ncollaboration, and passion are key ingredients of open source. With this post,\nthe team at Speckle would like to talk about what open source means for us, as\nwell as the AEC industry, and how we’re attempting to transform the industry\nwith those values in mind.\n\nWhat is Open Source?\nLet's start by saying what OSS (Open Source Software) is not: it's not a hype, a\nbuzzword, a hippy movement, a charity, a left-wing anarchist movement, or an IP\ndevouring spaghetti monster. Though may contain traces of some of those\nelements, here’s a more authoritative definition:\n\n> \"Open-source software is a type of computer software in which source code is\nreleased under a license in which the copyright holder grants users the rights\nto use, study, change, and distribute the software to anyone and for any\npurpose.\" -Wikipedia\n\n\nLicensing differences aside, in open source software, the code is open and\nvisible to everyone. Moreover, anyone can contribute to it, use it, and share it\nfree of charge. It is as if we could access the recipe for making sourdough\nbread - and we were even allowed to make it ourselves, improve upon it, and sell\nit to others. Shocking, isn’t it?\n\nContrary to popular belief, OSS allows for better security and transparency\n(more eyes on the code lead to better and more robust software), as well as\nlongevity. For example, Speckle was born before Flux was revealed to the world,\nand is still alive and kicking five years later - two and a half years after\nFlux abruptly shut down. This, and many other reasons, is why OSS is becoming\nthe norm rather than the exception in some parts of the tech industry.\n\nOpen source is already a key component of many other industries. For example,\nthe open source blogging platform Wordpress - which is how both Matteo and\nDimitrie learned PHP many years ago - powers an astounding 35% of the internet\nin 2020. In 2013, only 35% of database engines were open source; now they\naccount for almost 50% of the market (source\n[https://db-engines.com/en/ranking_osvsc]). Beyond this, there’s a host of open\nsource technologies out there (e.g., Linux, React.js, Nginx, Kubernetes,\nPostgreSQL, GitLab, TensorFlow, Blender, FreeCAD etc.) that power the business\nlogic of the world.\n\nSoftware as a Competitive Advantage\nIn AEC the open source landscape is budding, but still quite fragmented. Most\nAEC companies and industry software vendors treat OSS with a measure of\nsuspicion. Nevertheless, “brick & mortar” AEC companies treat whatever software\nor automation tools they produce as key differentiators that give them a\ncompetitive advantage.\n\nIn turn, this undermines the formation of a community and blocks innovation.\nFrom our first-hand experience, this is a fundamentally misguided approach. Why\nwould AEC companies compete against each other in software and product\ndevelopment - domains outside their core expertise and skill sets, and for which\nthey are culturally and technologically ill-equipped?\n\nWe can trace this behaviour to the desire of AEC companies to project an image\nof a digitally-ready and competent enterprise. Being digitally savvy is a key\ndifferentiator, and a necessary skill in today’s market. To achieve this, most\nAEC companies prefer to rely on curated press releases and presentations of the\ndigital tools they produce rather than actually releasing them as software\nproducts that everybody can use - let alone open sourcing them.\n\nThis results in a lot of duplication of work across the industry: different\ncompanies solve the same problem over and over again as they cannot build on top\nof each other’s efforts. Moreover, because they are not culturally and\noperationally ready to maintain the software they produce (as much of the\nsoftware development efforts are financed through project-based work), many\ntimes work is duplicated even within the same enterprise. Just ask a\ncomputational designer how many times they’ve had to automate Revit imports or\nexports from Rhino, an analytics dashboard for a project, or a 3D interactive\nvisualisation with Unity or Unreal.\n\nNevertheless, the goal of becoming a digitally savvy enterprise is not at odds\nwith the principles behind open source. Google, Facebook, and even Microsoft,\nare heavily investing in delivering and supporting open source software in order\nto extend their commercial interests, ensure a level playing field in key\ncompetitive areas, and, most importantly, gain market mindshare and project an\nimage of a forward thinking enterprise. In essence, this is because being open\nsource acts as a force multiplier extending the outreach, quality and longevity\nof software that benefits fairly both the authors of the code, as well as the\nadopters.\n\n> Changing this attitude in the AEC industry is a big reason why Speckle is open\nsource. We believe in improving the industry as a whole, and we want to show\nthat a collaborative and cooperative approach is a viable path to digital\nprogress.\n\n\nDynamics of Open Source\nPresently, the adversarial attitude towards software development in AEC results\nin a stagnating knowledge base as skills and experience do not accumulate into a\ngreater whole. As a result, the industry is stuck with a slow, incremental at\nbest, pace of innovation. This plays perfectly into the hands of software\nvendors servicing the industry, who are the ones exerting most control over the\nspeed and efficiency with which AEC “digitalises”. In contrast, the dynamics of\nan open source ecosystem would work in the opposite direction by accelerating\ninnovation and promoting healthy competition.\n\nUsually, a well functioning open source project is surrounded by an ecosystem of\nother related software, open or proprietary, that depends upon, or extends, the\noriginal. The dynamics of this ecosystem are beneficial to all stakeholders\ninvolved. Linux, WordPress, Qt, various DBs, other frameworks and programming\nlanguages are all examples of this virtuous circle. Having a low level open\nsource base on which to build on enables developers to focus on business needs\nrather than reinventing the wheel. The benefits go both ways: improvements to\nthe open source base travel upstream, making it more robust and businesses\nachieve better results faster, with less investment and more time for\nrefinement.\n\nUnfortunately, within AEC the key low level building blocks are all proprietary,\nbe it geometry kernels, data or cloud infrastructure. Developers are, most of\nthe time, tied to extending and building on top of the proprietary solutions\noffered by software vendors. Open source or not, the software they produce still\nenriches, and is dependent upon, a closed source core. This leads to an\nimbalance of power: developers do not participate on equal grounds in the\ncreation of value, and are beholden to the interests of software vendors.\n\n> Speckle reverses this balance. Rather than providing a closed source core on\nwhich to build a flawed ecosystem, we provide an open source platform for\nhandling data and interoperability on top of which we want to encourage the\ngrowth of a virtuous ecosystem that benefits all.\n\n\nOpen vs. Open Source\nThe AEC industry tends to sometimes use interchangeably the terms “open” and\n“open source” and, generally, muddle the distinction between them. This creates\na false impression of “righteousness” which we believe is extremely detrimental\nto the industry at large; it degrades the principles of open source, while\nconfusing and disorienting users.\n\nOne of the most clear examples of this semantic insecurity, and one that’s close\nto Speckle’s heart, is the term Open API. An API (application programming\ninterface) is the instrument through which a library, or software communicates\nwith the external world (other consuming services, an application built on top,\nor a website). First, calling an API “open” does not mean it is open source. In\nsome cases, it simply means that it is documented according to a well\nestablished standard (called, not surprisingly, Open API\n[https://swagger.io/specification/]). Most importantly, an “Open API” can be\nserved by a proprietary application - either cloud or desktop based. In this\ncase, the term “open” does not come with any of the freedoms and rights usually\nassociated with open source.\n\nThere are other examples that make clear the importance to distinguish between\n“open” and “open source”. For example, in order to access the source (and use)\nof the libraries for reading common data formats in AEC authored by the Open\nDesign Alliance, a yearly membership fee of 30.000 USD is required\n[https://www.opendesign.com/pricing]. If these libraries were genuinely open\nsource, their source code would be freely available at no cost. Nevertheless,\nthere are a growing number of examples of truly open source software. A well\nestablished project is Ladybug Tools [https://www.ladybug.tools/]; other notable\nexamples are software packages such as Blender [https://www.blender.org/] and \nFreeCAD [https://www.freecadweb.org/]. If you want to know more, Nick\n[https://twitter.com/GimbalNick] has put together a nice list of OSS in AEC\n[https://airtable.com/shrqOCpnYNftdDMzR/tblKhB3De2xrqy69s], which complements\nthe one put out by the Open-Source Architecture Community\n[https://community.osarch.org/]. We’re happy to see Speckle on these lists!\n\n> We've talked a lot about open source so far; but where's the Speckle Source?\nHere it is, and don't forget to give those repos a ⭐:\nSpeckle Sharp [https://github.com/specklesystems/speckle-sharp] - contains the\n.NET SDK and all connectors (Grasshopper, Revit, Dynamo, etc.)\nSpeckle Server [https://github.com/specklesystems/speckle-server] - contains the\nserver and frontend applicaiton!\n\nThe Speckle Org [https://github.com/specklesystems] is where other parts of\nSpeckle will make their way into OSS.\n\n\nWhat Does Open Source Mean for Speckle?\nAfter setting up a company to work entirely on Speckle\n[https://speckle.systems/blog/speckle2-vision-and-faq] and deciding to go for a\nrewrite of most of its codebase, we asked ourselves: is open source still the\nright way?\n\nLong story short: yes, it is. We see Speckle as a critical digital\ninfrastructural piece on which we, as an industry, can build on top of and\nfoster a dynamic ecosystem whose interactions are not a zero-sum game. Speckle,\nas a company, will follow the example of many other successful companies\nbuilding open source. Our future monetisation plans do not compromise this; on\nthe contrary, we will commercially succeed if the industry as a whole succeeds.\n\nOur mission is to transform the AEC industry for the better by providing a truly\nopen source data platform that everyone can use and extend. This implies more\nthan just writing good code: we want to change the adversarial environment of\nsoftware development in AEC to a collaborative one. How?\n\nFirst, we practice what we preach: Speckle is the result of 3+ years of research\ncoupled with several man years of development; it might not be the best answer\nto your interoperability and data problems, but it’s the best we’ve come up with\nso far. You can take it and use it to make a better one, or help us make Speckle\nbetter by contributing: it’s open source, and publicly available.\n\nSecond, Speckle 1.0 is licensed under MIT, and 2.0 under the Apache 2.0 licence.\nThese are two of the most permissive, non-copyleft licenses currently available.\nThere are no proprietary dependencies, or any hidden catches. Furthermore, we\nare committed to keep the core of Speckle as free as possible from closed source\nsoftware.\n\nLast, but most importantly, we’re building a community. Instead of just\nproducing code in isolation, we’re having monthly community standups\n[https://discourse.speckle.works/t/community-standup/951/12] and dedicate time \ndocumenting our progress with Speckle 2.0\n[https://discourse.speckle.works/c/speckle-insider/10]. Anyone can join our\nmeetings, follow the progress of our code, and jump in at any time! You can help\nin whatever way you can, from trying out the beta releases and sending bug\nreports and feedback to contributing with code and pull requests.\n\nBeing open source has had a huge impact in how we operate and it’s a big part of\nour success. For us, open source is the answer to proprietary software\nmonopolies that lock their users into legacy solutions and artificially stall\nthe pace of progress in our industry. Open source is not a hype: it's a\nprogressive force of change from which we all can benefit.\n\nBonus content:\nWe've asked each of us to write a short sentence on how they see open source.\nHere's what we got:\n\nMatteo [https://twitter.com/teocomi]:\n\n> For me open source means democratising the tools our industry needs to advance\ntechnologically as a whole, there is simply no way ahead without.\n\n\nIzzy [https://twitter.com/izzylys]:\n\n> Open source is a beautiful force for collaborative innovation and an essential\ningredient to a progressive and sustainable future for the industry.\n\n\nAlan [https://twitter.com/AlanRynne]:\n\n> For me, open source is all about sharing knowledge with little limitations, and\nproviding the tools for others to use and build upon your own work.\n\n\nDimitrie [https://twitter.com/idid]:\n\n> Working on open source is really satisfying. It encourages me to be a better\nperson, a better coder, and build a better product - and a better world!","feature_image":null,"featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 11:27:40","updated_at":"2021-01-31 11:28:15","published_at":"2021-01-31 11:28:15","custom_excerpt":"A shared mission, a common greater good, collaboration, and passion are key ingredients of Open Source. In this post, we're untangling what it means for the AEC industry, and how Speckle is attempting to transform the industry with those values in mind.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6016946c16926135029da173","uuid":"2d7936f1-5c8e-43a1-888e-574c3b29c94b","title":"1000+ Commits Later: Connectors Alpha","slug":"1000-commits-later-connectors-alpha","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"![connectors_alpha_graphic](https://strapi.speckle.works/uploads/connectors_alpha2x_3387190e2f.png)\\n\\nThe 2.0 alpha connectors have landed 🎊\\n\\nAfter over 1000 commits, we are hyped to bring you the alpha release of the Dynamo, Grasshopper, and Revit connectors!\\n\\n⚠️ **Please note: this is an early release intended for hackers and developers to try out the connectors and get inspiration for building new ones. They are a bit rough around the edges and there will be bugs and breaking changes. HIC SVNT DRACONES** 🐉\\n\\nThe main purpose of this is to share what we've been working on and get the code in your hands so you can play with it and give us your feedback! Your thoughts will be instrumental in shaping the future of 2.0 and easing the transition from 1.0. Feel free to ask questions and start conversations on the [forum](https://discourse.speckle.works/) 💬\\n\\nWe have brought all the 2.0 C# projects including Core, Objects, the .NET connectors, and a reusable DesktopUI into one home:\\n\\n👉 [speckle-sharp](https://github.com/specklesystems/speckle-sharp)\\n\\n**Please drop us a 🌟 on the repo - it helps support the project!**\\n\\nInstructions for getting started can be found in the README for the repo and in each respective connector folder:\\n\\n👉 [ConnectorDynamo](https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorDynamo)\\n\\n👉 [ConnectorGrasshopper](https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorGrasshopper)\\n\\n👉 [ConnectorRevit](https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorRevit)\\n\\nGo ahead and test them, break them, and tell us what you love and what could be improved. We'd love to hear from you! Feel free to submit GitHub issues in the respective repo or start a thread on our [community forum](https://discourse.speckle.works/) 💌\\n\\nWe've also put together a rough roadmap of future releases to give you and idea of what you can expect from us and when:\\n\\n👉 [The Roadmap](https://www.notion.so/speckle/ed92c5d501824d569545662df65ccec4?v=a6d0e5c248714ca08fb3f3ba1f17ddee)\\n\\nThat's all for now! See you on to forum and stay tuned for our next round of releases 🎉\\n\\nThe Speckle Team\\n\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p><img src=\"https://strapi.speckle.works/uploads/connectors_alpha2x_3387190e2f.png\" alt=\"connectors_alpha_graphic\"></p>\n<p>The 2.0 alpha connectors have landed 🎊</p>\n<p>After over 1000 commits, we are hyped to bring you the alpha release of the Dynamo, Grasshopper, and Revit connectors!</p>\n<p>⚠️ <strong>Please note: this is an early release intended for hackers and developers to try out the connectors and get inspiration for building new ones. They are a bit rough around the edges and there will be bugs and breaking changes. HIC SVNT DRACONES</strong> 🐉</p>\n<p>The main purpose of this is to share what we've been working on and get the code in your hands so you can play with it and give us your feedback! Your thoughts will be instrumental in shaping the future of 2.0 and easing the transition from 1.0. Feel free to ask questions and start conversations on the <a href=\"https://discourse.speckle.works/\">forum</a> 💬</p>\n<p>We have brought all the 2.0 C# projects including Core, Objects, the .NET connectors, and a reusable DesktopUI into one home:</p>\n<p>👉 <a href=\"https://github.com/specklesystems/speckle-sharp\">speckle-sharp</a></p>\n<p><strong>Please drop us a 🌟 on the repo - it helps support the project!</strong></p>\n<p>Instructions for getting started can be found in the README for the repo and in each respective connector folder:</p>\n<p>👉 <a href=\"https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorDynamo\">ConnectorDynamo</a></p>\n<p>👉 <a href=\"https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorGrasshopper\">ConnectorGrasshopper</a></p>\n<p>👉 <a href=\"https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorRevit\">ConnectorRevit</a></p>\n<p>Go ahead and test them, break them, and tell us what you love and what could be improved. We'd love to hear from you! Feel free to submit GitHub issues in the respective repo or start a thread on our <a href=\"https://discourse.speckle.works/\">community forum</a> 💌</p>\n<p>We've also put together a rough roadmap of future releases to give you and idea of what you can expect from us and when:</p>\n<p>👉 <a href=\"https://www.notion.so/speckle/ed92c5d501824d569545662df65ccec4?v=a6d0e5c248714ca08fb3f3ba1f17ddee\">The Roadmap</a></p>\n<p>That's all for now! See you on to forum and stay tuned for our next round of releases 🎉</p>\n<p>The Speckle Team</p>\n<!--kg-card-end: markdown-->","comment_id":"6016946c16926135029da173","plaintext":"\n\nThe 2.0 alpha connectors have landed 🎊\n\nAfter over 1000 commits, we are hyped to bring you the alpha release of the\nDynamo, Grasshopper, and Revit connectors!\n\n⚠️ Please note: this is an early release intended for hackers and developers to\ntry out the connectors and get inspiration for building new ones. They are a bit\nrough around the edges and there will be bugs and breaking changes. HIC SVNT\nDRACONES 🐉\n\nThe main purpose of this is to share what we've been working on and get the code\nin your hands so you can play with it and give us your feedback! Your thoughts\nwill be instrumental in shaping the future of 2.0 and easing the transition from\n1.0. Feel free to ask questions and start conversations on the forum\n[https://discourse.speckle.works/] 💬\n\nWe have brought all the 2.0 C# projects including Core, Objects, the .NET\nconnectors, and a reusable DesktopUI into one home:\n\n👉 speckle-sharp [https://github.com/specklesystems/speckle-sharp]\n\nPlease drop us a 🌟 on the repo - it helps support the project!\n\nInstructions for getting started can be found in the README for the repo and in\neach respective connector folder:\n\n👉 ConnectorDynamo\n[https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorDynamo]\n\n👉 ConnectorGrasshopper\n[https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorGrasshopper]\n\n👉 ConnectorRevit\n[https://github.com/specklesystems/speckle-sharp/tree/master/ConnectorRevit]\n\nGo ahead and test them, break them, and tell us what you love and what could be\nimproved. We'd love to hear from you! Feel free to submit GitHub issues in the\nrespective repo or start a thread on our community forum\n[https://discourse.speckle.works/] 💌\n\nWe've also put together a rough roadmap of future releases to give you and idea\nof what you can expect from us and when:\n\n👉 The Roadmap\n[https://www.notion.so/speckle/ed92c5d501824d569545662df65ccec4?v=a6d0e5c248714ca08fb3f3ba1f17ddee]\n\nThat's all for now! See you on to forum and stay tuned for our next round of\nreleases 🎉\n\nThe Speckle Team","feature_image":"/content/images/2021/01/connectors_alpha2x.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 11:28:44","updated_at":"2021-01-31 17:30:15","published_at":"2021-01-31 11:29:06","custom_excerpt":"After over 1000 commits, we are hyped to bring you the alpha release of the Dynamo, Grasshopper, and Revit connectors!","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6016949e16926135029da17c","uuid":"3e9ba914-b3a2-40e0-bf66-aed792a1bb17","title":"Towards A Less Janky Grasshopper Canvas","slug":"towards-a-less-janky-grasshopper-canvas","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"![async-gh](https://strapi.speckle.works/uploads/async-gh_8a4f835b21.png)\\n\\nWhile working on Speckle 2.0, we really felt like we needed to come out about this one. Yes, we really don't like ***jank.*** Even more, we really don't like when Speckle makes things janky. What's jank? Here's a definition:\\n\\n> Perceptible pause in the smooth rendering of a software application's user interface due to slow operations or poor interface design.\\n\\n([source](https://en.wiktionary.org/wiki/jank))\\n\\n## Problem: Latency, Speckle & Grasshopper\\n\\nAs you may know, Grasshopper can be quite janky when things get... big. While developing the 2.0 version of the Speckle connector, we wanted to avoid - as best as we can! - adding jank to your definitions. \\n\\n> **Disclaimer**: what follows is not an authorative piece. We thought sharing our intial investigations in how we can solve this problem might be helpful for others, as well as for us, as there's probably better ways to do it. [Check out the repository](https://github.com/specklesystems/GrasshopperAsyncComponent) and let us know! \\n\\nSpeckle, within Grasshopper, is at the end of a workflow - converting objects, serialising them and sending them over the internet somewhere. Speckle, by its nature, has to deal with high latency operations - things that take time. If curious, do check this list of [Latency Numbers Every Programmer Should Know](https://gist.github.com/jboner/2841832) (hint: Speckle, in user-land, mostly deals with the last four). \\n\\nSo what are we doing to avoid jankyness in Grasshopper, and why is it a problem? Grasshopper 1.0 (there's a 2.0 coming) is, unfortunately, bound to the UI thread. That means all computation happens in the same place as drawing all the nice buttons and responding to user inputs - clicks and so on. When writing custom components, the logic you drop inside the famous `protected override void SolveInstance(IGH_DataAccess DA)` function will block the UI thread while it's rolling. \\n\\n[There's been quite a few](https://discourse.mcneel.com/search?q=async%20grasshopper) [attempts at solving this,](https://www.google.com/search?q=grasshopper+async+component&rlz=1C1CHBD_en-GBGB898GB898&oq=grasshopper+async+component&aqs=chrome..69i57j69i64j69i60l2j69i61.5239j0j1&sourceid=chrome&ie=UTF-8) and ours is, principally, probably not that different. Or better 😂 The really nice solution of [task capable components](https://developer.rhino3d.com/guides/grasshopper/programming-task-capable-component/), while great, still blocks the damn UI thread. We had a few requirements along the way, which can be summarised as follows: \\n\\n- Long running operations inside Speckle components should not block the UI,\\n- Components should be able to report progress back to the user in the Grasshopper UI,\\n- Components should be able to report back any errors and warnings that happen inside other threads, and\\n- Components should respond to user input eagerly and not compute for old states.\\n\\n## A Solution: [GH_AsyncComponent](https://github.com/specklesystems/GrasshopperAsyncComponent/) { .display-1 .font-weight-thin .text-xs-center .text-xs-center .my-5}\\n\\nWe've solved all these and generalised the approach so that any component can become one. [Here's a link to the repo](https://github.com/specklesystems/GrasshopperAsyncComponent)! Feel free to use it as a base for your future asnyc-ness goodies. First off, here's how it looks and behaves in a test component for Speckle 2.0 (that's converting 15k circles): \\n\\n![async2](https://user-images.githubusercontent.com/7696515/95029320-3e511500-069f-11eb-8f1a-b05c06132831.gif)\\n\\nNotice that the solution runs \\\"eagerly\\\" - every time the input changes, the the computation restarts and cancels any previous tasks that are still running. Once everything is done calculating, the results are set. **And the best parts:** \\n\\n- **Grasshopper and Rhino are still responsive!**\\n- **There's progress reporting!** (personally I hate waiting for Gh to unfreeze...).\\n\\nHow does it work? Well, simply put you need to create a new component and inherit as a base class the GH_AsyncComponent class. Here you can do the standard things you would normally do (register input/output ports, icons, etc.), with two extra concerns: \\n\\n- **Do not override** the `SolveInstance(IGH_DataAccess DA)` function.\\n- **Define and set a Worker instance** of a type that implements `IAsyncComponentWorker`\\n\\n```csharp\\n// TestAsyncComponent.cs\\npublic class TestAsyncComponent : GH_AsyncComponent \\n{\\n  public override Guid ComponentGuid { get => new Guid(\\\"F1E5F78F-242D-44E3-AAD6-AB0257D69256\\\"); }\\n  protected override System.Drawing.Bitmap Icon { get => null; }\\n  \\n  protected override void RegisterInputParams(GH_InputParamManager pManager) { ... }\\n  protected override void RegisterOutputParams(GH_InputParamManager pManager) { ... }\\n}\\n```\\n\\nNext, you will need to define a Worker class that implements the `IAsyncComponentWorker` interface. The implementation should be quite straigtforward! \\n\\n```csharp\\npublic interface IAsyncComponentWorker\\n{\\n  /// <summary>\\n  /// This function should return a duplicate instance of your class. Make sure any state is duplicated (or not) properly. \\n  /// </summary>\\n  /// <returns></returns>\\n  IAsyncComponentWorker GetNewInstance();\\n\\n  /// <summary>\\n  /// Here you can safely set the data of your component, just like you would normally. <b>Important: do not call this method directly! When you are ready, call the provided \\\"Done\\\" action from the DoWork function.</b>\\n  /// </summary>\\n  /// <param name=\\\"DA\\\"></param>\\n  void SetData(IGH_DataAccess DA);\\n\\n  /// <summary>\\n  /// Here you can safely collect the data from your component, just like you would normally. <b>Important: do not call this method directly. It will be invoked by the parent component.</b>\\n  /// </summary>\\n  /// <param name=\\\"DA\\\"></param>\\n  /// <param name=\\\"Params\\\"></param>\\n  void CollectData(IGH_DataAccess DA, GH_ComponentParamServer Params);\\n\\n  /// <summary>\\n  /// This where the computation happens. Make sure to check and return if the token is cancelled!\\n  /// </summary>\\n  /// <param name=\\\"token\\\">The cancellation token.</param>\\n  /// <param name=\\\"ReportProgress\\\">Call this action to report progress. It will be displayed in the component's message bar.</param>\\n  /// <param name=\\\"ReportError\\\">Call this to report a warning or an error.</param>\\n  /// <param name=\\\"Done\\\">When you are done computing, call this function to have the parent component invoke the SetData function.</param>\\n  void DoWork(CancellationToken token, Action<string> ReportProgress, Action<string, GH_RuntimeMessageLevel> ReportError, Action Done);\\n\\n}\\n```\\n\\n\\nThe magic happens in the `DoWork` function. You can see this function as a replacement for the `SolveInstance` one provided by the `GH_Component`. Here you can write up your logic, knowing that it will safely run outside the UI thread, and use whatever state you have stored internally during the `GetData` call. \\n\\nThe important part is to make sure **you are actually checking for task cancellation within the DoWork function**. This is quite easy to do, and make sure you pepper it around wherever you can:\\n\\n- at the beginning and end of the function\\n- inside any for loops that do heavy lifting\\n- whenever you can check for it.\\n\\nHere's a sample implementation that iterates through a GH_Structure (`Objects`) and performs a heavy operation on each object. Notice how we **check for task cancellation** pretty much everywhere we can! \\n\\n```csharp\\npublic void DoWork(CancellationToken token, Action<string> ReportProgress, Action<string, GH_RuntimeMessageLevel> ReportError, Action Done)\\n{\\n  // 👉 Check for task cancellation!\\n  if (token.IsCancellationRequested) return;\\n\\n  var completed = 0;\\n  foreach (var list in Objects.Branches)\\n  {\\n    foreach (var item in list)\\n    {\\n      // 👉 Check for task cancellation!\\n      if (token.IsCancellationRequested) return;\\n   \\n      // DO HEAVY LIFTING STUFF\\n\\n      ReportProgress(((double)(completed++ + 1) / (double)Objects.Count()).ToString(\\\"0.00%\\\"));      \\n    }\\n  }\\n\\n  // 👉 Check for task cancellation!\\n  if (token.IsCancellationRequested) return;\\n      \\n  Done();\\n}\\n```\\n\\nGiven the fact that the responsibility to check for task cancellation is up to the developer, this approach won't be too well suited for components calling code from other libraries that you don't, or can't, manage. There's probably a few other limitations that we're not yet aware of.\\n\\nThat mostly covers the important parts. So far, this approach proved to be quite solid. There's some implementation quirks that we didn't cover here - like how we're displaying updates without calling the `OnDisplayExpired` function too often, and, most importantly, **there's room for improvement** - so we're happy to hear your thoughts, suggestions, and PRs! \\n\\n## Links:\\n\\n- [**GH_AsyncComponent** Github Repo](https://github.com/specklesystems/GrasshopperAsyncComponent) (don't forget to give it a ⭐)\\n- [Speckle 2.0 Discussion Forum](https://discourse.speckle.works/) - come check out the future Speckle!\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p><img src=\"https://strapi.speckle.works/uploads/async-gh_8a4f835b21.png\" alt=\"async-gh\"></p>\n<p>While working on Speckle 2.0, we really felt like we needed to come out about this one. Yes, we really don't like <em><strong>jank.</strong></em> Even more, we really don't like when Speckle makes things janky. What's jank? Here's a definition:</p>\n<blockquote>\n<p>Perceptible pause in the smooth rendering of a software application's user interface due to slow operations or poor interface design.</p>\n</blockquote>\n<p>(<a href=\"https://en.wiktionary.org/wiki/jank\">source</a>)</p>\n<h2 id=\"problemlatencyspecklegrasshopper\">Problem: Latency, Speckle &amp; Grasshopper</h2>\n<p>As you may know, Grasshopper can be quite janky when things get... big. While developing the 2.0 version of the Speckle connector, we wanted to avoid - as best as we can! - adding jank to your definitions.</p>\n<blockquote>\n<p><strong>Disclaimer</strong>: what follows is not an authorative piece. We thought sharing our intial investigations in how we can solve this problem might be helpful for others, as well as for us, as there's probably better ways to do it. <a href=\"https://github.com/specklesystems/GrasshopperAsyncComponent\">Check out the repository</a> and let us know!</p>\n</blockquote>\n<p>Speckle, within Grasshopper, is at the end of a workflow - converting objects, serialising them and sending them over the internet somewhere. Speckle, by its nature, has to deal with high latency operations - things that take time. If curious, do check this list of <a href=\"https://gist.github.com/jboner/2841832\">Latency Numbers Every Programmer Should Know</a> (hint: Speckle, in user-land, mostly deals with the last four).</p>\n<p>So what are we doing to avoid jankyness in Grasshopper, and why is it a problem? Grasshopper 1.0 (there's a 2.0 coming) is, unfortunately, bound to the UI thread. That means all computation happens in the same place as drawing all the nice buttons and responding to user inputs - clicks and so on. When writing custom components, the logic you drop inside the famous <code>protected override void SolveInstance(IGH_DataAccess DA)</code> function will block the UI thread while it's rolling.</p>\n<p><a href=\"https://discourse.mcneel.com/search?q=async%20grasshopper\">There's been quite a few</a> <a href=\"https://www.google.com/search?q=grasshopper+async+component&amp;rlz=1C1CHBD_en-GBGB898GB898&amp;oq=grasshopper+async+component&amp;aqs=chrome..69i57j69i64j69i60l2j69i61.5239j0j1&amp;sourceid=chrome&amp;ie=UTF-8\">attempts at solving this,</a> and ours is, principally, probably not that different. Or better 😂 The really nice solution of <a href=\"https://developer.rhino3d.com/guides/grasshopper/programming-task-capable-component/\">task capable components</a>, while great, still blocks the damn UI thread. We had a few requirements along the way, which can be summarised as follows:</p>\n<ul>\n<li>Long running operations inside Speckle components should not block the UI,</li>\n<li>Components should be able to report progress back to the user in the Grasshopper UI,</li>\n<li>Components should be able to report back any errors and warnings that happen inside other threads, and</li>\n<li>Components should respond to user input eagerly and not compute for old states.</li>\n</ul>\n<h2 id=\"asolutiongh_asynccomponentdisplay1fontweightthintextxscentertextxscentermy5\">A Solution: <a href=\"https://github.com/specklesystems/GrasshopperAsyncComponent/\">GH_AsyncComponent</a> { .display-1 .font-weight-thin .text-xs-center .text-xs-center .my-5}</h2>\n<p>We've solved all these and generalised the approach so that any component can become one. <a href=\"https://github.com/specklesystems/GrasshopperAsyncComponent\">Here's a link to the repo</a>! Feel free to use it as a base for your future asnyc-ness goodies. First off, here's how it looks and behaves in a test component for Speckle 2.0 (that's converting 15k circles):</p>\n<p><img src=\"https://user-images.githubusercontent.com/7696515/95029320-3e511500-069f-11eb-8f1a-b05c06132831.gif\" alt=\"async2\"></p>\n<p>Notice that the solution runs &quot;eagerly&quot; - every time the input changes, the the computation restarts and cancels any previous tasks that are still running. Once everything is done calculating, the results are set. <strong>And the best parts:</strong></p>\n<ul>\n<li><strong>Grasshopper and Rhino are still responsive!</strong></li>\n<li><strong>There's progress reporting!</strong> (personally I hate waiting for Gh to unfreeze...).</li>\n</ul>\n<p>How does it work? Well, simply put you need to create a new component and inherit as a base class the GH_AsyncComponent class. Here you can do the standard things you would normally do (register input/output ports, icons, etc.), with two extra concerns:</p>\n<ul>\n<li><strong>Do not override</strong> the <code>SolveInstance(IGH_DataAccess DA)</code> function.</li>\n<li><strong>Define and set a Worker instance</strong> of a type that implements <code>IAsyncComponentWorker</code></li>\n</ul>\n<pre><code class=\"language-csharp\">// TestAsyncComponent.cs\npublic class TestAsyncComponent : GH_AsyncComponent \n{\n  public override Guid ComponentGuid { get =&gt; new Guid(&quot;F1E5F78F-242D-44E3-AAD6-AB0257D69256&quot;); }\n  protected override System.Drawing.Bitmap Icon { get =&gt; null; }\n  \n  protected override void RegisterInputParams(GH_InputParamManager pManager) { ... }\n  protected override void RegisterOutputParams(GH_InputParamManager pManager) { ... }\n}\n</code></pre>\n<p>Next, you will need to define a Worker class that implements the <code>IAsyncComponentWorker</code> interface. The implementation should be quite straigtforward!</p>\n<pre><code class=\"language-csharp\">public interface IAsyncComponentWorker\n{\n  /// &lt;summary&gt;\n  /// This function should return a duplicate instance of your class. Make sure any state is duplicated (or not) properly. \n  /// &lt;/summary&gt;\n  /// &lt;returns&gt;&lt;/returns&gt;\n  IAsyncComponentWorker GetNewInstance();\n\n  /// &lt;summary&gt;\n  /// Here you can safely set the data of your component, just like you would normally. &lt;b&gt;Important: do not call this method directly! When you are ready, call the provided &quot;Done&quot; action from the DoWork function.&lt;/b&gt;\n  /// &lt;/summary&gt;\n  /// &lt;param name=&quot;DA&quot;&gt;&lt;/param&gt;\n  void SetData(IGH_DataAccess DA);\n\n  /// &lt;summary&gt;\n  /// Here you can safely collect the data from your component, just like you would normally. &lt;b&gt;Important: do not call this method directly. It will be invoked by the parent component.&lt;/b&gt;\n  /// &lt;/summary&gt;\n  /// &lt;param name=&quot;DA&quot;&gt;&lt;/param&gt;\n  /// &lt;param name=&quot;Params&quot;&gt;&lt;/param&gt;\n  void CollectData(IGH_DataAccess DA, GH_ComponentParamServer Params);\n\n  /// &lt;summary&gt;\n  /// This where the computation happens. Make sure to check and return if the token is cancelled!\n  /// &lt;/summary&gt;\n  /// &lt;param name=&quot;token&quot;&gt;The cancellation token.&lt;/param&gt;\n  /// &lt;param name=&quot;ReportProgress&quot;&gt;Call this action to report progress. It will be displayed in the component's message bar.&lt;/param&gt;\n  /// &lt;param name=&quot;ReportError&quot;&gt;Call this to report a warning or an error.&lt;/param&gt;\n  /// &lt;param name=&quot;Done&quot;&gt;When you are done computing, call this function to have the parent component invoke the SetData function.&lt;/param&gt;\n  void DoWork(CancellationToken token, Action&lt;string&gt; ReportProgress, Action&lt;string, GH_RuntimeMessageLevel&gt; ReportError, Action Done);\n\n}\n</code></pre>\n<p>The magic happens in the <code>DoWork</code> function. You can see this function as a replacement for the <code>SolveInstance</code> one provided by the <code>GH_Component</code>. Here you can write up your logic, knowing that it will safely run outside the UI thread, and use whatever state you have stored internally during the <code>GetData</code> call.</p>\n<p>The important part is to make sure <strong>you are actually checking for task cancellation within the DoWork function</strong>. This is quite easy to do, and make sure you pepper it around wherever you can:</p>\n<ul>\n<li>at the beginning and end of the function</li>\n<li>inside any for loops that do heavy lifting</li>\n<li>whenever you can check for it.</li>\n</ul>\n<p>Here's a sample implementation that iterates through a GH_Structure (<code>Objects</code>) and performs a heavy operation on each object. Notice how we <strong>check for task cancellation</strong> pretty much everywhere we can!</p>\n<pre><code class=\"language-csharp\">public void DoWork(CancellationToken token, Action&lt;string&gt; ReportProgress, Action&lt;string, GH_RuntimeMessageLevel&gt; ReportError, Action Done)\n{\n  // 👉 Check for task cancellation!\n  if (token.IsCancellationRequested) return;\n\n  var completed = 0;\n  foreach (var list in Objects.Branches)\n  {\n    foreach (var item in list)\n    {\n      // 👉 Check for task cancellation!\n      if (token.IsCancellationRequested) return;\n   \n      // DO HEAVY LIFTING STUFF\n\n      ReportProgress(((double)(completed++ + 1) / (double)Objects.Count()).ToString(&quot;0.00%&quot;));      \n    }\n  }\n\n  // 👉 Check for task cancellation!\n  if (token.IsCancellationRequested) return;\n      \n  Done();\n}\n</code></pre>\n<p>Given the fact that the responsibility to check for task cancellation is up to the developer, this approach won't be too well suited for components calling code from other libraries that you don't, or can't, manage. There's probably a few other limitations that we're not yet aware of.</p>\n<p>That mostly covers the important parts. So far, this approach proved to be quite solid. There's some implementation quirks that we didn't cover here - like how we're displaying updates without calling the <code>OnDisplayExpired</code> function too often, and, most importantly, <strong>there's room for improvement</strong> - so we're happy to hear your thoughts, suggestions, and PRs!</p>\n<h2 id=\"links\">Links:</h2>\n<ul>\n<li><a href=\"https://github.com/specklesystems/GrasshopperAsyncComponent\"><strong>GH_AsyncComponent</strong> Github Repo</a> (don't forget to give it a ⭐)</li>\n<li><a href=\"https://discourse.speckle.works/\">Speckle 2.0 Discussion Forum</a> - come check out the future Speckle!</li>\n</ul>\n<!--kg-card-end: markdown-->","comment_id":"6016949e16926135029da17c","plaintext":"\n\nWhile working on Speckle 2.0, we really felt like we needed to come out about\nthis one. Yes, we really don't like jank. Even more, we really don't like when\nSpeckle makes things janky. What's jank? Here's a definition:\n\n> Perceptible pause in the smooth rendering of a software application's user\ninterface due to slow operations or poor interface design.\n\n\n(source [https://en.wiktionary.org/wiki/jank])\n\nProblem: Latency, Speckle & Grasshopper\nAs you may know, Grasshopper can be quite janky when things get... big. While\ndeveloping the 2.0 version of the Speckle connector, we wanted to avoid - as\nbest as we can! - adding jank to your definitions.\n\n> Disclaimer: what follows is not an authorative piece. We thought sharing our\nintial investigations in how we can solve this problem might be helpful for\nothers, as well as for us, as there's probably better ways to do it. Check out\nthe repository [https://github.com/specklesystems/GrasshopperAsyncComponent] and\nlet us know!\n\n\nSpeckle, within Grasshopper, is at the end of a workflow - converting objects,\nserialising them and sending them over the internet somewhere. Speckle, by its\nnature, has to deal with high latency operations - things that take time. If\ncurious, do check this list of Latency Numbers Every Programmer Should Know\n[https://gist.github.com/jboner/2841832] (hint: Speckle, in user-land, mostly\ndeals with the last four).\n\nSo what are we doing to avoid jankyness in Grasshopper, and why is it a problem?\nGrasshopper 1.0 (there's a 2.0 coming) is, unfortunately, bound to the UI\nthread. That means all computation happens in the same place as drawing all the\nnice buttons and responding to user inputs - clicks and so on. When writing\ncustom components, the logic you drop inside the famous protected override void\nSolveInstance(IGH_DataAccess DA) function will block the UI thread while it's\nrolling.\n\nThere's been quite a few\n[https://discourse.mcneel.com/search?q=async%20grasshopper] attempts at solving\nthis,\n[https://www.google.com/search?q=grasshopper+async+component&rlz=1C1CHBD_en-GBGB898GB898&oq=grasshopper+async+component&aqs=chrome..69i57j69i64j69i60l2j69i61.5239j0j1&sourceid=chrome&ie=UTF-8] \nand ours is, principally, probably not that different. Or better 😂 The really\nnice solution of task capable components\n[https://developer.rhino3d.com/guides/grasshopper/programming-task-capable-component/]\n, while great, still blocks the damn UI thread. We had a few requirements along\nthe way, which can be summarised as follows:\n\n * Long running operations inside Speckle components should not block the UI,\n * Components should be able to report progress back to the user in the\n   Grasshopper UI,\n * Components should be able to report back any errors and warnings that happen\n   inside other threads, and\n * Components should respond to user input eagerly and not compute for old\n   states.\n\nA Solution: GH_AsyncComponent\n[https://github.com/specklesystems/GrasshopperAsyncComponent/] { .display-1\n.font-weight-thin .text-xs-center .text-xs-center .my-5}\nWe've solved all these and generalised the approach so that any component can\nbecome one. Here's a link to the repo\n[https://github.com/specklesystems/GrasshopperAsyncComponent]! Feel free to use\nit as a base for your future asnyc-ness goodies. First off, here's how it looks\nand behaves in a test component for Speckle 2.0 (that's converting 15k circles):\n\n\n\nNotice that the solution runs \"eagerly\" - every time the input changes, the the\ncomputation restarts and cancels any previous tasks that are still running. Once\neverything is done calculating, the results are set. And the best parts:\n\n * Grasshopper and Rhino are still responsive!\n * There's progress reporting! (personally I hate waiting for Gh to\n   unfreeze...).\n\nHow does it work? Well, simply put you need to create a new component and\ninherit as a base class the GH_AsyncComponent class. Here you can do the\nstandard things you would normally do (register input/output ports, icons,\netc.), with two extra concerns:\n\n * Do not override the SolveInstance(IGH_DataAccess DA) function.\n * Define and set a Worker instance of a type that implements \n   IAsyncComponentWorker\n\n// TestAsyncComponent.cs\npublic class TestAsyncComponent : GH_AsyncComponent \n{\n  public override Guid ComponentGuid { get => new Guid(\"F1E5F78F-242D-44E3-AAD6-AB0257D69256\"); }\n  protected override System.Drawing.Bitmap Icon { get => null; }\n  \n  protected override void RegisterInputParams(GH_InputParamManager pManager) { ... }\n  protected override void RegisterOutputParams(GH_InputParamManager pManager) { ... }\n}\n\n\nNext, you will need to define a Worker class that implements the \nIAsyncComponentWorker interface. The implementation should be quite\nstraigtforward!\n\npublic interface IAsyncComponentWorker\n{\n  /// <summary>\n  /// This function should return a duplicate instance of your class. Make sure any state is duplicated (or not) properly. \n  /// </summary>\n  /// <returns></returns>\n  IAsyncComponentWorker GetNewInstance();\n\n  /// <summary>\n  /// Here you can safely set the data of your component, just like you would normally. <b>Important: do not call this method directly! When you are ready, call the provided \"Done\" action from the DoWork function.</b>\n  /// </summary>\n  /// <param name=\"DA\"></param>\n  void SetData(IGH_DataAccess DA);\n\n  /// <summary>\n  /// Here you can safely collect the data from your component, just like you would normally. <b>Important: do not call this method directly. It will be invoked by the parent component.</b>\n  /// </summary>\n  /// <param name=\"DA\"></param>\n  /// <param name=\"Params\"></param>\n  void CollectData(IGH_DataAccess DA, GH_ComponentParamServer Params);\n\n  /// <summary>\n  /// This where the computation happens. Make sure to check and return if the token is cancelled!\n  /// </summary>\n  /// <param name=\"token\">The cancellation token.</param>\n  /// <param name=\"ReportProgress\">Call this action to report progress. It will be displayed in the component's message bar.</param>\n  /// <param name=\"ReportError\">Call this to report a warning or an error.</param>\n  /// <param name=\"Done\">When you are done computing, call this function to have the parent component invoke the SetData function.</param>\n  void DoWork(CancellationToken token, Action<string> ReportProgress, Action<string, GH_RuntimeMessageLevel> ReportError, Action Done);\n\n}\n\n\nThe magic happens in the DoWork function. You can see this function as a\nreplacement for the SolveInstance one provided by the GH_Component. Here you can\nwrite up your logic, knowing that it will safely run outside the UI thread, and\nuse whatever state you have stored internally during the GetData call.\n\nThe important part is to make sure you are actually checking for task\ncancellation within the DoWork function. This is quite easy to do, and make sure\nyou pepper it around wherever you can:\n\n * at the beginning and end of the function\n * inside any for loops that do heavy lifting\n * whenever you can check for it.\n\nHere's a sample implementation that iterates through a GH_Structure (Objects)\nand performs a heavy operation on each object. Notice how we check for task\ncancellation pretty much everywhere we can!\n\npublic void DoWork(CancellationToken token, Action<string> ReportProgress, Action<string, GH_RuntimeMessageLevel> ReportError, Action Done)\n{\n  // 👉 Check for task cancellation!\n  if (token.IsCancellationRequested) return;\n\n  var completed = 0;\n  foreach (var list in Objects.Branches)\n  {\n    foreach (var item in list)\n    {\n      // 👉 Check for task cancellation!\n      if (token.IsCancellationRequested) return;\n   \n      // DO HEAVY LIFTING STUFF\n\n      ReportProgress(((double)(completed++ + 1) / (double)Objects.Count()).ToString(\"0.00%\"));      \n    }\n  }\n\n  // 👉 Check for task cancellation!\n  if (token.IsCancellationRequested) return;\n      \n  Done();\n}\n\n\nGiven the fact that the responsibility to check for task cancellation is up to\nthe developer, this approach won't be too well suited for components calling\ncode from other libraries that you don't, or can't, manage. There's probably a\nfew other limitations that we're not yet aware of.\n\nThat mostly covers the important parts. So far, this approach proved to be quite\nsolid. There's some implementation quirks that we didn't cover here - like how\nwe're displaying updates without calling the OnDisplayExpired function too\noften, and, most importantly, there's room for improvement - so we're happy to\nhear your thoughts, suggestions, and PRs!\n\nLinks:\n * GH_AsyncComponent Github Repo\n   [https://github.com/specklesystems/GrasshopperAsyncComponent] (don't forget\n   to give it a ⭐)\n * Speckle 2.0 Discussion Forum [https://discourse.speckle.works/] - come check\n   out the future Speckle!","feature_image":"/content/images/2021/01/async-gh_8a4f835b21.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 11:29:34","updated_at":"2021-01-31 17:24:01","published_at":"2021-01-01 11:30:00","custom_excerpt":"Dev log updates: an async component approach for Grasshopper. Less janky and more responsive! ","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6016c46379f121397cace807","uuid":"7911a0da-24fa-4da1-88a6-7eb26fbfc1b5","title":"xUnitRevit: a test runner for Revit","slug":"xunitrevit-a-test-runner-for-revit","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"Unit tests are one of those things in life that you try to avoid for as long as you can but, eventually, you surrender to and start to accept. With the release of Speckle 2.0 we're aiming at >90% test coverage, and we are doing everything we can to get there. This is why we developed a set of open source tools to help us run unit tests inside Revit.\\n\\nPrior beginning this effort we did a preliminary search and found a couple of existing solutions:\\n\\n- Dynamo's [RevitTestFramework](https://github.com/DynamoDS/RevitTestFramework)\\n- Arup's [RvtUnit](https://github.com/ArupAus/RvtUnit)\\n\\nThese either weren't really fit for our needs or hadn't been updated in a very long time, so we decided to develop our own. So here it is, we're pleased to announce: \\n\\n**[xUnitRevit](https://github.com/specklesystems/xunitRevit)** { .display-1 .font-weight-thin .text-xs-center .text-xs-center .my-5}\\n\\nan xUnit runner for Revit. This little tool has been invaluable for us as we are currently developing the Revit connector for Speckle 2.0, it lets us test conversion routines to and from Speckkle in a breeze. We hope you can find it useful too!\\n\\n![xunit2](https://user-images.githubusercontent.com/2679513/88958499-77809980-d298-11ea-84b6-e0749790ffc5.gif)\\n\\nThe runner is made up by three parts:\\n\\n- a general purpose WPF xUnit runner\\n- a Revit addin\\n- a utility library to help pass Revit data to you test libraries when running the tests\\n\\n## WPF xUnit runner: speckle.xunit.runner.wpf\\n\\nIn order to run, manage and visually explore tests we needed an xUnit runner with some sort of UI that could be displayed in Revit. We came across an existing effort [xunit.runner.wpf](https://github.com/Pilchie/xunit.runner.wpf), but since out of the box it didn't work when loaded inside of Revit we had to fork it and tweak it to load assemblies via reflection.\\n\\nOur fork is hosted at [speckle.xunit.runner.wpf](https://github.com/specklesystems/speckle.xunit.runner.wpf). \\n\\nWe also made it into a NuGet package you can easily reference and use to develop xUnit runners for other host applications:\\n\\n- [https://www.nuget.org/packages/speckle.xunit.runner.wpf/](https://www.nuget.org/packages/speckle.xunit.runner.wpf/)\\n\\n## Revit Addin: xUnitRevit\\n\\nWe then made a simple Revit addin that references `speckle.xunit.runner.wpf` and exposes its WPF interface form within Revit: [xUnitRevit](https://github.com/specklesystems/xUnitRevit)\\n\\nThe addin has already been configured to have build configurations for Revit 2019, 2020 and 2021, so you can just clone the repo and click debug/build to test it. \\n\\nMore info on how to use it in the project readme.\\n\\n## Utility library: xUnitRevitUtils\\n\\nThis is a very simple class library that contains methods and data structures to help you access Revit data and methods from your tests. For instance you can use it to trigger opening and closing of files, retrieving the Revit Document, running transactions etc...\\n\\nThis library is part of the [xUnitRevit](https://github.com/specklesystems/xUnitRevit) project and can be referenced via NuGet for the latest Revit versions: \\n\\n- [https://www.nuget.org/packages/xUnitRevitUtils.2019/](https://www.nuget.org/packages/xUnitRevitUtils.2019/)\\n- [https://www.nuget.org/packages/xUnitRevitUtils.2020/](https://www.nuget.org/packages/xUnitRevitUtils.2020/)\\n- [https://www.nuget.org/packages/xUnitRevitUtils.2021/](https://www.nuget.org/packages/xUnitRevitUtils.2021/)\\n\\nMore on how to use it on its readme file.\\n\\n## Getting started\\n\\nTo get started please visit the [xUnitRevit](https://github.com/specklesystems/xUnitRevit) repo and read the docs! There are very few steps required to create your first unit tests:\\n\\n- build/install xUnitRevit\\n- create a test library\\n- start Revit, launch the xUnitRevit addin and select the test library\\n- done! Add a star ⭐ to our repo if it was useful 😉\\n\\n### Sample Tests Library\\n\\nTo help you get started even faster, we've also made a [sample test library](https://github.com/specklesystems/xUnitRevit/tree/master/SampleLibrary). Check it out!\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>Unit tests are one of those things in life that you try to avoid for as long as you can but, eventually, you surrender to and start to accept. With the release of Speckle 2.0 we're aiming at &gt;90% test coverage, and we are doing everything we can to get there. This is why we developed a set of open source tools to help us run unit tests inside Revit.</p>\n<p>Prior beginning this effort we did a preliminary search and found a couple of existing solutions:</p>\n<ul>\n<li>Dynamo's <a href=\"https://github.com/DynamoDS/RevitTestFramework\">RevitTestFramework</a></li>\n<li>Arup's <a href=\"https://github.com/ArupAus/RvtUnit\">RvtUnit</a></li>\n</ul>\n<p>These either weren't really fit for our needs or hadn't been updated in a very long time, so we decided to develop our own. So here it is, we're pleased to announce:</p>\n<p><strong><a href=\"https://github.com/specklesystems/xunitRevit\">xUnitRevit</a></strong> { .display-1 .font-weight-thin .text-xs-center .text-xs-center .my-5}</p>\n<p>an xUnit runner for Revit. This little tool has been invaluable for us as we are currently developing the Revit connector for Speckle 2.0, it lets us test conversion routines to and from Speckkle in a breeze. We hope you can find it useful too!</p>\n<p><img src=\"https://user-images.githubusercontent.com/2679513/88958499-77809980-d298-11ea-84b6-e0749790ffc5.gif\" alt=\"xunit2\"></p>\n<p>The runner is made up by three parts:</p>\n<ul>\n<li>a general purpose WPF xUnit runner</li>\n<li>a Revit addin</li>\n<li>a utility library to help pass Revit data to you test libraries when running the tests</li>\n</ul>\n<h2 id=\"wpfxunitrunnerspecklexunitrunnerwpf\">WPF xUnit runner: speckle.xunit.runner.wpf</h2>\n<p>In order to run, manage and visually explore tests we needed an xUnit runner with some sort of UI that could be displayed in Revit. We came across an existing effort <a href=\"https://github.com/Pilchie/xunit.runner.wpf\">xunit.runner.wpf</a>, but since out of the box it didn't work when loaded inside of Revit we had to fork it and tweak it to load assemblies via reflection.</p>\n<p>Our fork is hosted at <a href=\"https://github.com/specklesystems/speckle.xunit.runner.wpf\">speckle.xunit.runner.wpf</a>.</p>\n<p>We also made it into a NuGet package you can easily reference and use to develop xUnit runners for other host applications:</p>\n<ul>\n<li><a href=\"https://www.nuget.org/packages/speckle.xunit.runner.wpf/\">https://www.nuget.org/packages/speckle.xunit.runner.wpf/</a></li>\n</ul>\n<h2 id=\"revitaddinxunitrevit\">Revit Addin: xUnitRevit</h2>\n<p>We then made a simple Revit addin that references <code>speckle.xunit.runner.wpf</code> and exposes its WPF interface form within Revit: <a href=\"https://github.com/specklesystems/xUnitRevit\">xUnitRevit</a></p>\n<p>The addin has already been configured to have build configurations for Revit 2019, 2020 and 2021, so you can just clone the repo and click debug/build to test it.</p>\n<p>More info on how to use it in the project readme.</p>\n<h2 id=\"utilitylibraryxunitrevitutils\">Utility library: xUnitRevitUtils</h2>\n<p>This is a very simple class library that contains methods and data structures to help you access Revit data and methods from your tests. For instance you can use it to trigger opening and closing of files, retrieving the Revit Document, running transactions etc...</p>\n<p>This library is part of the <a href=\"https://github.com/specklesystems/xUnitRevit\">xUnitRevit</a> project and can be referenced via NuGet for the latest Revit versions:</p>\n<ul>\n<li><a href=\"https://www.nuget.org/packages/xUnitRevitUtils.2019/\">https://www.nuget.org/packages/xUnitRevitUtils.2019/</a></li>\n<li><a href=\"https://www.nuget.org/packages/xUnitRevitUtils.2020/\">https://www.nuget.org/packages/xUnitRevitUtils.2020/</a></li>\n<li><a href=\"https://www.nuget.org/packages/xUnitRevitUtils.2021/\">https://www.nuget.org/packages/xUnitRevitUtils.2021/</a></li>\n</ul>\n<p>More on how to use it on its readme file.</p>\n<h2 id=\"gettingstarted\">Getting started</h2>\n<p>To get started please visit the <a href=\"https://github.com/specklesystems/xUnitRevit\">xUnitRevit</a> repo and read the docs! There are very few steps required to create your first unit tests:</p>\n<ul>\n<li>build/install xUnitRevit</li>\n<li>create a test library</li>\n<li>start Revit, launch the xUnitRevit addin and select the test library</li>\n<li>done! Add a star ⭐ to our repo if it was useful 😉</li>\n</ul>\n<h3 id=\"sampletestslibrary\">Sample Tests Library</h3>\n<p>To help you get started even faster, we've also made a <a href=\"https://github.com/specklesystems/xUnitRevit/tree/master/SampleLibrary\">sample test library</a>. Check it out!</p>\n<!--kg-card-end: markdown-->","comment_id":"6016c46379f121397cace807","plaintext":"Unit tests are one of those things in life that you try to avoid for as long as\nyou can but, eventually, you surrender to and start to accept. With the release\nof Speckle 2.0 we're aiming at >90% test coverage, and we are doing everything\nwe can to get there. This is why we developed a set of open source tools to help\nus run unit tests inside Revit.\n\nPrior beginning this effort we did a preliminary search and found a couple of\nexisting solutions:\n\n * Dynamo's RevitTestFramework [https://github.com/DynamoDS/RevitTestFramework]\n * Arup's RvtUnit [https://github.com/ArupAus/RvtUnit]\n\nThese either weren't really fit for our needs or hadn't been updated in a very\nlong time, so we decided to develop our own. So here it is, we're pleased to\nannounce:\n\nxUnitRevit [https://github.com/specklesystems/xunitRevit] { .display-1\n.font-weight-thin .text-xs-center .text-xs-center .my-5}\n\nan xUnit runner for Revit. This little tool has been invaluable for us as we are\ncurrently developing the Revit connector for Speckle 2.0, it lets us test\nconversion routines to and from Speckkle in a breeze. We hope you can find it\nuseful too!\n\n\n\nThe runner is made up by three parts:\n\n * a general purpose WPF xUnit runner\n * a Revit addin\n * a utility library to help pass Revit data to you test libraries when running\n   the tests\n\nWPF xUnit runner: speckle.xunit.runner.wpf\nIn order to run, manage and visually explore tests we needed an xUnit runner\nwith some sort of UI that could be displayed in Revit. We came across an\nexisting effort xunit.runner.wpf [https://github.com/Pilchie/xunit.runner.wpf],\nbut since out of the box it didn't work when loaded inside of Revit we had to\nfork it and tweak it to load assemblies via reflection.\n\nOur fork is hosted at speckle.xunit.runner.wpf\n[https://github.com/specklesystems/speckle.xunit.runner.wpf].\n\nWe also made it into a NuGet package you can easily reference and use to develop\nxUnit runners for other host applications:\n\n * https://www.nuget.org/packages/speckle.xunit.runner.wpf/\n\nRevit Addin: xUnitRevit\nWe then made a simple Revit addin that references speckle.xunit.runner.wpf and\nexposes its WPF interface form within Revit: xUnitRevit\n[https://github.com/specklesystems/xUnitRevit]\n\nThe addin has already been configured to have build configurations for Revit\n2019, 2020 and 2021, so you can just clone the repo and click debug/build to\ntest it.\n\nMore info on how to use it in the project readme.\n\nUtility library: xUnitRevitUtils\nThis is a very simple class library that contains methods and data structures to\nhelp you access Revit data and methods from your tests. For instance you can use\nit to trigger opening and closing of files, retrieving the Revit Document,\nrunning transactions etc...\n\nThis library is part of the xUnitRevit\n[https://github.com/specklesystems/xUnitRevit] project and can be referenced via\nNuGet for the latest Revit versions:\n\n * https://www.nuget.org/packages/xUnitRevitUtils.2019/\n * https://www.nuget.org/packages/xUnitRevitUtils.2020/\n * https://www.nuget.org/packages/xUnitRevitUtils.2021/\n\nMore on how to use it on its readme file.\n\nGetting started\nTo get started please visit the xUnitRevit\n[https://github.com/specklesystems/xUnitRevit] repo and read the docs! There are\nvery few steps required to create your first unit tests:\n\n * build/install xUnitRevit\n * create a test library\n * start Revit, launch the xUnitRevit addin and select the test library\n * done! Add a star ⭐ to our repo if it was useful 😉\n\nSample Tests Library\nTo help you get started even faster, we've also made a sample test library\n[https://github.com/specklesystems/xUnitRevit/tree/master/SampleLibrary]. Check\nit out!","feature_image":"/content/images/2021/01/xunit-2-1.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 14:53:23","updated_at":"2021-01-31 17:28:44","published_at":"2021-01-31 14:53:47","custom_excerpt":"Unit tests are one of those things in life that you try avoid as long as you can but, eventuality, you surrender to and start to accept.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6016c48979f121397cace810","uuid":"d5cb5b38-9a16-491c-bcab-ac9939b3c572","title":"Speckle In Research: Design Transactions Book","slug":"speckle-in-research-design-transactions-book","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"Dimitrie's research on Speckle is featured in a new open access book published by UCL Press, [Design Transactions](https://www.uclpress.co.uk/products/141560). If you are curious about the context, research, and methodology underpinning Speckle, it's definitively worth a read! You can [download (free of charge) or purchase a paperback copy from UCL Press.](https://www.uclpress.co.uk/products/141560)\\n\\n*Design Transactions* is edited by Bob Sheil, Mette Ramsgaard Thomsen, and Sean Hanna. It presents the outcome of new research to emerge from ‘[Innochain](http://innochain.net/)’, a consortium of six leading European architectural and engineering-focused institutions and their industry partners. The book presents new advances in digital design tooling that challenge established building cultures and systems. It offers new sustainable and materially smart design solutions with a strong focus on changing the way the industry thinks, designs, and builds our physical environment.\\n\\n![book-pages](https://strapi.speckle.works/uploads/book-pages_dc1aeed546.png)\\n\\nDivided into sections exploring **communication**, simulation and materialisation, *Design Transactions* explores digital and physical prototyping and testing that challenges the traditional linear construction methods of incremental refinement. This novel research investigates ‘the digital chain’ between phases as an opportunity for extended interdisciplinary design collaboration. The highly illustrated book features work from 15 early-stage researchers alongside chapters from world-leading industry collaborators and academics.\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>Dimitrie's research on Speckle is featured in a new open access book published by UCL Press, <a href=\"https://www.uclpress.co.uk/products/141560\">Design Transactions</a>. If you are curious about the context, research, and methodology underpinning Speckle, it's definitively worth a read! You can <a href=\"https://www.uclpress.co.uk/products/141560\">download (free of charge) or purchase a paperback copy from UCL Press.</a></p>\n<p><em>Design Transactions</em> is edited by Bob Sheil, Mette Ramsgaard Thomsen, and Sean Hanna. It presents the outcome of new research to emerge from ‘<a href=\"http://innochain.net/\">Innochain</a>’, a consortium of six leading European architectural and engineering-focused institutions and their industry partners. The book presents new advances in digital design tooling that challenge established building cultures and systems. It offers new sustainable and materially smart design solutions with a strong focus on changing the way the industry thinks, designs, and builds our physical environment.</p>\n<p><img src=\"https://strapi.speckle.works/uploads/book-pages_dc1aeed546.png\" alt=\"book-pages\"></p>\n<p>Divided into sections exploring <strong>communication</strong>, simulation and materialisation, <em>Design Transactions</em> explores digital and physical prototyping and testing that challenges the traditional linear construction methods of incremental refinement. This novel research investigates ‘the digital chain’ between phases as an opportunity for extended interdisciplinary design collaboration. The highly illustrated book features work from 15 early-stage researchers alongside chapters from world-leading industry collaborators and academics.</p>\n<!--kg-card-end: markdown-->","comment_id":"6016c48979f121397cace810","plaintext":"Dimitrie's research on Speckle is featured in a new open access book published\nby UCL Press, Design Transactions [https://www.uclpress.co.uk/products/141560].\nIf you are curious about the context, research, and methodology underpinning\nSpeckle, it's definitively worth a read! You can download (free of charge) or\npurchase a paperback copy from UCL Press.\n[https://www.uclpress.co.uk/products/141560]\n\nDesign Transactions is edited by Bob Sheil, Mette Ramsgaard Thomsen, and Sean\nHanna. It presents the outcome of new research to emerge from ‘Innochain\n[http://innochain.net/]’, a consortium of six leading European architectural and\nengineering-focused institutions and their industry partners. The book presents\nnew advances in digital design tooling that challenge established building\ncultures and systems. It offers new sustainable and materially smart design\nsolutions with a strong focus on changing the way the industry thinks, designs,\nand builds our physical environment.\n\n\n\nDivided into sections exploring communication, simulation and materialisation, \nDesign Transactions explores digital and physical prototyping and testing that\nchallenges the traditional linear construction methods of incremental\nrefinement. This novel research investigates ‘the digital chain’ between phases\nas an opportunity for extended interdisciplinary design collaboration. The\nhighly illustrated book features work from 15 early-stage researchers alongside\nchapters from world-leading industry collaborators and academics.","feature_image":"/content/images/2021/01/book-cover_9c6f238d35.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 14:54:01","updated_at":"2021-02-10 17:57:24","published_at":"2021-01-31 14:54:29","custom_excerpt":"Dimitrie's research on Speckle is featured in a new open access book published by UCL Press, Design Transactions. If you are curious about the context, research, and methodology underpinning Speckle, it's definitively worth browsing! Read more for download details. ","codeinjection_head":null,"codeinjection_foot":null,"custom_template":"custom-post-with-author","canonical_url":null},{"id":"6016c4fc79f121397cace81b","uuid":"89329ce9-9f32-4f80-be47-baa7cb016b15","title":"Speckle 2.0: Vision & FAQ","slug":"speckle-2-0-vision-faq","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"# Speckle 2.0 Vision and FAQ\\n\\nAfter announcing [setting up a company that would focus entirely on developing Speckle](https://speckle.systems/blog/goodnews/), and the development of [Speckle 2.0](https://speckle.systems/blog/insider-speckle2/), we've received a multitude of questions from our community members about what it would look like and requests for more information. This post describes our vision around Speckle going forward, and includes a small FAQ at the bottom.\\n\\n> We want Speckle to become the de-facto data platform that liberates AEC from proprietary file formats & closed source software. {.display-1 .font-weight-light}\\n\\nSpeckle is, in part, the product of the frustration caused by all the friction in the industry. As architects / engineers / software developers in the space ourselves, we have experienced the pains of transferring data from a software to another or the struggles to query a model's data.\\n\\nThe only way to overcome these hurdles, we believe, is by creating a digital infrastructure layer for the industry. We share the belief that, if you're building digital infrastructure, it has to be open source.\\n\\n> We want Speckle to become the open infrastructural base on which we, as a community of AEC hackers and doers, can shape the digital future of the built environment. {.display-1 .font-weight-light}\\n\\nWe started writing Speckle 2.0 with these values in mind and with the hope to give our community and the wider industry an even better product.\\n\\n### Step 1: DX\\n\\nWe're adding a lot of focus to the **developer experience** of working with Speckle. We've seen great examples of developers, computational designers, hackers bending Speckle beyond what we thought was possible. We want to improve this and turn Speckle into a great developer platform with a great developer experience. That's why we launched the [Insider Program](https://speckle.systems/blog/insider-speckle2), to have a better line of communication with core contributors and developers at an early stage.\\n\\n### Step 2: UX\\n\\nAnother huge priority for us will be the **ease of access and use** of the platform itself by users who are not coders or who don't like to wire things around. Speckle shouldn't be complicated to use or have a steep learning curve.\\n\\nAnother focus will be on expanding the connectors: we're looking at having an AutoCAD plugin, Civil3D, and others. \\n\\n### Step 3: Ecosystem\\n\\nFinally, we want to build an **eco-systems of applications** that leverage Speckle data and consume it in innovative ways enabling automation and next-gen pipelines. We've seen some great examples here in the past already! If you don't know what we're talking about, [check the recording from the speckle meet-up last November](https://speckle.systems/blog/londonmeetup-recording)! \\n\\n### Timing\\n\\nDevelopment of 2.0 has just recently started and we expect the source code for the first alpha versions to be available in the next few months (we have a [**very rough** roadmap doc here](https://www.notion.so/9189f83975b14fa5b3357638a5aef2dc?v=8b33057a65e44d84a7b7d303c0c7e122)). During this time we will also ramp up the insider programme and start getting in touch with applicants. \\n\\nIf you want to have a say on core features and functionalities from as early as possible, join the [Speckle Insider program](https://speckle.systems/blog/insider-speckle2). Otherwise, to just stay up to date with our progress and new announcements, follow us on [twitter](https://twitter.com/speckle_works) or join our [newsletter](https://speckle.systems/newsletter/)!\\n\\nAnd finally, if you have pressing concerns, feel free to reach out to [Matteo or Dimitrie directly](mailto:hello@speckle.systems). \\n\\n## FAQ\\n\\n**1. Will Speckle 2.0 still be open source?**\\nOf course yes! ❤️\\n\\n**2. Will 2.0 data be backwards compatible?**\\nNo 💔 2.0 is a major release and it will have breaking changes. We are optimising our schemas and API to be more performant and the cost to pay is that previous data will not be compatible with 2.0. We will work with the community to identify and create the appropriate migration paths.\\n\\n**3. What happens to the 1.0 Speckle clients/connectors?**\\nSpeckle 2.0 will still use connectors in the same way 1.0 does, these will in turn need to reference new SDKs (Speckle Core 2.0 and auth) but changes here will be kept to a minimum. If a connector is a community contribution we would expect their maintainers to update them, otherwise we'll try to do so.\\n\\n**4. How different will the 2.0 server be?**\\nWe'll cover that more in detail soon - ultimately it's still a nodejs application.  We are switching to postgres, but this is even easier (& cheaper) to handle in AWS/Azure/${Major Cloud Provider}! We're also cleaning up the server and switching to a more sustainable architecture for authN & authZ. The user provisioning part (AD integrations, etc) are not going to change.\\n\\n**5. Are Speckle Kits and custom schemas staying?**\\nYes! That doesn't change, it actually becomes better! We've revamped the base object class to be much more developer friendly and allow for more flexibility as well as much more control on how things get serialised. We've simplified the process of creating kits and custom object models. Another nice aspect is that we've eliminated the difference between sending one object containing a million sub-objects and sending one million separate sub-objects, so conceptually we have many more options to explore on how data is structured (streams, layers, etc.).\\n\\n**6. Will the web API change?**\\nYes, we're migrating to a GraphQL api. Why? It's self-documenting - schema and operations - and much nicer to work with (especially in frontend apps)! And - get this - we hopefully will actually be able to automate the client (&models) generation there. Tooling in .NET is not perfect, but we're working on this. Some high throughput routes will stay on the RESTful path though.\\n\\n**7. I'm writing a new Speckle connector, should I wait until 2.0 is out?**\\nNot really! The heavy duty part of writing a connector is the conversion logic and integration with the host application. These should be easy to port over.\\n\\n**8. I'm extending the Speckle server for some custom workflows, should I wait until 2.0 is out?**\\nWe'd suggests joining the insider program to keep up to date and receive access to WIP releases (once we have working code!).\\n\\n**9. I'm an AEC enterprise, how can I support Speckle?**\\nIn many ways! Below are what we see the most useful ways to support the project, **from your point of view**:\\n - building on top of speckle - this will accumulate in-house skills that will be useful in the long term (both in regards to Speckle, as well as other digital development needs),\\n- contributing feedback & case studies to the project, \\n- contributing code to the project,\\n- organising a workshop, sponsoring an event (post-pandemic obviously!)\\n\\n**10. Bills still need to be paid. What is your business model?**\\nWe've carefully thought about this, as we did not want to compromise any aspects of the open source mission of Speckle when we created a company around it. Not surprisingly, there's plenty of examples of successful COSS (commercial open source software) enterprises: Gitlab, Wordpress, MongoDB, etc. We're taking a page from their book here and are planning to offer services that are built on top of Speckle (a SaaS product, consulting services, custom product development etc.). Long story short: **we will not close source Speckle.**\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><h1 id=\"speckle20visionandfaq\">Speckle 2.0 Vision and FAQ</h1>\n<p>After announcing <a href=\"https://speckle.systems/blog/goodnews/\">setting up a company that would focus entirely on developing Speckle</a>, and the development of <a href=\"https://speckle.systems/blog/insider-speckle2/\">Speckle 2.0</a>, we've received a multitude of questions from our community members about what it would look like and requests for more information. This post describes our vision around Speckle going forward, and includes a small FAQ at the bottom.</p>\n<blockquote>\n<p>We want Speckle to become the de-facto data platform that liberates AEC from proprietary file formats &amp; closed source software. {.display-1 .font-weight-light}</p>\n</blockquote>\n<p>Speckle is, in part, the product of the frustration caused by all the friction in the industry. As architects / engineers / software developers in the space ourselves, we have experienced the pains of transferring data from a software to another or the struggles to query a model's data.</p>\n<p>The only way to overcome these hurdles, we believe, is by creating a digital infrastructure layer for the industry. We share the belief that, if you're building digital infrastructure, it has to be open source.</p>\n<blockquote>\n<p>We want Speckle to become the open infrastructural base on which we, as a community of AEC hackers and doers, can shape the digital future of the built environment. {.display-1 .font-weight-light}</p>\n</blockquote>\n<p>We started writing Speckle 2.0 with these values in mind and with the hope to give our community and the wider industry an even better product.</p>\n<h3 id=\"step1dx\">Step 1: DX</h3>\n<p>We're adding a lot of focus to the <strong>developer experience</strong> of working with Speckle. We've seen great examples of developers, computational designers, hackers bending Speckle beyond what we thought was possible. We want to improve this and turn Speckle into a great developer platform with a great developer experience. That's why we launched the <a href=\"https://speckle.systems/blog/insider-speckle2\">Insider Program</a>, to have a better line of communication with core contributors and developers at an early stage.</p>\n<h3 id=\"step2ux\">Step 2: UX</h3>\n<p>Another huge priority for us will be the <strong>ease of access and use</strong> of the platform itself by users who are not coders or who don't like to wire things around. Speckle shouldn't be complicated to use or have a steep learning curve.</p>\n<p>Another focus will be on expanding the connectors: we're looking at having an AutoCAD plugin, Civil3D, and others.</p>\n<h3 id=\"step3ecosystem\">Step 3: Ecosystem</h3>\n<p>Finally, we want to build an <strong>eco-systems of applications</strong> that leverage Speckle data and consume it in innovative ways enabling automation and next-gen pipelines. We've seen some great examples here in the past already! If you don't know what we're talking about, <a href=\"https://speckle.systems/blog/londonmeetup-recording\">check the recording from the speckle meet-up last November</a>!</p>\n<h3 id=\"timing\">Timing</h3>\n<p>Development of 2.0 has just recently started and we expect the source code for the first alpha versions to be available in the next few months (we have a <a href=\"https://www.notion.so/9189f83975b14fa5b3357638a5aef2dc?v=8b33057a65e44d84a7b7d303c0c7e122\"><strong>very rough</strong> roadmap doc here</a>). During this time we will also ramp up the insider programme and start getting in touch with applicants.</p>\n<p>If you want to have a say on core features and functionalities from as early as possible, join the <a href=\"https://speckle.systems/blog/insider-speckle2\">Speckle Insider program</a>. Otherwise, to just stay up to date with our progress and new announcements, follow us on <a href=\"https://twitter.com/speckle_works\">twitter</a> or join our <a href=\"https://speckle.systems/newsletter/\">newsletter</a>!</p>\n<p>And finally, if you have pressing concerns, feel free to reach out to <a href=\"mailto:hello@speckle.systems\">Matteo or Dimitrie directly</a>.</p>\n<h2 id=\"faq\">FAQ</h2>\n<p><strong>1. Will Speckle 2.0 still be open source?</strong><br>\nOf course yes! ❤️</p>\n<p><strong>2. Will 2.0 data be backwards compatible?</strong><br>\nNo 💔 2.0 is a major release and it will have breaking changes. We are optimising our schemas and API to be more performant and the cost to pay is that previous data will not be compatible with 2.0. We will work with the community to identify and create the appropriate migration paths.</p>\n<p><strong>3. What happens to the 1.0 Speckle clients/connectors?</strong><br>\nSpeckle 2.0 will still use connectors in the same way 1.0 does, these will in turn need to reference new SDKs (Speckle Core 2.0 and auth) but changes here will be kept to a minimum. If a connector is a community contribution we would expect their maintainers to update them, otherwise we'll try to do so.</p>\n<p><strong>4. How different will the 2.0 server be?</strong><br>\nWe'll cover that more in detail soon - ultimately it's still a nodejs application.  We are switching to postgres, but this is even easier (&amp; cheaper) to handle in AWS/Azure/${Major Cloud Provider}! We're also cleaning up the server and switching to a more sustainable architecture for authN &amp; authZ. The user provisioning part (AD integrations, etc) are not going to change.</p>\n<p><strong>5. Are Speckle Kits and custom schemas staying?</strong><br>\nYes! That doesn't change, it actually becomes better! We've revamped the base object class to be much more developer friendly and allow for more flexibility as well as much more control on how things get serialised. We've simplified the process of creating kits and custom object models. Another nice aspect is that we've eliminated the difference between sending one object containing a million sub-objects and sending one million separate sub-objects, so conceptually we have many more options to explore on how data is structured (streams, layers, etc.).</p>\n<p><strong>6. Will the web API change?</strong><br>\nYes, we're migrating to a GraphQL api. Why? It's self-documenting - schema and operations - and much nicer to work with (especially in frontend apps)! And - get this - we hopefully will actually be able to automate the client (&amp;models) generation there. Tooling in .NET is not perfect, but we're working on this. Some high throughput routes will stay on the RESTful path though.</p>\n<p><strong>7. I'm writing a new Speckle connector, should I wait until 2.0 is out?</strong><br>\nNot really! The heavy duty part of writing a connector is the conversion logic and integration with the host application. These should be easy to port over.</p>\n<p><strong>8. I'm extending the Speckle server for some custom workflows, should I wait until 2.0 is out?</strong><br>\nWe'd suggests joining the insider program to keep up to date and receive access to WIP releases (once we have working code!).</p>\n<p><strong>9. I'm an AEC enterprise, how can I support Speckle?</strong><br>\nIn many ways! Below are what we see the most useful ways to support the project, <strong>from your point of view</strong>:</p>\n<ul>\n<li>building on top of speckle - this will accumulate in-house skills that will be useful in the long term (both in regards to Speckle, as well as other digital development needs),</li>\n<li>contributing feedback &amp; case studies to the project,</li>\n<li>contributing code to the project,</li>\n<li>organising a workshop, sponsoring an event (post-pandemic obviously!)</li>\n</ul>\n<p><strong>10. Bills still need to be paid. What is your business model?</strong><br>\nWe've carefully thought about this, as we did not want to compromise any aspects of the open source mission of Speckle when we created a company around it. Not surprisingly, there's plenty of examples of successful COSS (commercial open source software) enterprises: Gitlab, Wordpress, MongoDB, etc. We're taking a page from their book here and are planning to offer services that are built on top of Speckle (a SaaS product, consulting services, custom product development etc.). Long story short: <strong>we will not close source Speckle.</strong></p>\n<!--kg-card-end: markdown-->","comment_id":"6016c4fc79f121397cace81b","plaintext":"Speckle 2.0 Vision and FAQ\nAfter announcing setting up a company that would focus entirely on developing\nSpeckle [https://speckle.systems/blog/goodnews/], and the development of \nSpeckle\n2.0 [https://speckle.systems/blog/insider-speckle2/], we've received a multitude\nof questions from our community members about what it would look like and\nrequests for more information. This post describes our vision around Speckle\ngoing forward, and includes a small FAQ at the bottom.\n\n> We want Speckle to become the de-facto data platform that liberates AEC from\nproprietary file formats & closed source software. {.display-1\n.font-weight-light}\n\n\nSpeckle is, in part, the product of the frustration caused by all the friction\nin the industry. As architects / engineers / software developers in the space\nourselves, we have experienced the pains of transferring data from a software to\nanother or the struggles to query a model's data.\n\nThe only way to overcome these hurdles, we believe, is by creating a digital\ninfrastructure layer for the industry. We share the belief that, if you're\nbuilding digital infrastructure, it has to be open source.\n\n> We want Speckle to become the open infrastructural base on which we, as a\ncommunity of AEC hackers and doers, can shape the digital future of the built\nenvironment. {.display-1 .font-weight-light}\n\n\nWe started writing Speckle 2.0 with these values in mind and with the hope to\ngive our community and the wider industry an even better product.\n\nStep 1: DX\nWe're adding a lot of focus to the developer experience of working with Speckle.\nWe've seen great examples of developers, computational designers, hackers\nbending Speckle beyond what we thought was possible. We want to improve this and\nturn Speckle into a great developer platform with a great developer experience.\nThat's why we launched the Insider Program\n[https://speckle.systems/blog/insider-speckle2], to have a better line of\ncommunication with core contributors and developers at an early stage.\n\nStep 2: UX\nAnother huge priority for us will be the ease of access and use of the platform\nitself by users who are not coders or who don't like to wire things around.\nSpeckle shouldn't be complicated to use or have a steep learning curve.\n\nAnother focus will be on expanding the connectors: we're looking at having an\nAutoCAD plugin, Civil3D, and others.\n\nStep 3: Ecosystem\nFinally, we want to build an eco-systems of applications that leverage Speckle\ndata and consume it in innovative ways enabling automation and next-gen\npipelines. We've seen some great examples here in the past already! If you don't\nknow what we're talking about, check the recording from the speckle meet-up\nlast\nNovember [https://speckle.systems/blog/londonmeetup-recording]!\n\nTiming\nDevelopment of 2.0 has just recently started and we expect the source code for\nthe first alpha versions to be available in the next few months (we have a very\nrough roadmap doc here\n[https://www.notion.so/9189f83975b14fa5b3357638a5aef2dc?v=8b33057a65e44d84a7b7d303c0c7e122]\n). During this time we will also ramp up the insider programme and start getting\nin touch with applicants.\n\nIf you want to have a say on core features and functionalities from as early as\npossible, join the Speckle Insider program\n[https://speckle.systems/blog/insider-speckle2]. Otherwise, to just stay up to\ndate with our progress and new announcements, follow us on twitter\n[https://twitter.com/speckle_works] or join our newsletter\n[https://speckle.systems/newsletter/]!\n\nAnd finally, if you have pressing concerns, feel free to reach out to Matteo or\nDimitrie directly [hello@speckle.systems].\n\nFAQ\n1. Will Speckle 2.0 still be open source?\nOf course yes! ❤️\n\n2. Will 2.0 data be backwards compatible?\nNo 💔 2.0 is a major release and it will have breaking changes. We are\noptimising our schemas and API to be more performant and the cost to pay is that\nprevious data will not be compatible with 2.0. We will work with the community\nto identify and create the appropriate migration paths.\n\n3. What happens to the 1.0 Speckle clients/connectors?\nSpeckle 2.0 will still use connectors in the same way 1.0 does, these will in\nturn need to reference new SDKs (Speckle Core 2.0 and auth) but changes here\nwill be kept to a minimum. If a connector is a community contribution we would\nexpect their maintainers to update them, otherwise we'll try to do so.\n\n4. How different will the 2.0 server be?\nWe'll cover that more in detail soon - ultimately it's still a nodejs\napplication. We are switching to postgres, but this is even easier (& cheaper)\nto handle in AWS/Azure/${Major Cloud Provider}! We're also cleaning up the\nserver and switching to a more sustainable architecture for authN & authZ. The\nuser provisioning part (AD integrations, etc) are not going to change.\n\n5. Are Speckle Kits and custom schemas staying?\nYes! That doesn't change, it actually becomes better! We've revamped the base\nobject class to be much more developer friendly and allow for more flexibility\nas well as much more control on how things get serialised. We've simplified the\nprocess of creating kits and custom object models. Another nice aspect is that\nwe've eliminated the difference between sending one object containing a million\nsub-objects and sending one million separate sub-objects, so conceptually we\nhave many more options to explore on how data is structured (streams, layers,\netc.).\n\n6. Will the web API change?\nYes, we're migrating to a GraphQL api. Why? It's self-documenting - schema and\noperations - and much nicer to work with (especially in frontend apps)! And -\nget this - we hopefully will actually be able to automate the client (&models)\ngeneration there. Tooling in .NET is not perfect, but we're working on this.\nSome high throughput routes will stay on the RESTful path though.\n\n7. I'm writing a new Speckle connector, should I wait until 2.0 is out?\nNot really! The heavy duty part of writing a connector is the conversion logic\nand integration with the host application. These should be easy to port over.\n\n8. I'm extending the Speckle server for some custom workflows, should I wait\nuntil 2.0 is out?\nWe'd suggests joining the insider program to keep up to date and receive access\nto WIP releases (once we have working code!).\n\n9. I'm an AEC enterprise, how can I support Speckle?\nIn many ways! Below are what we see the most useful ways to support the project, \nfrom your point of view:\n\n * building on top of speckle - this will accumulate in-house skills that will\n   be useful in the long term (both in regards to Speckle, as well as other\n   digital development needs),\n * contributing feedback & case studies to the project,\n * contributing code to the project,\n * organising a workshop, sponsoring an event (post-pandemic obviously!)\n\n10. Bills still need to be paid. What is your business model?\nWe've carefully thought about this, as we did not want to compromise any aspects\nof the open source mission of Speckle when we created a company around it. Not\nsurprisingly, there's plenty of examples of successful COSS (commercial open\nsource software) enterprises: Gitlab, Wordpress, MongoDB, etc. We're taking a\npage from their book here and are planning to offer services that are built on\ntop of Speckle (a SaaS product, consulting services, custom product development\netc.). Long story short: we will not close source Speckle.","feature_image":"/content/images/2021/01/vision_8db74726f5.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 14:55:56","updated_at":"2021-02-10 17:56:54","published_at":"2021-01-31 14:56:41","custom_excerpt":"More details on our vision for Speckle 2.0, and a set of FAQs. ","codeinjection_head":null,"codeinjection_foot":null,"custom_template":"custom-post-with-author","canonical_url":null},{"id":"6016c52e79f121397cace824","uuid":"10a1d287-726c-4425-a919-4fb7a6ec7da3","title":"Speckle 2 & The Insider Programme","slug":"speckle-2-the-insider-programme","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"markdown\",{\"markdown\":\"We are planning the refactoring, recoding and re-engineering of Speckle. That's right, it's time for a 2.0! The **Speckle Insider** programme is a way for us to involve existing & aspiring Speckle developers on the journey to a better Speckle from the early stages of development. \\n\\n**We are developing Speckle for the AEC industry and want everyone to be part of it! Join the programme on our community forum [here](https://forms.gle/VzhDN9xYDXDiagJ48).**\\n\\nThe current iteration of Speckle (let's call it 1.0) was originally begun in late 2016, and first public commits from sometime in early 2017; since then we've learned a lot. Over the next couple of months we will focus on getting some core components of the Speckle ecosystem (server, & .NET SDK) in an early alpha stage so we can kickstart the conversations around it. \\n\\n## Why join?\\n\\nBy joining, you will get early access to the refactoring kitchen, where we are cooking the next generation Speckle Soup ™️. What does this mean?\\n\\n- Access to the **Speckle Next** Github organisation, where new code will be kept, once we reach an early alpha stage. \\n- The chance to contribute and shape **Speckle 2.0**!\\n- Regular dev meetings where we can get together and talk shop and discuss the status of the nation.\\n\\n## Ok, now join (it's free)!\\n\\nOur target audience here is past, present and future Speckle developers. Just fill in this quick form and we'll get back to you soon!\\n\\n\\n## 👉 [Speckle Insider Group](https://discourse.speckle.works/c/speckle-insider/10)\\n\\n\\n## Should wait for Speckle 2.0, or keep working with Speckle 1.0? \\n\\nWe think you should keep at it. We're not killing 1.0 (see below). Speckle 2.0 will bring about breaking changes, but we envision a smooth migration path, and you will be able to bring with you the experience you gained by working with Speckle anyway. \\n\\n## What happens to Speckle 1.0?\\n\\nThe entire Speckle team (uh, Dimitrie and Matteo, for the record) is currently working on v2.0, this doesn't leave many resource available to actively support and develop the current version. That's why are putting **Speckle v1.0 in Life Time Support.**\\n\\nThis means that we will not be releasing new features for the server and clients, unless these can be easily ported to v2. Likewise only critical bugs will be addressed.\\n\\nJust want to chat? Head over to the [slack group](https://speckle-works.slack.com/join/shared_invite/enQtNjY5Mzk2NTYxNTA4LTU4MWI5ZjdhMjFmMTIxZDIzOTAzMzRmMTZhY2QxMmM1ZjVmNzJmZGMzMDVlZmJjYWQxYWU0MWJkYmY3N2JjNGI).\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: markdown--><p>We are planning the refactoring, recoding and re-engineering of Speckle. That's right, it's time for a 2.0! The <strong>Speckle Insider</strong> programme is a way for us to involve existing &amp; aspiring Speckle developers on the journey to a better Speckle from the early stages of development.</p>\n<p><strong>We are developing Speckle for the AEC industry and want everyone to be part of it! Join the programme on our community forum <a href=\"https://forms.gle/VzhDN9xYDXDiagJ48\">here</a>.</strong></p>\n<p>The current iteration of Speckle (let's call it 1.0) was originally begun in late 2016, and first public commits from sometime in early 2017; since then we've learned a lot. Over the next couple of months we will focus on getting some core components of the Speckle ecosystem (server, &amp; .NET SDK) in an early alpha stage so we can kickstart the conversations around it.</p>\n<h2 id=\"whyjoin\">Why join?</h2>\n<p>By joining, you will get early access to the refactoring kitchen, where we are cooking the next generation Speckle Soup ™️. What does this mean?</p>\n<ul>\n<li>Access to the <strong>Speckle Next</strong> Github organisation, where new code will be kept, once we reach an early alpha stage.</li>\n<li>The chance to contribute and shape <strong>Speckle 2.0</strong>!</li>\n<li>Regular dev meetings where we can get together and talk shop and discuss the status of the nation.</li>\n</ul>\n<h2 id=\"oknowjoinitsfree\">Ok, now join (it's free)!</h2>\n<p>Our target audience here is past, present and future Speckle developers. Just fill in this quick form and we'll get back to you soon!</p>\n<h2 id=\"speckleinsidergroup\">👉 <a href=\"https://discourse.speckle.works/c/speckle-insider/10\">Speckle Insider Group</a></h2>\n<h2 id=\"shouldwaitforspeckle20orkeepworkingwithspeckle10\">Should wait for Speckle 2.0, or keep working with Speckle 1.0?</h2>\n<p>We think you should keep at it. We're not killing 1.0 (see below). Speckle 2.0 will bring about breaking changes, but we envision a smooth migration path, and you will be able to bring with you the experience you gained by working with Speckle anyway.</p>\n<h2 id=\"whathappenstospeckle10\">What happens to Speckle 1.0?</h2>\n<p>The entire Speckle team (uh, Dimitrie and Matteo, for the record) is currently working on v2.0, this doesn't leave many resource available to actively support and develop the current version. That's why are putting <strong>Speckle v1.0 in Life Time Support.</strong></p>\n<p>This means that we will not be releasing new features for the server and clients, unless these can be easily ported to v2. Likewise only critical bugs will be addressed.</p>\n<p>Just want to chat? Head over to the <a href=\"https://speckle-works.slack.com/join/shared_invite/enQtNjY5Mzk2NTYxNTA4LTU4MWI5ZjdhMjFmMTIxZDIzOTAzMzRmMTZhY2QxMmM1ZjVmNzJmZGMzMDVlZmJjYWQxYWU0MWJkYmY3N2JjNGI\">slack group</a>.</p>\n<!--kg-card-end: markdown-->","comment_id":"6016c52e79f121397cace824","plaintext":"We are planning the refactoring, recoding and re-engineering of Speckle. That's\nright, it's time for a 2.0! The Speckle Insider programme is a way for us to\ninvolve existing & aspiring Speckle developers on the journey to a better\nSpeckle from the early stages of development.\n\nWe are developing Speckle for the AEC industry and want everyone to be part of\nit! Join the programme on our community forum here\n[https://forms.gle/VzhDN9xYDXDiagJ48].\n\nThe current iteration of Speckle (let's call it 1.0) was originally begun in\nlate 2016, and first public commits from sometime in early 2017; since then\nwe've learned a lot. Over the next couple of months we will focus on getting\nsome core components of the Speckle ecosystem (server, & .NET SDK) in an early\nalpha stage so we can kickstart the conversations around it.\n\nWhy join?\nBy joining, you will get early access to the refactoring kitchen, where we are\ncooking the next generation Speckle Soup ™️. What does this mean?\n\n * Access to the Speckle Next Github organisation, where new code will be kept,\n   once we reach an early alpha stage.\n * The chance to contribute and shape Speckle 2.0!\n * Regular dev meetings where we can get together and talk shop and discuss the\n   status of the nation.\n\nOk, now join (it's free)!\nOur target audience here is past, present and future Speckle developers. Just\nfill in this quick form and we'll get back to you soon!\n\n👉 Speckle Insider Group [https://discourse.speckle.works/c/speckle-insider/10]\nShould wait for Speckle 2.0, or keep working with Speckle 1.0?\nWe think you should keep at it. We're not killing 1.0 (see below). Speckle 2.0\nwill bring about breaking changes, but we envision a smooth migration path, and\nyou will be able to bring with you the experience you gained by working with\nSpeckle anyway.\n\nWhat happens to Speckle 1.0?\nThe entire Speckle team (uh, Dimitrie and Matteo, for the record) is currently\nworking on v2.0, this doesn't leave many resource available to actively support\nand develop the current version. That's why are putting Speckle v1.0 in Life\nTime Support.\n\nThis means that we will not be releasing new features for the server and\nclients, unless these can be easily ported to v2. Likewise only critical bugs\nwill be addressed.\n\nJust want to chat? Head over to the slack group\n[https://speckle-works.slack.com/join/shared_invite/enQtNjY5Mzk2NTYxNTA4LTU4MWI5ZjdhMjFmMTIxZDIzOTAzMzRmMTZhY2QxMmM1ZjVmNzJmZGMzMDVlZmJjYWQxYWU0MWJkYmY3N2JjNGI]\n.","feature_image":"/content/images/2021/01/small_Screenshot_2020-06-01_at_13.58.21_7437420e51-1.png","featured":0,"type":"post","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 14:56:46","updated_at":"2021-02-10 17:57:03","published_at":"2021-01-31 15:02:50","custom_excerpt":"Towards Speckle 2.0 , Speckle 1.0 LTS, and the future.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":"custom-post-with-author","canonical_url":null},{"id":"6016de0a79f121397cace83e","uuid":"448bbf9d-4fad-42c6-859e-f04490ff908c","title":"Contact Speckle","slug":"contact","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"We're a fully remote company, so you can't really visit our office for a coffee. There's a few ways to get in touch though:\"]]],[1,\"p\",[]]]}","html":"<p>We're a fully remote company, so you can't really visit our office for a coffee. There's a few ways to get in touch though:</p>","comment_id":"6016de0a79f121397cace83e","plaintext":"We're a fully remote company, so you can't really visit our office for a coffee.\nThere's a few ways to get in touch though:","feature_image":null,"featured":0,"type":"page","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 16:42:50","updated_at":"2021-02-05 10:30:06","published_at":"2021-01-31 16:43:29","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6016dec779f121397cace847","uuid":"6c9add0e-095f-42c7-b0f5-4895e2a21428","title":"Speckle 2.0 Beta","slug":"getstarted","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"p\",[[0,[],0,\"We are working round the clock to kick off Speckle 2. If you are interested in participating in our 2.0 beta launch programme, please register below! \"]]]]}","html":"<p>We are working round the clock to kick off Speckle 2. If you are interested in participating in our 2.0 beta launch programme, please register below! </p>","comment_id":"6016dec779f121397cace847","plaintext":"We are working round the clock to kick off Speckle 2. If you are interested in\nparticipating in our 2.0 beta launch programme, please register below!","feature_image":null,"featured":0,"type":"page","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"1","created_at":"2021-01-31 16:45:59","updated_at":"2021-02-07 13:57:08","published_at":"2021-01-31 16:48:12","custom_excerpt":"Join the early-access beta launch of Speckle 2.0.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"6023b3a7c7acea67e5fd5876","uuid":"c063f877-1719-4b04-8c61-21101e04e0ad","title":"Partnerships","slug":"partnerships","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[],\"markups\":[],\"sections\":[[1,\"h2\",[[0,[],0,\"Software Vendors\"]]],[1,\"p\",[[0,[],0,\"Blurb\"]]],[1,\"h2\",[[0,[],0,\"Startups \"]]],[1,\"p\",[[0,[],0,\"Blurb\"]]],[1,\"h2\",[[0,[],0,\"BIM Consultancies \"]]],[1,\"p\",[[0,[],0,\"Blurb\"]]],[1,\"h2\",[[0,[],0,\"Universities & Educators\"]]],[1,\"p\",[[0,[],0,\"Blurb\"]]]]}","html":"<h2 id=\"software-vendors\">Software Vendors</h2><p>Blurb</p><h2 id=\"startups\">Startups </h2><p>Blurb</p><h2 id=\"bim-consultancies\">BIM Consultancies </h2><p>Blurb</p><h2 id=\"universities-educators\">Universities &amp; Educators</h2><p>Blurb</p>","comment_id":"6023b3a7c7acea67e5fd5876","plaintext":"Software Vendors\nBlurb\n\nStartups \nBlurb\n\nBIM Consultancies \nBlurb\n\nUniversities & Educators\nBlurb","feature_image":null,"featured":0,"type":"page","status":"published","locale":null,"visibility":"public","email_recipient_filter":"none","author_id":"5951f5fca366002ebd5dbef7","created_at":"2021-02-10 10:21:27","updated_at":"2021-02-10 19:01:20","published_at":"2021-02-10 10:22:16","custom_excerpt":"Become a Speckle partner and ensure the success of all Speckle users no matter their use cases, size, industries or tech stacks.","codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null}],"posts_meta":[],"users":[{"id":"1","name":"Dimitrie Stefanescu","slug":"dimitrie","password":"$2a$10$xRbCXMU24.9Pspq7bLwIYuGg3luto3DTQzCNLx9Q5QWnZbjYNdKAe","email":"dimitrie@speckle.systems","profile_image":"/content/images/2021/01/dim.jpeg","cover_image":null,"bio":"Dr. award loosing junior non-creative programmer. And architect. Rumoured to have inflicted on the world - yes this is a ripoff","website":null,"location":"Founder","facebook":null,"twitter":"@idid","accessibility":"{\"nightShift\":true}","status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":"[\"featured-post\",\"getting-started\",\"upload-a-theme\"]","last_seen":"2021-02-15 13:01:45","created_at":"2021-01-24 10:49:22","updated_at":"2021-02-15 13:01:45"},{"id":"5951f5fca366002ebd5dbef7","name":"Speckle","slug":"speckle","password":"$2a$10$0z9Qvl.aNVL9WoxYuIDg9ekWyx0pNWGI9/UOKPpfjfNjbNjYoiMmG","email":"hello@speckle.systems","profile_image":"//www.gravatar.com/avatar/024f5e0706a89e6aed507995add3c31f?s=250&d=mm&r=x","cover_image":null,"bio":null,"website":"https://speckle.systems","location":"The Internet","facebook":null,"twitter":null,"accessibility":null,"status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-28 19:10:27"},{"id":"6015a471ffbf7ee2cb67d035","name":"Matteo Cominetti","slug":"matteo","password":"$2a$10$aGltg5tjjm1twCezwBsm8uk9eX1MehEOedzkEYjH8g3QEKnJHL9RC","email":"matteo@speckle.systems","profile_image":"/content/images/2021/01/matteo.jpeg","cover_image":null,"bio":"Background in Architecture and Engineering. Worked @ Arup, Foster+Partners, WeWork, CASE Inc.","website":"https://www.example.com","location":"Founder","facebook":null,"twitter":"@teocomi","accessibility":null,"status":"locked","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2021-01-30 18:26:45","updated_at":"2021-01-30 22:28:07"},{"id":"6015a471ffbf7ee2cb67d036","name":"Izzy Lyseggen","slug":"izzy","password":"$2a$10$SNUPpvnPDTt7XVzvCblBgO/3P0aZgVBb7yKcPcZUp./B1qKf3w8aC","email":"izzy@speckle.systems","profile_image":"/content/images/2021/01/izzy.jpeg","cover_image":null,"bio":"Self-taught programmer who used to build race cars. MEng Mechanical Engineering from University of Edinburgh. Ex Arup and Buro Happold.","website":"https://www.example.com","location":"Software Engineer","facebook":null,"twitter":null,"accessibility":null,"status":"locked","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2021-01-30 18:26:36","updated_at":"2021-01-30 20:30:43"},{"id":"6015a471ffbf7ee2cb67d037","name":"Alan Rynne","slug":"alan","password":"$2a$10$395cgtL7vo87ypkY0kJ3vu/ZXM1fHVMnsxXgoIC73hBC.DmWJNLzW","email":"alan@speckle.systems","profile_image":"/content/images/2021/01/alan.jpeg","cover_image":null,"bio":"Building engineer, programmer and teacher with a passion for architectural geometry. Teaching Parametric Design in Architecture at UPC. Worked @ Bellapart, Apogea, UPC.","website":"https://www.example.com","location":"Software Engineer","facebook":null,"twitter":null,"accessibility":null,"status":"locked","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2021-01-30 18:26:03","updated_at":"2021-01-30 20:31:05"},{"id":"6015a471ffbf7ee2cb67d038","name":"Claire Kuang","slug":"claire","password":"$2a$10$a4EKeWnpD2Kb.m2X57rPUut8v9PDGusdtsVuBZ5PeZSRD8zJcVrRe","email":"claire@speckle.systems","profile_image":"/content/images/2021/01/claire.jpeg","cover_image":null,"bio":"Technologist and computational designer. Background in Math and Architecture from Harvard GSD. Worked @ Gehry Technologies, Certain Measures, NASA.","website":"https://www.example.com","location":"Software Engineer","facebook":null,"twitter":null,"accessibility":null,"status":"locked","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2021-01-30 18:26:20","updated_at":"2021-01-30 20:31:11"}],"posts_authors":[{"id":"600d50b3d9877fa6cc16195b","post_id":"600d50b3d9877fa6cc16195a","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"600d50b3d9877fa6cc16195d","post_id":"600d50b3d9877fa6cc16195c","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"600d50b3d9877fa6cc16195f","post_id":"600d50b3d9877fa6cc16195e","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"600d50b3d9877fa6cc161961","post_id":"600d50b3d9877fa6cc161960","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"600d50b3d9877fa6cc161963","post_id":"600d50b3d9877fa6cc161962","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"600d50b3d9877fa6cc161965","post_id":"600d50b3d9877fa6cc161964","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"600d50b3d9877fa6cc161967","post_id":"600d50b3d9877fa6cc161966","author_id":"5951f5fca366002ebd5dbef7","sort_order":0},{"id":"60104cda297b11b3964ca909","post_id":"60104cda297b11b3964ca908","author_id":"1","sort_order":0},{"id":"60104d59297b11b3964ca915","post_id":"60104d59297b11b3964ca914","author_id":"1","sort_order":0},{"id":"60105ed4297b11b3964ca91f","post_id":"60105ed4297b11b3964ca91e","author_id":"1","sort_order":0},{"id":"601281452c15d83646449daa","post_id":"601281442c15d83646449da9","author_id":"1","sort_order":0},{"id":"601281522c15d83646449dae","post_id":"601281522c15d83646449dad","author_id":"1","sort_order":0},{"id":"60132e023d0406908f70f20c","post_id":"60132e023d0406908f70f20b","author_id":"1","sort_order":0},{"id":"60158e543d0406908f70f219","post_id":"60158e543d0406908f70f218","author_id":"1","sort_order":0},{"id":"6015a5c5ffbf7ee2cb67d047","post_id":"60158e543d0406908f70f218","author_id":"6015a471ffbf7ee2cb67d037","sort_order":1},{"id":"6015a5c8ffbf7ee2cb67d049","post_id":"60158e543d0406908f70f218","author_id":"6015a471ffbf7ee2cb67d038","sort_order":2},{"id":"6015a5caffbf7ee2cb67d04b","post_id":"60158e543d0406908f70f218","author_id":"6015a471ffbf7ee2cb67d036","sort_order":3},{"id":"6015a5cbffbf7ee2cb67d04d","post_id":"60158e543d0406908f70f218","author_id":"6015a471ffbf7ee2cb67d035","sort_order":4},{"id":"6015ea0646f2deffd6a28194","post_id":"6015ea0646f2deffd6a28192","author_id":"1","sort_order":0},{"id":"601693da16926135029da162","post_id":"601693da16926135029da161","author_id":"1","sort_order":0},{"id":"6016942c16926135029da16b","post_id":"6016942c16926135029da16a","author_id":"1","sort_order":0},{"id":"6016946c16926135029da174","post_id":"6016946c16926135029da173","author_id":"1","sort_order":0},{"id":"6016949e16926135029da17d","post_id":"6016949e16926135029da17c","author_id":"1","sort_order":0},{"id":"6016c46379f121397cace808","post_id":"6016c46379f121397cace807","author_id":"1","sort_order":0},{"id":"6016c48979f121397cace811","post_id":"6016c48979f121397cace810","author_id":"1","sort_order":0},{"id":"6016c4fc79f121397cace81c","post_id":"6016c4fc79f121397cace81b","author_id":"1","sort_order":0},{"id":"6016c52e79f121397cace825","post_id":"6016c52e79f121397cace824","author_id":"1","sort_order":0},{"id":"6016de0a79f121397cace83f","post_id":"6016de0a79f121397cace83e","author_id":"1","sort_order":0},{"id":"6016dec779f121397cace848","post_id":"6016dec779f121397cace847","author_id":"1","sort_order":0},{"id":"6023b4cfc7acea67e5fd587d","post_id":"6023b3a7c7acea67e5fd5876","author_id":"5951f5fca366002ebd5dbef7","sort_order":0}],"roles":[{"id":"600d50b2d9877fa6cc161901","name":"Administrator","description":"Administrators","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161902","name":"Editor","description":"Editors","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161903","name":"Author","description":"Authors","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161904","name":"Contributor","description":"Contributors","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161905","name":"Owner","description":"Blog Owner","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161906","name":"Admin Integration","description":"External Apps","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161907","name":"DB Backup Integration","description":"Internal DB Backup Client","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161908","name":"Scheduler Integration","description":"Internal Scheduler Client","created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"}],"roles_users":[{"id":"600d50b3d9877fa6cc161959","role_id":"600d50b2d9877fa6cc161903","user_id":"5951f5fca366002ebd5dbef7"},{"id":"600d50b3d9877fa6cc161a50","role_id":"600d50b2d9877fa6cc161905","user_id":"1"},{"id":"6015a471ffbf7ee2cb67d039","role_id":"600d50b2d9877fa6cc161903","user_id":"6015a471ffbf7ee2cb67d035"},{"id":"6015a471ffbf7ee2cb67d03a","role_id":"600d50b2d9877fa6cc161903","user_id":"6015a471ffbf7ee2cb67d036"},{"id":"6015a471ffbf7ee2cb67d03b","role_id":"600d50b2d9877fa6cc161903","user_id":"6015a471ffbf7ee2cb67d037"},{"id":"6015a471ffbf7ee2cb67d03c","role_id":"600d50b2d9877fa6cc161903","user_id":"6015a471ffbf7ee2cb67d038"}],"permissions":[{"id":"600d50b2d9877fa6cc161909","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16190a","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16190b","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16190c","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16190d","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16190e","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16190f","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161910","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161911","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161912","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161913","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161914","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161915","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161916","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161917","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161918","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161919","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16191a","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16191b","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16191c","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16191d","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16191e","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16191f","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161920","name":"Activate themes","object_type":"theme","action_type":"activate","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161921","name":"Upload themes","object_type":"theme","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161922","name":"Download themes","object_type":"theme","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161923","name":"Delete themes","object_type":"theme","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161924","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161925","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161926","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161927","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161928","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161929","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16192a","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16192b","name":"Browse invites","object_type":"invite","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16192c","name":"Read invites","object_type":"invite","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16192d","name":"Edit invites","object_type":"invite","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16192e","name":"Add invites","object_type":"invite","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16192f","name":"Delete invites","object_type":"invite","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161930","name":"Download redirects","object_type":"redirect","action_type":"download","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161931","name":"Upload redirects","object_type":"redirect","action_type":"upload","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161932","name":"Add webhooks","object_type":"webhook","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161933","name":"Edit webhooks","object_type":"webhook","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161934","name":"Delete webhooks","object_type":"webhook","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161935","name":"Browse integrations","object_type":"integration","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161936","name":"Read integrations","object_type":"integration","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161937","name":"Edit integrations","object_type":"integration","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161938","name":"Add integrations","object_type":"integration","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161939","name":"Delete integrations","object_type":"integration","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16193a","name":"Browse API keys","object_type":"api_key","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16193b","name":"Read API keys","object_type":"api_key","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16193c","name":"Edit API keys","object_type":"api_key","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16193d","name":"Add API keys","object_type":"api_key","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16193e","name":"Delete API keys","object_type":"api_key","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16193f","name":"Browse Actions","object_type":"action","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161940","name":"Browse Members","object_type":"member","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161941","name":"Read Members","object_type":"member","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161942","name":"Edit Members","object_type":"member","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161943","name":"Add Members","object_type":"member","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161944","name":"Delete Members","object_type":"member","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161945","name":"Publish posts","object_type":"post","action_type":"publish","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161946","name":"Backup database","object_type":"db","action_type":"backupContent","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161947","name":"Email preview","object_type":"email_preview","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161948","name":"Send test email","object_type":"email_preview","action_type":"sendTestEmail","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161949","name":"Browse emails","object_type":"email","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16194a","name":"Read emails","object_type":"email","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16194b","name":"Retry emails","object_type":"email","action_type":"retry","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16194c","name":"Browse labels","object_type":"label","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16194d","name":"Read labels","object_type":"label","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16194e","name":"Edit labels","object_type":"label","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc16194f","name":"Add labels","object_type":"label","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161950","name":"Delete labels","object_type":"label","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161951","name":"Read member signin urls","object_type":"member_signin_url","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161952","name":"Read identities","object_type":"identity","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161953","name":"Auth Stripe Connect for Members","object_type":"members_stripe_connect","action_type":"auth","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161954","name":"Browse snippets","object_type":"snippet","action_type":"browse","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161955","name":"Read snippets","object_type":"snippet","action_type":"read","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161956","name":"Edit snippets","object_type":"snippet","action_type":"edit","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161957","name":"Add snippets","object_type":"snippet","action_type":"add","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"},{"id":"600d50b2d9877fa6cc161958","name":"Delete snippets","object_type":"snippet","action_type":"destroy","object_id":null,"created_at":"2021-01-24 10:49:22","updated_at":"2021-01-24 10:49:22"}],"permissions_users":[],"permissions_roles":[{"id":"600d50b3d9877fa6cc16196e","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161909"},{"id":"600d50b3d9877fa6cc16196f","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16190a"},{"id":"600d50b3d9877fa6cc161970","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16190b"},{"id":"600d50b3d9877fa6cc161971","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161946"},{"id":"600d50b3d9877fa6cc161972","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16190c"},{"id":"600d50b3d9877fa6cc161973","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16190d"},{"id":"600d50b3d9877fa6cc161974","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16190e"},{"id":"600d50b3d9877fa6cc161975","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16190f"},{"id":"600d50b3d9877fa6cc161976","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161910"},{"id":"600d50b3d9877fa6cc161977","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161911"},{"id":"600d50b3d9877fa6cc16197b","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161945"},{"id":"600d50b3d9877fa6cc161978","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161912"},{"id":"600d50b3d9877fa6cc161979","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161913"},{"id":"600d50b3d9877fa6cc16197a","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161914"},{"id":"600d50b3d9877fa6cc16197c","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161915"},{"id":"600d50b3d9877fa6cc16197d","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161916"},{"id":"600d50b3d9877fa6cc16197e","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161917"},{"id":"600d50b3d9877fa6cc16197f","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161918"},{"id":"600d50b3d9877fa6cc161980","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161919"},{"id":"600d50b3d9877fa6cc161984","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16191d"},{"id":"600d50b3d9877fa6cc161982","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16191b"},{"id":"600d50b3d9877fa6cc161983","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16191c"},{"id":"600d50b3d9877fa6cc161981","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16191a"},{"id":"600d50b3d9877fa6cc161985","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16191e"},{"id":"600d50b3d9877fa6cc161988","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161921"},{"id":"600d50b3d9877fa6cc161986","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16191f"},{"id":"600d50b3d9877fa6cc161989","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161922"},{"id":"600d50b3d9877fa6cc16198a","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161923"},{"id":"600d50b3d9877fa6cc161987","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161920"},{"id":"600d50b3d9877fa6cc16198b","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161924"},{"id":"600d50b3d9877fa6cc16198d","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161926"},{"id":"600d50b3d9877fa6cc16198c","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161925"},{"id":"600d50b3d9877fa6cc16198f","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161928"},{"id":"600d50b3d9877fa6cc16198e","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161927"},{"id":"600d50b3d9877fa6cc161990","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161929"},{"id":"600d50b3d9877fa6cc161991","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16192a"},{"id":"600d50b3d9877fa6cc161992","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16192b"},{"id":"600d50b3d9877fa6cc161996","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16192f"},{"id":"600d50b3d9877fa6cc161994","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16192d"},{"id":"600d50b3d9877fa6cc161995","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16192e"},{"id":"600d50b3d9877fa6cc161993","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16192c"},{"id":"600d50b3d9877fa6cc161997","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161930"},{"id":"600d50b3d9877fa6cc161998","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161931"},{"id":"600d50b3d9877fa6cc161999","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161932"},{"id":"600d50b3d9877fa6cc16199a","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161933"},{"id":"600d50b3d9877fa6cc16199b","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161934"},{"id":"600d50b3d9877fa6cc16199e","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161937"},{"id":"600d50b3d9877fa6cc16199d","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161936"},{"id":"600d50b3d9877fa6cc1619a0","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161939"},{"id":"600d50b3d9877fa6cc16199c","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161935"},{"id":"600d50b3d9877fa6cc16199f","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161938"},{"id":"600d50b3d9877fa6cc1619a1","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16193a"},{"id":"600d50b3d9877fa6cc1619a2","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16193b"},{"id":"600d50b3d9877fa6cc1619a5","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16193e"},{"id":"600d50b3d9877fa6cc1619a3","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16193c"},{"id":"600d50b3d9877fa6cc1619a4","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16193d"},{"id":"600d50b3d9877fa6cc1619a6","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16193f"},{"id":"600d50b3d9877fa6cc1619a7","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161940"},{"id":"600d50b3d9877fa6cc1619aa","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161943"},{"id":"600d50b3d9877fa6cc1619a9","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161942"},{"id":"600d50b3d9877fa6cc1619ab","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161944"},{"id":"600d50b3d9877fa6cc1619a8","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161941"},{"id":"600d50b3d9877fa6cc1619ac","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16194c"},{"id":"600d50b3d9877fa6cc1619ad","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16194d"},{"id":"600d50b3d9877fa6cc1619ae","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16194e"},{"id":"600d50b3d9877fa6cc1619af","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16194f"},{"id":"600d50b3d9877fa6cc1619b0","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161950"},{"id":"600d50b3d9877fa6cc1619b1","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161947"},{"id":"600d50b3d9877fa6cc1619b2","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161948"},{"id":"600d50b3d9877fa6cc1619b3","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161949"},{"id":"600d50b3d9877fa6cc1619b4","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16194a"},{"id":"600d50b3d9877fa6cc1619b5","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc16194b"},{"id":"600d50b3d9877fa6cc1619b6","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161951"},{"id":"600d50b3d9877fa6cc1619b7","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161954"},{"id":"600d50b3d9877fa6cc1619ba","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161957"},{"id":"600d50b3d9877fa6cc1619b9","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161956"},{"id":"600d50b3d9877fa6cc1619b8","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161955"},{"id":"600d50b3d9877fa6cc1619bb","role_id":"600d50b2d9877fa6cc161901","permission_id":"600d50b2d9877fa6cc161958"},{"id":"600d50b3d9877fa6cc1619bc","role_id":"600d50b2d9877fa6cc161907","permission_id":"600d50b2d9877fa6cc161909"},{"id":"600d50b3d9877fa6cc1619bd","role_id":"600d50b2d9877fa6cc161907","permission_id":"600d50b2d9877fa6cc16190a"},{"id":"600d50b3d9877fa6cc1619be","role_id":"600d50b2d9877fa6cc161907","permission_id":"600d50b2d9877fa6cc16190b"},{"id":"600d50b3d9877fa6cc1619bf","role_id":"600d50b2d9877fa6cc161907","permission_id":"600d50b2d9877fa6cc161946"},{"id":"600d50b3d9877fa6cc1619c0","role_id":"600d50b2d9877fa6cc161908","permission_id":"600d50b2d9877fa6cc161945"},{"id":"600d50b3d9877fa6cc1619c1","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16190c"},{"id":"600d50b3d9877fa6cc1619c2","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16190d"},{"id":"600d50b3d9877fa6cc1619c4","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16190f"},{"id":"600d50b3d9877fa6cc1619c3","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16190e"},{"id":"600d50b3d9877fa6cc1619c7","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161912"},{"id":"600d50b3d9877fa6cc1619c5","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161910"},{"id":"600d50b3d9877fa6cc1619ca","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161945"},{"id":"600d50b3d9877fa6cc1619c8","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161913"},{"id":"600d50b3d9877fa6cc1619c9","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161914"},{"id":"600d50b3d9877fa6cc1619c6","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161911"},{"id":"600d50b3d9877fa6cc1619cb","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161915"},{"id":"600d50b3d9877fa6cc1619cc","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161916"},{"id":"600d50b3d9877fa6cc1619cd","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161917"},{"id":"600d50b3d9877fa6cc1619ce","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161918"},{"id":"600d50b3d9877fa6cc1619cf","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161919"},{"id":"600d50b3d9877fa6cc1619d2","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16191c"},{"id":"600d50b3d9877fa6cc1619d1","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16191b"},{"id":"600d50b3d9877fa6cc1619d0","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16191a"},{"id":"600d50b3d9877fa6cc1619d3","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16191d"},{"id":"600d50b3d9877fa6cc1619d4","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16191e"},{"id":"600d50b3d9877fa6cc1619d8","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161922"},{"id":"600d50b3d9877fa6cc1619d9","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161923"},{"id":"600d50b3d9877fa6cc1619d6","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161920"},{"id":"600d50b3d9877fa6cc1619d5","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16191f"},{"id":"600d50b3d9877fa6cc1619d7","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161921"},{"id":"600d50b3d9877fa6cc1619da","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161924"},{"id":"600d50b3d9877fa6cc1619de","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161928"},{"id":"600d50b3d9877fa6cc1619dc","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161926"},{"id":"600d50b3d9877fa6cc1619dd","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161927"},{"id":"600d50b3d9877fa6cc1619db","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161925"},{"id":"600d50b3d9877fa6cc1619df","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161929"},{"id":"600d50b3d9877fa6cc1619e0","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16192a"},{"id":"600d50b3d9877fa6cc1619e1","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16192b"},{"id":"600d50b3d9877fa6cc1619e5","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16192f"},{"id":"600d50b3d9877fa6cc1619e2","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16192c"},{"id":"600d50b3d9877fa6cc1619e4","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16192e"},{"id":"600d50b3d9877fa6cc1619e3","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16192d"},{"id":"600d50b3d9877fa6cc1619e6","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161930"},{"id":"600d50b3d9877fa6cc1619e7","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161931"},{"id":"600d50b3d9877fa6cc1619e8","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161932"},{"id":"600d50b3d9877fa6cc1619e9","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161933"},{"id":"600d50b3d9877fa6cc1619ea","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161934"},{"id":"600d50b3d9877fa6cc1619eb","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16193f"},{"id":"600d50b3d9877fa6cc1619ec","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161940"},{"id":"600d50b3d9877fa6cc1619ed","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161941"},{"id":"600d50b3d9877fa6cc1619ee","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161942"},{"id":"600d50b3d9877fa6cc1619ef","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161943"},{"id":"600d50b3d9877fa6cc1619f0","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161944"},{"id":"600d50b3d9877fa6cc1619f4","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16194f"},{"id":"600d50b3d9877fa6cc1619f2","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16194d"},{"id":"600d50b3d9877fa6cc1619f3","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16194e"},{"id":"600d50b3d9877fa6cc1619f1","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16194c"},{"id":"600d50b3d9877fa6cc1619f5","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161950"},{"id":"600d50b3d9877fa6cc1619f6","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161947"},{"id":"600d50b3d9877fa6cc1619f7","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161948"},{"id":"600d50b3d9877fa6cc1619f8","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161949"},{"id":"600d50b3d9877fa6cc1619f9","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16194a"},{"id":"600d50b3d9877fa6cc1619fa","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc16194b"},{"id":"600d50b3d9877fa6cc1619fb","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161954"},{"id":"600d50b3d9877fa6cc1619fd","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161956"},{"id":"600d50b3d9877fa6cc1619fe","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161957"},{"id":"600d50b3d9877fa6cc1619fc","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161955"},{"id":"600d50b3d9877fa6cc1619ff","role_id":"600d50b2d9877fa6cc161906","permission_id":"600d50b2d9877fa6cc161958"},{"id":"600d50b3d9877fa6cc161a00","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16190d"},{"id":"600d50b3d9877fa6cc161a01","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16190e"},{"id":"600d50b3d9877fa6cc161a02","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16190f"},{"id":"600d50b3d9877fa6cc161a03","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161910"},{"id":"600d50b3d9877fa6cc161a07","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161914"},{"id":"600d50b3d9877fa6cc161a08","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161945"},{"id":"600d50b3d9877fa6cc161a05","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161912"},{"id":"600d50b3d9877fa6cc161a04","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161911"},{"id":"600d50b3d9877fa6cc161a06","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161913"},{"id":"600d50b3d9877fa6cc161a09","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161915"},{"id":"600d50b3d9877fa6cc161a0a","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161916"},{"id":"600d50b3d9877fa6cc161a0b","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161918"},{"id":"600d50b3d9877fa6cc161a0d","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16191a"},{"id":"600d50b3d9877fa6cc161a0f","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16191c"},{"id":"600d50b3d9877fa6cc161a0e","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16191b"},{"id":"600d50b3d9877fa6cc161a10","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16191d"},{"id":"600d50b3d9877fa6cc161a0c","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161919"},{"id":"600d50b3d9877fa6cc161a11","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161924"},{"id":"600d50b3d9877fa6cc161a12","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161925"},{"id":"600d50b3d9877fa6cc161a13","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161926"},{"id":"600d50b3d9877fa6cc161a14","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161927"},{"id":"600d50b3d9877fa6cc161a15","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161928"},{"id":"600d50b3d9877fa6cc161a16","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161929"},{"id":"600d50b3d9877fa6cc161a17","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16192a"},{"id":"600d50b3d9877fa6cc161a18","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16192b"},{"id":"600d50b3d9877fa6cc161a1a","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16192d"},{"id":"600d50b3d9877fa6cc161a19","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16192c"},{"id":"600d50b3d9877fa6cc161a1c","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16192f"},{"id":"600d50b3d9877fa6cc161a1b","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16192e"},{"id":"600d50b3d9877fa6cc161a1d","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16191e"},{"id":"600d50b3d9877fa6cc161a1e","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161947"},{"id":"600d50b3d9877fa6cc161a1f","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161948"},{"id":"600d50b3d9877fa6cc161a20","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161949"},{"id":"600d50b3d9877fa6cc161a21","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16194a"},{"id":"600d50b3d9877fa6cc161a22","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc16194b"},{"id":"600d50b3d9877fa6cc161a23","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161954"},{"id":"600d50b3d9877fa6cc161a26","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161957"},{"id":"600d50b3d9877fa6cc161a24","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161955"},{"id":"600d50b3d9877fa6cc161a25","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161956"},{"id":"600d50b3d9877fa6cc161a27","role_id":"600d50b2d9877fa6cc161902","permission_id":"600d50b2d9877fa6cc161958"},{"id":"600d50b3d9877fa6cc161a28","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161910"},{"id":"600d50b3d9877fa6cc161a29","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161911"},{"id":"600d50b3d9877fa6cc161a2a","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161913"},{"id":"600d50b3d9877fa6cc161a2b","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161915"},{"id":"600d50b3d9877fa6cc161a2c","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161916"},{"id":"600d50b3d9877fa6cc161a2d","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161918"},{"id":"600d50b3d9877fa6cc161a2e","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161919"},{"id":"600d50b3d9877fa6cc161a30","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc16191c"},{"id":"600d50b3d9877fa6cc161a2f","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc16191a"},{"id":"600d50b3d9877fa6cc161a31","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161924"},{"id":"600d50b3d9877fa6cc161a32","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161925"},{"id":"600d50b3d9877fa6cc161a33","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc16192a"},{"id":"600d50b3d9877fa6cc161a34","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc16191e"},{"id":"600d50b3d9877fa6cc161a35","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161947"},{"id":"600d50b3d9877fa6cc161a36","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc16194a"},{"id":"600d50b3d9877fa6cc161a37","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161954"},{"id":"600d50b3d9877fa6cc161a38","role_id":"600d50b2d9877fa6cc161903","permission_id":"600d50b2d9877fa6cc161955"},{"id":"600d50b3d9877fa6cc161a39","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161910"},{"id":"600d50b3d9877fa6cc161a3b","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161913"},{"id":"600d50b3d9877fa6cc161a3a","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161911"},{"id":"600d50b3d9877fa6cc161a3c","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161915"},{"id":"600d50b3d9877fa6cc161a3d","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161916"},{"id":"600d50b3d9877fa6cc161a3e","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161918"},{"id":"600d50b3d9877fa6cc161a3f","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161919"},{"id":"600d50b3d9877fa6cc161a40","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc16191a"},{"id":"600d50b3d9877fa6cc161a41","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161924"},{"id":"600d50b3d9877fa6cc161a42","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161925"},{"id":"600d50b3d9877fa6cc161a43","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc16192a"},{"id":"600d50b3d9877fa6cc161a44","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc16191e"},{"id":"600d50b3d9877fa6cc161a45","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161947"},{"id":"600d50b3d9877fa6cc161a46","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc16194a"},{"id":"600d50b3d9877fa6cc161a47","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161954"},{"id":"600d50b3d9877fa6cc161a48","role_id":"600d50b2d9877fa6cc161904","permission_id":"600d50b2d9877fa6cc161955"}],"permissions_apps":[],"settings":[{"id":"600d50b3d9877fa6cc161a51","group":"core","key":"db_hash","value":"d5f0d810-bf85-4355-8bda-fdb6c000897d","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b3d9877fa6cc161a52","group":"core","key":"routes_hash","value":"427f176220508db6c8ccafbd281474cc","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-02-15 09:38:53"},{"id":"600d50b3d9877fa6cc161a53","group":"core","key":"next_update_check","value":"1613391316","type":"number","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-02-14 12:15:16"},{"id":"600d50b3d9877fa6cc161a54","group":"core","key":"notifications","value":"[{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"67da9560-6cb9-11eb-b7f7-a9dd0f486f24\",\"custom\":false,\"createdAt\":\"2021-02-11T22:35:13.000Z\",\"type\":\"info\",\"top\":false,\"message\":\"Ghost <a href=\\\"https://github.com/TryGhost/Ghost/releases\\\">3.41.5</a> has been released, <a href=\\\"https://ghost.org/update/?v=3.40.5\\\">click here</a> to upgrade.\",\"seen\":false,\"addedAt\":\"2021-02-14T12:15:16.162Z\"}]","type":"array","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-02-14 12:15:16"},{"id":"600d50b3d9877fa6cc161a55","group":"core","key":"session_secret","value":"355510425afb2be402b4e77982980b01324ff183176a957223fe35e7eaf22797","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b3d9877fa6cc161a56","group":"core","key":"theme_session_secret","value":"431ff025d000ce93de9398a3f18e20f34d039b4d44d1864d5c381adfc7d1e612","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b3d9877fa6cc161a57","group":"core","key":"ghost_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAIvBP9jB/OJQJnKdRgb7p9VSoWuXZNwORoZsBIIBSkafWA/eCbBG8YdTPIXXhAU1\n5eCbw/07sDkEiVQncor94JMM9fjEZSe/8FNm34D1ARA7wEkhjjNK5NnapDHunn52OomGlSKT\nwDLtUZQkKRtRZEn1kpwWoJtB3U2PI7zfwa4pAgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b3d9877fa6cc161a58","group":"core","key":"ghost_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQCLwT/YwfziUCZynUYG+6fVUqFrl2TcDkaGbASCAUpGn1gP3gmwRvGHUzyF\n14QFNeXgm8P9O7A5BIlUJ3KK/eCTDPX4xGUnv/BTZt+A9QEQO8BJIY4zSuTZ2qQx7p5+djqJ\nhpUik8Ay7VGUJCkbUWRJ9ZKcFqCbQd1NjyO838GuKQIDAQABAoGAQJ/HB1OEvZ30eXFybU43\naLSCAj+Kmxtaz1PprbgtAYUzcnrpHgNgMoRx6y4iVUp8FyXQNixAq80GN8zZ8Z2+F3H5MXMW\nnB/oUrIBXgcXucn30Q9RtNZD9HwgbKr7UyqPML+AZqsJiiosk3te+bHz6yFwg/xjZYpTnfs8\nOvyZFAECQQDOyuKyjjTlByyRwQJZX8Eu2agHG/aGM+V5VrarIGc8LsifWyI1plcOD+36E456\nNIciTgTvzPp58x2GyUcS88GpAkEArQKnM/VZZx4lWfaUf/VWKm2V5p1aEqERKxZyth22Zy15\nILojrsOTLP34lALn9JQZYh4IXX7Oy+i7aIruBGNYgQJAEfHLIEF015b6yB8ejBDiG6Wpjgxg\nJR8lv5TFvy3Np4xLvoBTBKLNlRvOw8+kongibdilVwXLin+NRV/7+eoLGQJAfyZ1Bd2qP/vK\nzaxIBSaklfgF8//u48QWHwmXcrqxhHDKFcBXWyiHMMjSeM0N9hUl9pNF6Ji6mOfJXBLGzNjK\ngQJBAJwtqUr5PAbcrDAzyHM2XJB74GrIUu8ppT2e0wl3OTZmzO7I0CbGM7UoNutW53jtP8po\neXwL1DdBD+fahmaRKmA=\n-----END RSA PRIVATE KEY-----\n","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a59","group":"core","key":"members_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAMTZYUNsy4WAiGpdJDm3XNGVNRGxRCDIpCA+4JzxVB7FvRyWjxsyLxSQjMIpqyLK\nZ+NWWU5cOvHQ2fCBKJ3kSiyHwvW+zpQwCl1vksh6bBlAa6tOoSB3M6Z6ChV8ADHs1ll/mI1N\nJFU5KbN69vqz+C1+0MWxqpM4Wa7FiyKOTOr/AgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a5a","group":"core","key":"members_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICXwIBAAKBgQDE2WFDbMuFgIhqXSQ5t1zRlTURsUQgyKQgPuCc8VQexb0clo8bMi8UkIzC\nKasiymfjVllOXDrx0NnwgSid5Eosh8L1vs6UMApdb5LIemwZQGurTqEgdzOmegoVfAAx7NZZ\nf5iNTSRVOSmzevb6s/gtftDFsaqTOFmuxYsijkzq/wIDAQABAoGBAAwXtovn0RDgdoDiO+l3\nxDHz0pDFrQO+j6aTdkTt5lcFmrp43U20ZYQD5UHAQY0flgY3NcFElTJpvBm0NYSNk6jRAH19\n6M62QmLuPXTvb/QzxKvpor1J3CIFDrQvQMvuBnbNzTa0D97yu9LMPjkDi6FYi3qGgQKEgD81\neI/jVGFBAkEA8J4SXql8Yn3KNY8L8HQNJ1D4ch6dKGCxQ9SC3WTGnX+cOBlg1av8tm5m+EgO\n8gGuIydQgiWkaGr20Vfj0N6d7wJBANFu/7W2qr9c78TdAEP3j7174SIIPZQrmvhbZDQ6T4ir\nQcbsYi4N9u4k4e9aBDCQEPXe7gBeFHyV18PjjFKWk/ECQQDOv4QZQphWKK+vBZLEsXL77V8M\n77EqGKs4FUm84fKnMhcRPP0vm/Aw8PwZKhFtcHQoUIekzKNP9VjO2C4wMpiRAkEADIiKAQPn\ngAA90RgwteCQ15QcSv8XQFDDu20st/ttWw50p0TqMzteta27X6mRap6UhUJMF/WJYFNPUEfD\n1AVy4QJBAImyWeVN18GzHAPBUDJfi8Z/N2gwxK7IywFcQ+c+iwWO5lu8G2lTAGtCYRYLzlGn\n2UbQErm8GKMaWry0+WvAMA4=\n-----END RSA PRIVATE KEY-----\n","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a5b","group":"core","key":"members_email_auth_secret","value":"bca630edba6dab83d77a3e3de1e7734a17481bd656645ac0ccdd63384699f7104b53fe6fc9fb1f10c65d7988c25b3a910527c92b3e1f194f7f1296aa5c056def","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a5c","group":"core","key":"members_stripe_webhook_id","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a5d","group":"core","key":"members_stripe_webhook_secret","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a5e","group":"site","key":"title","value":"Speckle","type":"string","flags":"PUBLIC","created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 11:08:48"},{"id":"600d50b4d9877fa6cc161a5f","group":"site","key":"description","value":"Digital infrastructure for the built environment","type":"string","flags":"PUBLIC","created_at":"2021-01-24 10:49:24","updated_at":"2021-01-28 14:46:49"},{"id":"600d50b4d9877fa6cc161a60","group":"site","key":"logo","value":"/content/images/2021/01/logo_big.png","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:35:10"},{"id":"600d50b4d9877fa6cc161a61","group":"site","key":"cover_image","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-28 19:11:40"},{"id":"600d50b4d9877fa6cc161a62","group":"site","key":"icon","value":"/content/images/2021/01/logo_big@0.5x.png","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-26 18:34:48"},{"id":"600d50b4d9877fa6cc161a63","group":"site","key":"accent_color","value":"","type":"string","flags":"PUBLIC","created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a64","group":"site","key":"lang","value":"en","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a65","group":"site","key":"timezone","value":"Etc/UTC","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a66","group":"site","key":"codeinjection_head","value":"<!--\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism-okaidia.min.css\" crossorigin=\"anonymous\" />\n-->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism.min.css\" integrity=\"sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==\" crossorigin=\"anonymous\" />\n","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-02-02 10:44:47"},{"id":"600d50b4d9877fa6cc161a67","group":"site","key":"codeinjection_foot","value":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/prism.min.js\" integrity=\"sha512-YBk7HhgDZvBxmtOfUdvX0z8IH2d10Hp3aEygaMNhtF8fSOvBZ16D/1bXZTJV6ndk/L/DlXxYStP8jrF77v2MIg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/components/prism-clike.min.js\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/components/prism-csharp.min.js\"></script>","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-02-02 10:21:43"},{"id":"600d50b4d9877fa6cc161a68","group":"site","key":"facebook","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:40:49"},{"id":"600d50b4d9877fa6cc161a69","group":"site","key":"twitter","value":"@specklesystems","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:40:45"},{"id":"600d50b4d9877fa6cc161a6a","group":"site","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"/\"},{\"label\":\"Tag\",\"url\":\"/tag/getting-started/\"},{\"label\":\"Author\",\"url\":\"/author/ghost/\"},{\"label\":\"Help\",\"url\":\"https://ghost.org/docs/\"}]","type":"array","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:35:10"},{"id":"600d50b4d9877fa6cc161a6b","group":"site","key":"secondary_navigation","value":"[]","type":"array","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a6c","group":"site","key":"meta_title","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a6d","group":"site","key":"meta_description","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a6e","group":"site","key":"og_image","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a6f","group":"site","key":"og_title","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a70","group":"site","key":"og_description","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a71","group":"site","key":"twitter_image","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a72","group":"site","key":"twitter_title","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a73","group":"site","key":"twitter_description","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a74","group":"theme","key":"active_theme","value":"starter","type":"string","flags":"RO","created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:52:30"},{"id":"600d50b4d9877fa6cc161a75","group":"private","key":"is_private","value":"false","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a76","group":"private","key":"password","value":"","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a77","group":"private","key":"public_hash","value":"74ac3b16c94da3a72656bb7337f22d","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a78","group":"members","key":"default_content_visibility","value":"public","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a79","group":"members","key":"members_allow_free_signup","value":"true","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a7a","group":"members","key":"members_from_address","value":"noreply","type":"string","flags":"RO","created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a7b","group":"members","key":"members_support_address","value":"noreply","type":"string","flags":"PUBLIC,RO","created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a7c","group":"members","key":"members_reply_address","value":"newsletter","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a7d","group":"members","key":"members_free_signup_redirect","value":"/","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a7e","group":"members","key":"members_paid_signup_redirect","value":"/","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a7f","group":"members","key":"stripe_product_name","value":"Ghost Subscription","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a80","group":"members","key":"stripe_secret_key","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a81","group":"members","key":"stripe_publishable_key","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a82","group":"members","key":"stripe_plans","value":"[{\"name\":\"Monthly\",\"currency\":\"usd\",\"interval\":\"month\",\"amount\":500},{\"name\":\"Yearly\",\"currency\":\"usd\",\"interval\":\"year\",\"amount\":5000}]","type":"array","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a83","group":"members","key":"stripe_connect_publishable_key","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a84","group":"members","key":"stripe_connect_secret_key","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a85","group":"members","key":"stripe_connect_livemode","value":null,"type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a86","group":"members","key":"stripe_connect_display_name","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a87","group":"members","key":"stripe_connect_account_id","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a88","group":"portal","key":"portal_name","value":"true","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a89","group":"portal","key":"portal_button","value":"true","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a8a","group":"portal","key":"portal_plans","value":"[\"free\",\"monthly\",\"yearly\"]","type":"array","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:35:11"},{"id":"600d50b4d9877fa6cc161a8b","group":"portal","key":"portal_button_style","value":"icon-and-text","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a8c","group":"portal","key":"portal_button_icon","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a8d","group":"portal","key":"portal_button_signup_text","value":"Subscribe","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a8e","group":"email","key":"mailgun_domain","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a8f","group":"email","key":"mailgun_api_key","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a90","group":"email","key":"mailgun_base_url","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a91","group":"email","key":"email_track_opens","value":"true","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a92","group":"amp","key":"amp","value":"true","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a93","group":"amp","key":"amp_gtag_id","value":null,"type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a94","group":"labs","key":"labs","value":"{\"members\":false}","type":"object","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:43:14"},{"id":"600d50b4d9877fa6cc161a95","group":"slack","key":"slack","value":"[]","type":"array","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:35:11"},{"id":"600d50b4d9877fa6cc161a96","group":"unsplash","key":"unsplash","value":"{\"isActive\":true}","type":"object","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 13:35:11"},{"id":"600d50b4d9877fa6cc161a97","group":"views","key":"shared_views","value":"[{\"name\":\"Careers\",\"route\":\"posts\",\"color\":\"purple\",\"filter\":{\"tag\":\"careers\"}},{\"name\":\"Developers\",\"route\":\"posts\",\"color\":\"blue\",\"filter\":{\"tag\":\"developers\"}},{\"name\":\"Blog\",\"route\":\"posts\",\"color\":\"purple\",\"filter\":{\"tag\":\"blog\"}},{\"name\":\"Features\",\"route\":\"posts\",\"color\":\"yellow\",\"filter\":{\"tag\":\"features\"}}]","type":"array","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-02-15 11:21:54"},{"id":"600d50b4d9877fa6cc161a98","group":"newsletter","key":"newsletter_show_badge","value":"true","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a99","group":"newsletter","key":"newsletter_show_header","value":"true","type":"boolean","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a9a","group":"newsletter","key":"newsletter_body_font_category","value":"sans_serif","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"},{"id":"600d50b4d9877fa6cc161a9b","group":"newsletter","key":"newsletter_footer_content","value":"","type":"string","flags":null,"created_at":"2021-01-24 10:49:24","updated_at":"2021-01-24 10:49:24"}],"tags":[{"id":"60104cd0297b11b3964ca906","name":"Features","slug":"features","description":"More than just interoperability: collaboration, versioning and reporting - Speckle is the ideal base for your company's digital transformation.","feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2021-01-26 17:09:36","updated_at":"2021-02-15 09:36:18"},{"id":"6012aa782c15d83646449dbd","name":"Developers","slug":"developers","description":"Speckle is a modern, cloud-based developer platform.","feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2021-01-28 12:13:44","updated_at":"2021-02-06 10:11:48"},{"id":"6015c2fbffbf7ee2cb67d05f","name":"Careers","slug":"careers","description":"Want to work in public, on open source tech? We are looking for smart and talented individuals who believe in our vision and want to change AEC, for the better!","feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2021-01-30 20:35:07","updated_at":"2021-01-31 12:16:13"},{"id":"6016938e16926135029da15f","name":"Blog","slug":"blog","description":"The Press Room: news and updates from Speckle HQ","feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2021-01-31 11:25:02","updated_at":"2021-02-06 10:12:02"}],"posts_tags":[{"id":"60104ce9297b11b3964ca90c","post_id":"60104cda297b11b3964ca908","tag_id":"60104cd0297b11b3964ca906","sort_order":0},{"id":"60104db1297b11b3964ca91a","post_id":"60104d59297b11b3964ca914","tag_id":"60104cd0297b11b3964ca906","sort_order":0},{"id":"60105ef5297b11b3964ca924","post_id":"60105ed4297b11b3964ca91e","tag_id":"60104cd0297b11b3964ca906","sort_order":0},{"id":"601281682c15d83646449db3","post_id":"601281522c15d83646449dad","tag_id":"60104cd0297b11b3964ca906","sort_order":0},{"id":"6012b2062c15d83646449dc2","post_id":"600d50b3d9877fa6cc161960","tag_id":"6012aa782c15d83646449dbd","sort_order":0},{"id":"6012b2112c15d83646449dc4","post_id":"600d50b3d9877fa6cc16195e","tag_id":"6012aa782c15d83646449dbd","sort_order":0},{"id":"6012b2232c15d83646449dc6","post_id":"600d50b3d9877fa6cc16195c","tag_id":"6012aa782c15d83646449dbd","sort_order":0},{"id":"6012b9a42c15d83646449dca","post_id":"600d50b3d9877fa6cc16195a","tag_id":"60104cd0297b11b3964ca906","sort_order":0},{"id":"60130e6c3d0406908f70f207","post_id":"601281442c15d83646449da9","tag_id":"6012aa782c15d83646449dbd","sort_order":0},{"id":"6015c324ffbf7ee2cb67d061","post_id":"60132e023d0406908f70f20b","tag_id":"6015c2fbffbf7ee2cb67d05f","sort_order":0},{"id":"6015ea0646f2deffd6a28193","post_id":"6015ea0646f2deffd6a28192","tag_id":"6015c2fbffbf7ee2cb67d05f","sort_order":0},{"id":"6016941a16926135029da167","post_id":"601693da16926135029da161","tag_id":"6016938e16926135029da15f","sort_order":0},{"id":"6016944d16926135029da170","post_id":"6016942c16926135029da16a","tag_id":"6016938e16926135029da15f","sort_order":0},{"id":"6016947d16926135029da179","post_id":"6016946c16926135029da173","tag_id":"6016938e16926135029da15f","sort_order":0},{"id":"601694be16926135029da182","post_id":"6016949e16926135029da17c","tag_id":"6016938e16926135029da15f","sort_order":0},{"id":"6016c46f79f121397cace80b","post_id":"6016c46379f121397cace807","tag_id":"6016938e16926135029da15f","sort_order":0},{"id":"6016c49679f121397cace816","post_id":"6016c48979f121397cace810","tag_id":"6016938e16926135029da15f","sort_order":0},{"id":"6016c50d79f121397cace821","post_id":"6016c4fc79f121397cace81b","tag_id":"6016938e16926135029da15f","sort_order":0},{"id":"6016c53f79f121397cace82a","post_id":"6016c52e79f121397cace824","tag_id":"6016938e16926135029da15f","sort_order":0}],"apps":[],"app_settings":[],"app_fields":[],"invites":[],"brute":[{"key":"oHUubZQTM66eOWJCFaoi+8dO/eXPG5zwBOW8P5YAuKM=","firstRequest":1611486528252,"lastRequest":1611486528252,"lifetime":1611490128255,"count":1}],"webhooks":[],"integrations":[{"id":"600d50b3d9877fa6cc161968","type":"builtin","name":"Zapier","slug":"zapier","icon_image":null,"description":"Built-in Zapier integration","created_at":"2021-01-24 10:49:23","updated_at":"2021-01-24 10:49:23"},{"id":"600d50b3d9877fa6cc16196a","type":"internal","name":"Ghost Backup","slug":"ghost-backup","icon_image":null,"description":"Internal DB Backup integration","created_at":"2021-01-24 10:49:23","updated_at":"2021-01-24 10:49:23"},{"id":"600d50b3d9877fa6cc16196c","type":"internal","name":"Ghost Scheduler","slug":"ghost-scheduler","icon_image":null,"description":"Internal Scheduler integration","created_at":"2021-01-24 10:49:23","updated_at":"2021-01-24 10:49:23"}],"api_keys":[{"id":"600d50b3d9877fa6cc161969","type":"admin","secret":"28ec60a2e0c87eb97a10505a54a3180522adc534772197d11a25a603ee615856","role_id":"600d50b2d9877fa6cc161906","integration_id":"600d50b3d9877fa6cc161968","user_id":null,"last_seen_at":null,"last_seen_version":null,"created_at":1611485363219,"updated_at":1611485363219},{"id":"600d50b3d9877fa6cc16196b","type":"admin","secret":"87bc67df7c125e735f1af0e6135f27e17efdad8d7facc02dfb1dd53d121ca345","role_id":"600d50b2d9877fa6cc161907","integration_id":"600d50b3d9877fa6cc16196a","user_id":null,"last_seen_at":null,"last_seen_version":null,"created_at":1611485363228,"updated_at":1611485363228},{"id":"600d50b3d9877fa6cc16196d","type":"admin","secret":"e22dee33435eac07c6c228307e3ab22582e4ffda566a736444e7cdccc11dfe97","role_id":"600d50b2d9877fa6cc161908","integration_id":"600d50b3d9877fa6cc16196c","user_id":null,"last_seen_at":null,"last_seen_version":null,"created_at":1611485363234,"updated_at":1611485363234},{"id":"60130c2e3d0406908f70f1f1","type":"admin","secret":"7622f1e4bededc8a9038ad440880201e94c5ab4ad1920fe9c3eb2d347c68969a","role_id":"600d50b2d9877fa6cc161906","integration_id":null,"user_id":"1","last_seen_at":null,"last_seen_version":null,"created_at":1611861038685,"updated_at":1611861038685}],"members":[],"labels":[],"members_labels":[],"members_stripe_customers":[],"members_stripe_customers_subscriptions":[],"actions":[{"id":"600d7dc4297b11b3964ca900","resource_id":"600d7dc4297b11b3964ca8fd","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-24 14:01:40"},{"id":"600d7dcb297b11b3964ca902","resource_id":"600d7dc4297b11b3964ca8fd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-24 14:01:47"},{"id":"600d7dd4297b11b3964ca903","resource_id":"600d7dc4297b11b3964ca8fd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-24 14:01:56"},{"id":"600d7e79297b11b3964ca904","resource_id":"600d7dc4297b11b3964ca8fd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-24 14:04:41"},{"id":"60104cd0297b11b3964ca907","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-26 17:09:36"},{"id":"60104cda297b11b3964ca90b","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-26 17:09:46"},{"id":"60104ce9297b11b3964ca90d","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:10:01"},{"id":"60104cf5297b11b3964ca90e","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:10:13"},{"id":"60104d0a297b11b3964ca90f","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:10:34"},{"id":"60104d0d297b11b3964ca910","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:10:37"},{"id":"60104d1e297b11b3964ca912","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:10:54"},{"id":"60104d46297b11b3964ca913","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:11:34"},{"id":"60104d59297b11b3964ca917","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-26 17:11:53"},{"id":"60104d65297b11b3964ca919","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:12:05"},{"id":"60104db1297b11b3964ca91b","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:13:21"},{"id":"60104db9297b11b3964ca91c","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:13:29"},{"id":"60104dbd297b11b3964ca91d","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 17:13:33"},{"id":"60105ed4297b11b3964ca921","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-26 18:26:28"},{"id":"60105edd297b11b3964ca923","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:26:37"},{"id":"60105ef5297b11b3964ca925","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:27:01"},{"id":"60105efa297b11b3964ca926","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:27:06"},{"id":"60105f21297b11b3964ca927","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:27:45"},{"id":"60105f24297b11b3964ca928","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:27:48"},{"id":"60105f38297b11b3964ca929","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:28:08"},{"id":"60105f7a297b11b3964ca92a","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:29:14"},{"id":"6010637f297b11b3964ca92b","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:46:23"},{"id":"601063e3297b11b3964ca92c","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:48:03"},{"id":"601064f1297b11b3964ca92d","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:52:33"},{"id":"601064f6297b11b3964ca92e","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:52:38"},{"id":"60106517297b11b3964ca92f","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:53:11"},{"id":"6010652a297b11b3964ca930","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-26 18:53:30"},{"id":"601170de297b11b3964ca931","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-27 13:55:42"},{"id":"6011945475976235a5f23baa","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-27 16:27:00"},{"id":"6011bdb32c15d83646449d8f","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-27 19:23:31"},{"id":"6011bff32c15d83646449d91","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-27 19:33:07"},{"id":"6011c0032c15d83646449d93","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-27 19:33:23"},{"id":"6011e3142c15d83646449d95","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-27 22:03:00"},{"id":"6011e6692c15d83646449d96","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-27 22:17:13"},{"id":"6011e68f2c15d83646449d97","resource_id":"600d7dc4297b11b3964ca8fd","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2021-01-27 22:17:51"},{"id":"601201322c15d83646449d99","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:11:30"},{"id":"601201812c15d83646449d9b","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:12:49"},{"id":"601205fc2c15d83646449d9c","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:31:56"},{"id":"601207312c15d83646449d9e","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:37:05"},{"id":"601209312c15d83646449da0","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:45:37"},{"id":"601209382c15d83646449da2","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:45:44"},{"id":"601209922c15d83646449da4","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:47:14"},{"id":"60120a0f2c15d83646449da6","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 00:49:19"},{"id":"601210c32c15d83646449da7","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 01:17:55"},{"id":"601210e02c15d83646449da8","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 01:18:24"},{"id":"601281452c15d83646449dac","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-28 09:17:57"},{"id":"601281522c15d83646449db0","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-28 09:18:10"},{"id":"6012815d2c15d83646449db2","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 09:18:21"},{"id":"601281682c15d83646449db4","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 09:18:32"},{"id":"6012817f2c15d83646449db5","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 09:18:55"},{"id":"601281d12c15d83646449db6","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 09:20:17"},{"id":"601285962c15d83646449db7","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 09:36:22"},{"id":"6012923a2c15d83646449db8","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 10:30:18"},{"id":"6012923f2c15d83646449db9","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 10:30:23"},{"id":"6012925c2c15d83646449dba","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 10:30:52"},{"id":"6012a92d2c15d83646449dbc","resource_id":"600d50b2d9877fa6cc161900","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:08:13"},{"id":"6012aa782c15d83646449dbe","resource_id":"6012aa782c15d83646449dbd","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-28 12:13:44"},{"id":"6012aaa32c15d83646449dbf","resource_id":"600d50b3d9877fa6cc161966","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:14:27"},{"id":"6012aab72c15d83646449dc0","resource_id":"600d50b3d9877fa6cc161964","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:14:47"},{"id":"6012aad72c15d83646449dc1","resource_id":"600d50b3d9877fa6cc161962","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:15:19"},{"id":"6012b2072c15d83646449dc3","resource_id":"600d50b3d9877fa6cc161960","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:45:59"},{"id":"6012b2112c15d83646449dc5","resource_id":"600d50b3d9877fa6cc16195e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:46:09"},{"id":"6012b2232c15d83646449dc7","resource_id":"600d50b3d9877fa6cc16195c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:46:27"},{"id":"6012b22f2c15d83646449dc9","resource_id":"600d50b3d9877fa6cc16195a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 12:46:39"},{"id":"6012b9a42c15d83646449dcb","resource_id":"600d50b3d9877fa6cc16195a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 13:18:28"},{"id":"6013098c3d0406908f70f1ec","resource_id":"6013098c3d0406908f70f1e9","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-28 18:59:24"},{"id":"601309993d0406908f70f1ee","resource_id":"6013098c3d0406908f70f1e9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 18:59:37"},{"id":"60130c063d0406908f70f1ef","resource_id":"5951f5fca366002ebd5dbef7","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:09:58"},{"id":"60130c233d0406908f70f1f0","resource_id":"5951f5fca366002ebd5dbef7","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:10:27"},{"id":"60130c3e3d0406908f70f1f2","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:10:54"},{"id":"60130cb53d0406908f70f1f3","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:12:53"},{"id":"60130cc23d0406908f70f1f5","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:13:06"},{"id":"60130cc63d0406908f70f1f7","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:13:10"},{"id":"60130ccb3d0406908f70f1f9","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:13:15"},{"id":"60130cf83d0406908f70f1fb","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:14:00"},{"id":"60130dce3d0406908f70f1fc","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:17:34"},{"id":"60130e113d0406908f70f1fe","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:18:41"},{"id":"60130e2c3d0406908f70f1ff","resource_id":"6013098c3d0406908f70f1e9","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2021-01-28 19:19:08"},{"id":"60130e353d0406908f70f201","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:19:17"},{"id":"60130e3c3d0406908f70f203","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:19:24"},{"id":"60130e4d3d0406908f70f205","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:19:41"},{"id":"60130e543d0406908f70f206","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:19:48"},{"id":"60130e6c3d0406908f70f208","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 19:20:12"},{"id":"60132de83d0406908f70f209","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 21:34:32"},{"id":"60132ded3d0406908f70f20a","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 21:34:37"},{"id":"60132e023d0406908f70f20e","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-28 21:34:58"},{"id":"60132e073d0406908f70f210","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 21:35:03"},{"id":"60132e0e3d0406908f70f212","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-28 21:35:10"},{"id":"6013dcc93d0406908f70f213","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-29 10:00:41"},{"id":"6013dce43d0406908f70f214","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-29 10:01:08"},{"id":"6013e2123d0406908f70f215","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-29 10:23:14"},{"id":"6013e7b23d0406908f70f216","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-29 10:47:14"},{"id":"60158e543d0406908f70f21b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-30 16:50:28"},{"id":"60158e733d0406908f70f21d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:50:59"},{"id":"60158e803d0406908f70f21f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:51:12"},{"id":"60158e8d3d0406908f70f221","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:51:25"},{"id":"60158e993d0406908f70f223","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:51:37"},{"id":"60158eb03d0406908f70f225","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:52:00"},{"id":"60158eb53d0406908f70f227","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:52:05"},{"id":"60158ec53d0406908f70f229","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:52:21"},{"id":"60158ef73d0406908f70f22b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:53:11"},{"id":"60158efe3d0406908f70f22d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:53:18"},{"id":"60158f013d0406908f70f22f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:53:21"},{"id":"60158f0d3d0406908f70f231","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:53:33"},{"id":"60158f193d0406908f70f233","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:53:45"},{"id":"60158f3d3d0406908f70f235","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:54:21"},{"id":"60158f453d0406908f70f237","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:54:29"},{"id":"60158f533d0406908f70f239","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:54:43"},{"id":"60158f623d0406908f70f23b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:54:58"},{"id":"60158f6a3d0406908f70f23d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:55:06"},{"id":"60158f6d3d0406908f70f23f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:55:09"},{"id":"60158f723d0406908f70f241","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:55:14"},{"id":"60158f803d0406908f70f243","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:55:28"},{"id":"60158f883d0406908f70f245","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:55:36"},{"id":"60158fbc3d0406908f70f247","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:56:28"},{"id":"60158fdb3d0406908f70f249","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:56:59"},{"id":"60158fe13d0406908f70f24b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:57:05"},{"id":"60158ff03d0406908f70f24d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:57:20"},{"id":"60158ffd3d0406908f70f24f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:57:33"},{"id":"601590073d0406908f70f251","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:57:43"},{"id":"6015901d3d0406908f70f253","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:58:05"},{"id":"601590293d0406908f70f255","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:58:17"},{"id":"6015902d3d0406908f70f257","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:58:21"},{"id":"601590433d0406908f70f259","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:58:43"},{"id":"601590563d0406908f70f25b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:59:02"},{"id":"601590613d0406908f70f25d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 16:59:13"},{"id":"601590c83d0406908f70f25f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:00:56"},{"id":"601590d03d0406908f70f261","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:01:04"},{"id":"601590e53d0406908f70f263","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:01:25"},{"id":"601590fb3d0406908f70f265","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:01:47"},{"id":"6015912f3d0406908f70f267","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:02:39"},{"id":"601591463d0406908f70f269","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:03:02"},{"id":"6015914d3d0406908f70f26b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:03:09"},{"id":"601591663d0406908f70f26d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:03:34"},{"id":"6015916c3d0406908f70f26f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:03:40"},{"id":"6015917e3d0406908f70f271","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:03:58"},{"id":"601591873d0406908f70f273","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:04:07"},{"id":"6015919b3d0406908f70f275","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:04:27"},{"id":"601591a33d0406908f70f277","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:04:35"},{"id":"601591b53d0406908f70f279","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:04:53"},{"id":"601591ca3d0406908f70f27b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:05:14"},{"id":"601591db3d0406908f70f27d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:05:31"},{"id":"601591df3d0406908f70f27f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:05:35"},{"id":"601592223d0406908f70f280","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:06:42"},{"id":"601592303d0406908f70f281","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:06:56"},{"id":"6015926c3d0406908f70f283","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:07:56"},{"id":"601593cc3d0406908f70f285","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:13:48"},{"id":"6015940c3d0406908f70f287","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:14:52"},{"id":"601594c73d0406908f70f289","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:17:59"},{"id":"601594f83d0406908f70f28b","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:18:48"},{"id":"6015951e3d0406908f70f28d","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:19:26"},{"id":"601595753d0406908f70f28f","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:20:53"},{"id":"601595983d0406908f70f291","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:21:28"},{"id":"601596a53d0406908f70f292","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:25:57"},{"id":"60159c39ffbf7ee2cb67d02e","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:49:45"},{"id":"60159dc1ffbf7ee2cb67d030","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:56:17"},{"id":"60159ddfffbf7ee2cb67d032","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:56:47"},{"id":"60159dfaffbf7ee2cb67d034","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 17:57:14"},{"id":"6015a4bbffbf7ee2cb67d03d","resource_id":"6015a471ffbf7ee2cb67d037","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:26:03"},{"id":"6015a4ccffbf7ee2cb67d03e","resource_id":"6015a471ffbf7ee2cb67d038","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:26:20"},{"id":"6015a4dcffbf7ee2cb67d03f","resource_id":"6015a471ffbf7ee2cb67d036","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:26:36"},{"id":"6015a4e5ffbf7ee2cb67d040","resource_id":"6015a471ffbf7ee2cb67d035","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:26:45"},{"id":"6015a4fcffbf7ee2cb67d041","resource_id":"6015a471ffbf7ee2cb67d035","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:27:08"},{"id":"6015a506ffbf7ee2cb67d042","resource_id":"6015a471ffbf7ee2cb67d036","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:27:18"},{"id":"6015a511ffbf7ee2cb67d043","resource_id":"6015a471ffbf7ee2cb67d036","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:27:29"},{"id":"6015a522ffbf7ee2cb67d044","resource_id":"6015a471ffbf7ee2cb67d038","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:27:46"},{"id":"6015a533ffbf7ee2cb67d045","resource_id":"6015a471ffbf7ee2cb67d037","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:28:03"},{"id":"6015a572ffbf7ee2cb67d046","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:29:06"},{"id":"6015a5c5ffbf7ee2cb67d048","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:30:29"},{"id":"6015a5c8ffbf7ee2cb67d04a","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:30:32"},{"id":"6015a5caffbf7ee2cb67d04c","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:30:34"},{"id":"6015a5cbffbf7ee2cb67d04e","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:30:35"},{"id":"6015a5f7ffbf7ee2cb67d04f","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:31:19"},{"id":"6015a63effbf7ee2cb67d050","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 18:32:30"},{"id":"6015c17effbf7ee2cb67d051","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:28:46"},{"id":"6015c186ffbf7ee2cb67d052","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:28:54"},{"id":"6015c1c2ffbf7ee2cb67d053","resource_id":"6015a471ffbf7ee2cb67d035","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:29:54"},{"id":"6015c1c9ffbf7ee2cb67d054","resource_id":"6015a471ffbf7ee2cb67d035","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:30:01"},{"id":"6015c1e8ffbf7ee2cb67d055","resource_id":"6015a471ffbf7ee2cb67d035","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:30:32"},{"id":"6015c1f3ffbf7ee2cb67d056","resource_id":"6015a471ffbf7ee2cb67d036","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:30:43"},{"id":"6015c1f7ffbf7ee2cb67d057","resource_id":"6015a471ffbf7ee2cb67d038","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:30:47"},{"id":"6015c1feffbf7ee2cb67d058","resource_id":"6015a471ffbf7ee2cb67d037","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:30:54"},{"id":"6015c209ffbf7ee2cb67d059","resource_id":"6015a471ffbf7ee2cb67d037","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:31:05"},{"id":"6015c20fffbf7ee2cb67d05a","resource_id":"6015a471ffbf7ee2cb67d038","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:31:11"},{"id":"6015c21effbf7ee2cb67d05b","resource_id":"6015a471ffbf7ee2cb67d035","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:31:26"},{"id":"6015c226ffbf7ee2cb67d05c","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:31:34"},{"id":"6015c28effbf7ee2cb67d05e","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:33:18"},{"id":"6015c2fbffbf7ee2cb67d060","resource_id":"6015c2fbffbf7ee2cb67d05f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-30 20:35:07"},{"id":"6015c324ffbf7ee2cb67d062","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:35:48"},{"id":"6015c332ffbf7ee2cb67d064","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:36:02"},{"id":"6015c334ffbf7ee2cb67d066","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:36:04"},{"id":"6015c34dffbf7ee2cb67d067","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:36:29"},{"id":"6015c357ffbf7ee2cb67d068","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 20:36:39"},{"id":"6015dd66ffbf7ee2cb67d069","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 22:27:50"},{"id":"6015dd77ffbf7ee2cb67d06a","resource_id":"6015a471ffbf7ee2cb67d035","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 22:28:07"},{"id":"6015ddffffbf7ee2cb67d06c","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 22:30:23"},{"id":"6015de29ffbf7ee2cb67d06e","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 22:31:05"},{"id":"6015ea0646f2deffd6a28196","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-30 23:21:42"},{"id":"6015ea1546f2deffd6a28198","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:21:57"},{"id":"6015ea2146f2deffd6a2819a","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:22:09"},{"id":"6015ea2e46f2deffd6a2819b","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:22:22"},{"id":"6015ea3746f2deffd6a2819d","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:22:31"},{"id":"6015ea4e46f2deffd6a2819f","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:22:54"},{"id":"6015ea5446f2deffd6a281a1","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:23:00"},{"id":"6015ea5846f2deffd6a281a3","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:23:04"},{"id":"6015ea5e46f2deffd6a281a5","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:23:10"},{"id":"6015ea6646f2deffd6a281a7","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:23:18"},{"id":"6015ea6e46f2deffd6a281a9","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:23:26"},{"id":"6015ea7346f2deffd6a281ab","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:23:31"},{"id":"6015ea8646f2deffd6a281ad","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:23:50"},{"id":"6015eaa046f2deffd6a281af","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:24:16"},{"id":"6015eaa346f2deffd6a281b0","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:24:19"},{"id":"6015eac546f2deffd6a281b1","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:24:53"},{"id":"6015eb3e46f2deffd6a281b3","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:26:54"},{"id":"6015eba146f2deffd6a281b4","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:28:33"},{"id":"6015ebc246f2deffd6a281b5","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:29:06"},{"id":"6015ebcb46f2deffd6a281b6","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:29:15"},{"id":"6015f16a46f2deffd6a281b7","resource_id":"6015c2fbffbf7ee2cb67d05f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-30 23:53:14"},{"id":"601685eb9bc5c52fcda58124","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 10:26:51"},{"id":"601685f49bc5c52fcda58125","resource_id":"60132e023d0406908f70f20b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 10:27:00"},{"id":"6016938e16926135029da160","resource_id":"6016938e16926135029da15f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 11:25:02"},{"id":"601693da16926135029da164","resource_id":"601693da16926135029da161","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 11:26:18"},{"id":"601693ff16926135029da166","resource_id":"601693da16926135029da161","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:26:55"},{"id":"6016941a16926135029da168","resource_id":"601693da16926135029da161","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:27:22"},{"id":"6016941e16926135029da169","resource_id":"601693da16926135029da161","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:27:26"},{"id":"6016942c16926135029da16d","resource_id":"6016942c16926135029da16a","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 11:27:40"},{"id":"6016943716926135029da16f","resource_id":"6016942c16926135029da16a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:27:51"},{"id":"6016944d16926135029da171","resource_id":"6016942c16926135029da16a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:28:13"},{"id":"6016944f16926135029da172","resource_id":"6016942c16926135029da16a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:28:15"},{"id":"6016946c16926135029da176","resource_id":"6016946c16926135029da173","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 11:28:44"},{"id":"6016947516926135029da178","resource_id":"6016946c16926135029da173","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:28:53"},{"id":"6016947d16926135029da17a","resource_id":"6016946c16926135029da173","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:29:01"},{"id":"6016948216926135029da17b","resource_id":"6016946c16926135029da173","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:29:06"},{"id":"6016949e16926135029da17f","resource_id":"6016949e16926135029da17c","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 11:29:34"},{"id":"601694a616926135029da181","resource_id":"6016949e16926135029da17c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:29:42"},{"id":"601694be16926135029da183","resource_id":"6016949e16926135029da17c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:30:06"},{"id":"601694c416926135029da184","resource_id":"6016949e16926135029da17c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:30:12"},{"id":"601694c916926135029da185","resource_id":"6016949e16926135029da17c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:30:17"},{"id":"60169b6416926135029da188","resource_id":"60169b6416926135029da186","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 11:58:28"},{"id":"60169b6416926135029da189","resource_id":"6016946c16926135029da173","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:58:28"},{"id":"60169b7916926135029da18c","resource_id":"60169b7916926135029da18a","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 11:58:49"},{"id":"60169b7916926135029da18d","resource_id":"6016942c16926135029da16a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 11:58:49"},{"id":"60169d7716926135029da18e","resource_id":"6016938e16926135029da15f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:07:19"},{"id":"60169d8916926135029da18f","resource_id":"6015c2fbffbf7ee2cb67d05f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:07:37"},{"id":"60169d8e16926135029da190","resource_id":"6012aa782c15d83646449dbd","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:07:42"},{"id":"60169d9516926135029da191","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:07:49"},{"id":"60169f8a79f121397cace803","resource_id":"6016938e16926135029da15f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:16:10"},{"id":"60169f8e79f121397cace804","resource_id":"6015c2fbffbf7ee2cb67d05f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:16:14"},{"id":"60169f9179f121397cace805","resource_id":"6012aa782c15d83646449dbd","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:16:17"},{"id":"60169f9479f121397cace806","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 12:16:20"},{"id":"6016c46379f121397cace80a","resource_id":"6016c46379f121397cace807","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 14:53:23"},{"id":"6016c46f79f121397cace80c","resource_id":"6016c46379f121397cace807","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:53:35"},{"id":"6016c47879f121397cace80e","resource_id":"6016c46379f121397cace807","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:53:44"},{"id":"6016c47b79f121397cace80f","resource_id":"6016c46379f121397cace807","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:53:47"},{"id":"6016c48979f121397cace813","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 14:54:01"},{"id":"6016c48d79f121397cace815","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:54:05"},{"id":"6016c49679f121397cace817","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:54:14"},{"id":"6016c49d79f121397cace819","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:54:21"},{"id":"6016c4a579f121397cace81a","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:54:29"},{"id":"6016c4fc79f121397cace81e","resource_id":"6016c4fc79f121397cace81b","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 14:55:56"},{"id":"6016c50579f121397cace820","resource_id":"6016c4fc79f121397cace81b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:56:05"},{"id":"6016c50d79f121397cace822","resource_id":"6016c4fc79f121397cace81b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:56:13"},{"id":"6016c52979f121397cace823","resource_id":"6016c4fc79f121397cace81b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:56:41"},{"id":"6016c52e79f121397cace827","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 14:56:46"},{"id":"6016c53679f121397cace829","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:56:54"},{"id":"6016c53f79f121397cace82b","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 14:57:03"},{"id":"6016c69a79f121397cace82c","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 15:02:50"},{"id":"6016c70179f121397cace830","resource_id":"6016c70179f121397cace82d","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 15:04:33"},{"id":"6016c70579f121397cace832","resource_id":"6016c70179f121397cace82d","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 15:04:37"},{"id":"6016c70a79f121397cace834","resource_id":"6016c70179f121397cace82d","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 15:04:42"},{"id":"6016c71379f121397cace838","resource_id":"6016c71379f121397cace835","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 15:04:51"},{"id":"6016c71979f121397cace83a","resource_id":"6016c71379f121397cace835","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 15:04:57"},{"id":"6016c71e79f121397cace83c","resource_id":"6016c71379f121397cace835","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 15:05:02"},{"id":"6016c73a79f121397cace83d","resource_id":"6016c71379f121397cace835","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 15:05:30"},{"id":"6016de0a79f121397cace841","resource_id":"6016de0a79f121397cace83e","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 16:42:50"},{"id":"6016de1379f121397cace843","resource_id":"6016de0a79f121397cace83e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:42:59"},{"id":"6016de1e79f121397cace845","resource_id":"6016de0a79f121397cace83e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:43:10"},{"id":"6016de3179f121397cace846","resource_id":"6016de0a79f121397cace83e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:43:29"},{"id":"6016dec779f121397cace84a","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-01-31 16:45:59"},{"id":"6016dee979f121397cace84b","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:46:33"},{"id":"6016df0479f121397cace84c","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:47:00"},{"id":"6016df1b79f121397cace84d","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:47:23"},{"id":"6016df2979f121397cace84e","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:47:37"},{"id":"6016df2f79f121397cace850","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:47:43"},{"id":"6016df4c79f121397cace851","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:48:12"},{"id":"6016dfef79f121397cace852","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 16:50:55"},{"id":"6016e70593726450d43371bb","resource_id":"6015ea0646f2deffd6a28192","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:21:09"},{"id":"6016e7a293726450d43371bc","resource_id":"6016c71379f121397cace835","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:23:46"},{"id":"6016e7b293726450d43371bd","resource_id":"6016949e16926135029da17c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:24:02"},{"id":"6016e80d93726450d43371be","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:25:33"},{"id":"6016e8cc93726450d43371bf","resource_id":"6016c46379f121397cace807","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:28:44"},{"id":"6016e90e93726450d43371c0","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:29:50"},{"id":"6016e91b93726450d43371c1","resource_id":"6016c4fc79f121397cace81b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:30:03"},{"id":"6016e92793726450d43371c2","resource_id":"6016946c16926135029da173","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:30:15"},{"id":"6016e99493726450d43371c4","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:32:04"},{"id":"6016e9c393726450d43371c6","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 17:32:51"},{"id":"6016fec993726450d43371c8","resource_id":"60158e543d0406908f70f218","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-01-31 19:02:33"},{"id":"6017d64c93726450d43371c9","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 10:22:04"},{"id":"6017d67193726450d43371ca","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 10:22:41"},{"id":"6017d67a93726450d43371cb","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 10:22:50"},{"id":"6017d68993726450d43371cc","resource_id":"600d50b3d9877fa6cc16195a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 10:23:05"},{"id":"6017e23b93726450d43371cd","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 11:12:59"},{"id":"6017e24493726450d43371ce","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 11:13:08"},{"id":"6017e44d93726450d43371cf","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 11:21:49"},{"id":"6017e45693726450d43371d0","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 11:21:58"},{"id":"6017e45e93726450d43371d1","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 11:22:06"},{"id":"6017e46293726450d43371d2","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-01 11:22:10"},{"id":"6019749493726450d43371d3","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 15:49:40"},{"id":"601974ae93726450d43371d5","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 15:50:06"},{"id":"601974d093726450d43371d6","resource_id":"600d50b3d9877fa6cc161960","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 15:50:40"},{"id":"6019c10193726450d43371d7","resource_id":"600d50b3d9877fa6cc161960","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 21:15:45"},{"id":"6019c12593726450d43371d8","resource_id":"601281442c15d83646449da9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 21:16:21"},{"id":"6019c12c93726450d43371d9","resource_id":"600d50b3d9877fa6cc161960","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 21:16:28"},{"id":"6019c13793726450d43371da","resource_id":"600d50b3d9877fa6cc16195c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 21:16:39"},{"id":"6019c16593726450d43371db","resource_id":"600d50b3d9877fa6cc16195c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-02 21:17:25"},{"id":"601a712a93726450d43371dc","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-03 09:47:22"},{"id":"601a713493726450d43371dd","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-03 09:47:32"},{"id":"601a715093726450d43371de","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-03 09:48:00"},{"id":"601a715d93726450d43371df","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-03 09:48:13"},{"id":"601a716593726450d43371e0","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-03 09:48:21"},{"id":"601bf9ea93726450d43371e2","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-04 13:43:06"},{"id":"601c72cf93726450d43371e3","resource_id":"6016c71379f121397cace835","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2021-02-04 22:18:55"},{"id":"601c72d393726450d43371e4","resource_id":"6016c70179f121397cace82d","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2021-02-04 22:18:59"},{"id":"601c73b52cc0b825a7ebdc4d","resource_id":"600d50b3d9877fa6cc16195a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-04 22:22:45"},{"id":"601c73bb2cc0b825a7ebdc4e","resource_id":"600d50b3d9877fa6cc16195a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-04 22:22:51"},{"id":"601d1c65f4127f2e0e16ec97","resource_id":"600d50b3d9877fa6cc16195e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-05 10:22:29"},{"id":"601d1d4df4127f2e0e16ec98","resource_id":"6016de0a79f121397cace83e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-05 10:26:21"},{"id":"601d1d7cf4127f2e0e16ec9a","resource_id":"6016de0a79f121397cace83e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-05 10:27:08"},{"id":"601d1e2e133c3f5d039aabc1","resource_id":"6016de0a79f121397cace83e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-05 10:30:06"},{"id":"601e5cc8133c3f5d039aabc3","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 09:09:28"},{"id":"601e6a91133c3f5d039aabc5","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:08:17"},{"id":"601e6ab8133c3f5d039aabc7","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:08:56"},{"id":"601e6acb133c3f5d039aabc9","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:09:15"},{"id":"601e6acf133c3f5d039aabcb","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:09:19"},{"id":"601e6aea133c3f5d039aabcd","resource_id":"601281522c15d83646449dad","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:09:46"},{"id":"601e6b06133c3f5d039aabcf","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:10:14"},{"id":"601e6b0d133c3f5d039aabd1","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:10:21"},{"id":"601e6b1c133c3f5d039aabd3","resource_id":"60105ed4297b11b3964ca91e","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:10:36"},{"id":"601e6b34133c3f5d039aabd4","resource_id":"60169b6416926135029da186","resource_type":"tag","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2021-02-06 10:11:00"},{"id":"601e6b3a133c3f5d039aabd5","resource_id":"60169b7916926135029da18a","resource_type":"tag","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2021-02-06 10:11:06"},{"id":"601e6b45133c3f5d039aabd6","resource_id":"600d50b2d9877fa6cc161900","resource_type":"tag","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2021-02-06 10:11:17"},{"id":"601e6b54133c3f5d039aabd7","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:11:32"},{"id":"601e6b64133c3f5d039aabd8","resource_id":"6012aa782c15d83646449dbd","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:11:48"},{"id":"601e6b72133c3f5d039aabd9","resource_id":"6016938e16926135029da15f","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-06 10:12:02"},{"id":"601ff1b4133c3f5d039aabda","resource_id":"6016dec779f121397cace847","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-07 13:57:08"},{"id":"6021631c75118a30e769305e","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-08 16:13:16"},{"id":"6023b3a7c7acea67e5fd5879","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2021-02-10 10:21:27"},{"id":"6023b3d8c7acea67e5fd587a","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 10:22:16"},{"id":"6023b4c6c7acea67e5fd587c","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 10:26:14"},{"id":"6023b4cfc7acea67e5fd587e","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 10:26:23"},{"id":"6023b547c7acea67e5fd5880","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 10:28:23"},{"id":"6023b54ec7acea67e5fd5882","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 10:28:30"},{"id":"6023b57cc7acea67e5fd5884","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 10:29:16"},{"id":"60241dd1b24727ad1b59e3a5","resource_id":"6016c4fc79f121397cace81b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 17:54:25"},{"id":"60241e66b24727ad1b59e3a6","resource_id":"6016c4fc79f121397cace81b","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 17:56:54"},{"id":"60241e70b24727ad1b59e3a7","resource_id":"6016c52e79f121397cace824","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 17:57:04"},{"id":"60241e7bb24727ad1b59e3a8","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 17:57:15"},{"id":"60241e84b24727ad1b59e3aa","resource_id":"6016c48979f121397cace810","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 17:57:24"},{"id":"60242d80b24727ad1b59e3ab","resource_id":"6023b3a7c7acea67e5fd5876","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-10 19:01:20"},{"id":"60294c8bb24727ad1b59e3ad","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 16:15:07"},{"id":"60294c94b24727ad1b59e3ae","resource_id":"60104cda297b11b3964ca908","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 16:15:16"},{"id":"6029563cb24727ad1b59e3af","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 16:56:28"},{"id":"6029563fb24727ad1b59e3b0","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 16:56:31"},{"id":"602974e6b24727ad1b59e3b1","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:07:18"},{"id":"602974e9b24727ad1b59e3b2","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:07:21"},{"id":"602974f9b24727ad1b59e3b4","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:07:37"},{"id":"602975c2b24727ad1b59e3b6","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:10:58"},{"id":"60297640b24727ad1b59e3b7","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:13:04"},{"id":"60297644b24727ad1b59e3b8","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:13:08"},{"id":"60297645b24727ad1b59e3ba","resource_id":"60104d59297b11b3964ca914","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:13:09"},{"id":"602976a1b24727ad1b59e3bb","resource_id":"600d50b3d9877fa6cc16195a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:14:41"},{"id":"6029787fb24727ad1b59e3be","resource_id":"600d50b3d9877fa6cc16195c","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-14 19:22:39"},{"id":"602a4092b24727ad1b59e3bf","resource_id":"60104cd0297b11b3964ca906","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-15 09:36:18"},{"id":"602a59732f39ad0fe7c5c802","resource_id":"600d50b3d9877fa6cc16195a","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2021-02-15 11:22:27"}],"emails":[],"email_batches":[],"email_recipients":[],"tokens":[],"snippets":[]}}]}